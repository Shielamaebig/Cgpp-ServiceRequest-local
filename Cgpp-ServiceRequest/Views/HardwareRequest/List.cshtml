
@{
    ViewBag.Title = "List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (User.IsInRole("HardwareAdmin") || User.IsInRole("SuperAdmin") || User.IsInRole("Developer"))
{
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body mb-4">
                    <h4 class="card-title d-flex fw-semibold">
                        Technicians Total Reported
                    </h4>
                    <div class="chartSize" style="height: 40%; width: 100%; ">
                        <canvas id="techReport" height="60"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12">
            <div class="card">
                <div class="card-body mb-4">
                    <h4 class="card-title d-flex fw-semibold">
                        Total Reported (Yearly)
                    </h4>
                    <div class="chartSize" style="height: 40%; width: 100%; ">
                        <canvas id="yearLyto" height="60"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12">
            <div class="card">
                <div class="card-body mb-4">
                    <div class="justify-content-between d-flex">
                        <div>
                            <h4 class="card-title d-flex fw-semibold">
                                Technician Monthly Reported
                            </h4>
                        </div>

                    </div>
                    <div class="chartSize" style="height: 40%; width: 100%; ">
                        <canvas id="techchart" height="60"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@if (User.IsInRole("DivisionApprover"))
{
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body mb-4">
                    <h4 class="card-title d-flex justify-content-between fw-semibold">
                        Total Users Request (Division)
                    </h4>
                    <h6 class="card-subtitle"></h6>
                    <div class="table-responsive">
                        <table id="techlistCount" class="table table-condensed">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Hardware Issue</th>
                                    <th>Year</th>
                                    <th>Month</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@if (User.IsInRole("DepartmentApprover"))
{
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body mb-4">
                    <h4 class="card-title d-flex justify-content-between fw-semibold">
                        Total Users Request (Department)
                    </h4>
                    <h6 class="card-subtitle"></h6>
                    <div class="table-responsive">
                        <table id="depttechlistCount" class="table table-condensed">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Hardware Issue</th>
                                    <th>Year</th>
                                    <th>Month</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


@section scripts {
    <script>
        $(document).ready(function () {
            HardwareList();

            $.ajax({
                type: 'GET',
                url: '/api/v2/hrdTech/count',

                success: function (res) {
                    var labels = [];
                    var data = [];
                    var colors = [];
                    var hoverColors = [];
                    var total = 0;
                    $.each(res, function (i, item) {
                        labels.push(item.name);
                        data.push(item.count);
                        colors.push('#' + (Math.random() * 0xFFFFFF << 0).toString(16));
                        total += item.data;
                    });
                    console.log(res);
                    var ctxP3 = document.getElementById("techReport").getContext('2d');
                    if (window.ctxP3 != undefined)
                        window.ctxP3.destroy();
                    window.ctxP2 = new Chart(ctxP3, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                data: data,
                                label: "",
                                backgroundColor: colors,
                                borderColor: colors,
                                borderWidth: 1,
                                fill: false
                            }]
                        },
                        options: {
                            legend: {
                                display: false
                            },
                            responsive: true,
                            maintainAspectRation: false,
                            events: false,
                            tooltips: {
                                enabled: false,
                                callbacks: {
                                    label: function (tooltipItem) {
                                        return tooltipItem.yLabel;
                                    }
                                }
                            },
                            title: {
                                display: true,
                                text: 'Bar Chart Total'
                            },
                            hover: {
                                animationDuration: 1
                            },
                            animation: {
                                duration: 1,
                                onComplete: function () {
                                    var chartInstance = this.chart,
                                        ctx = chartInstance.ctx;
                                    ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontSize, Chart.defaults.global.defaultFontStyle, Chart.defaults.global.defaultFontFamily);
                                    ctx.textAlign = 'center';
                                    ctx.textBaseline = 'bottom';

                                    this.data.datasets.forEach(function (dataset, i) {
                                        var meta = chartInstance.controller.getDatasetMeta(i);
                                        meta.data.forEach(function (bar, index) {
                                            var data = dataset.data[index];
                                            ctx.fillText(data, bar._model.x, bar._model.y - 5);
                                        });
                                    });
                                }
                            }
                        }
                    });
                },
                //if failed
                error: function (data) {

                    // toastr.info("Success")
                }
            });

            $.ajax({
                type: 'GET',
                url: '/api/v2/alltech/count',
                success: function (res) {
                    var labels = [];
                    var data = [];
                    var total = 0;

                    $.each(res, function (i, item) {
                        labels.push(moment(item.month, 'M').format('MMMM'));
                        data.push(item.count);
                        total += item.data;
                    });


                    //console.log(data);
                    new Chart(document.getElementById("techchart"), {
                        type: 'line',
                        data: {
                            labels: labels,
                            datasets: [
                                {
                                    data: data,
                                    label: "Total",
                                    borderColor: "#3cba9f",
                                    fill: false
                                }]
                        },
                        options: {
                            legend: {
                                display: false
                            },
                            title: {
                                display: true,
                                text: 'Line Chart Monthly (2023)'
                            }
                        }
                    });
                }

            });

            $.ajax({
                type: 'GET',
                url: '/api/v2/AllYearly/count',

                success: function (res) {
                    var labels = [];
                    var data = [];
                    var colors = [];
                    var hoverColors = [];
                    var total = 0;
                    $.each(res, function (i, item) {
                        labels.push(item.year);
                        data.push(item.count);
                        colors.push('#' + (Math.random() * 0xFFFFFF << 0).toString(16));
                        total += item.data;
                    });
                    console.log(res);
                    var ctxP3 = document.getElementById("yearLyto").getContext('2d');
                    if (window.ctxP3 != undefined)
                        window.ctxP3.destroy();
                    window.ctxP2 = new Chart(ctxP3, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                data: data,
                                label: "",
                                backgroundColor: colors,
                                borderColor: colors,
                                borderWidth: 1,
                                fill: false
                            }]
                        },
                        options: {
                            legend: {
                                display: false
                            },
                            responsive: true,
                            maintainAspectRation: false,
                            events: false,
                            tooltips: {
                                enabled: false,
                                callbacks: {
                                    label: function (tooltipItem) {
                                        return tooltipItem.yLabel;
                                    }
                                }
                            },
                            title: {
                                display: true,
                                text: 'Bar Chart Total'
                            },
                            hover: {
                                animationDuration: 1
                            },
                            animation: {
                                duration: 1,
                                onComplete: function () {
                                    var chartInstance = this.chart,
                                        ctx = chartInstance.ctx;
                                    ctx.font = Chart.helpers.fontString(Chart.defaults.global.defaultFontSize, Chart.defaults.global.defaultFontStyle, Chart.defaults.global.defaultFontFamily);
                                    ctx.textAlign = 'center';
                                    ctx.textBaseline = 'bottom';

                                    this.data.datasets.forEach(function (dataset, i) {
                                        var meta = chartInstance.controller.getDatasetMeta(i);
                                        meta.data.forEach(function (bar, index) {
                                            var data = dataset.data[index];
                                            ctx.fillText(data, bar._model.x, bar._model.y - 5);
                                        });
                                    });
                                }
                            }
                        }
                    });
                },
                //if failed
                error: function (data) {

                    // toastr.info("Success")
                }
            });


        });
    </script>
}
