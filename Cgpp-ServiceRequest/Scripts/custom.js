$(document).ready(function () {
    Logout();
    signout();
    LoginChecker();
    GetToken();

    //localStorage.setItem("dark-mode", "false");
    //if (localStorage.getItem("dark-mode") == "false") {
    //    console.log("tomzy")
    //}
    //Logout sidenav
    function Logout() {
        // apply function to all elements with class logout

        $('#logout').click(function () {
            // modal please wait
            $('#pleasewait').modal('show');

            var id = $('#logout').attr('data-id');
            //alert(id);

            $.ajax({
                type: 'POST',
                url: '/api/Account/ChangeLogStatusToFalse/' + id,
                headers: {
                    'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                },
                success: function (data) {

                    setTimeout(function () {
                        localStorage.removeItem('access_token');
                        localStorage.removeItem('username');
                        // redirect to login page
                    }, 2000),
                        setTimeout(function () {
                            window.location.href = "/Login";
                        }, 3000);
                },
                error: function (data) {

                }
            });
        });
    }

    //signout dropdown (Name)
    function signout() {
        $('#signout').click(function () {
            $('#pleasewait').modal('show');
            var id = $('#signout').attr('data-id');
            //alert('id', id);
            $.ajax({
                type: 'POST',
                url: '/api/Account/ChangeLogStatusToFalse/' + id,
                headers: {
                    'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                },
                success: function (data) {

                    setTimeout(function () {
                        localStorage.removeItem('access_token');
                        localStorage.removeItem('username');
                        // redirect to login page
                    }, 2000),
                        setTimeout(function () {
                            window.location.href = "/Login";
                        }, 3000);
                },
                error: function (data) {

                }
            })
        });
    }

    function BrowserAlert() {
        //console.log('');
        // remove localstorage on windows close 
        window.onbeforeunload = function () {
            localStorage.removeItem('access_token');
            localStorage.removeItem('username');
        }
    }

    //check if name in nav is existing
    function LoginChecker() {
        // find element with class .side-user-name
        var side = $('#side-name');
        // count text count 
        // trim spaces
        var trim = side.text().trim();
        console.log('trim', trim);
        if (trim.length == '') {

            localStorage.removeItem('access_token');
            localStorage.removeItem('username');
            $('#sessionExpired').modal('show');
            $('#sessionExpired').on('hidden.bs.modal', function () {
                window.location.href = "/Login";
            }
            );
        }
    }


    //if no username/token log out
    function GetToken() {
        var token = localStorage.getItem('access_token');
        var username = localStorage.getItem('username');

        if (token == null) {
            $('#sessionExpired').modal('show');
            $('#sessionExpired').on('hidden.bs.modal', function () {
                window.location.href = "/Login";
            });
        }
        else if (token == '') {
            $('#sessionExpired').modal('show');
        }
        else {
            console.log('username', username);
        }
        window.onload = function () {
            if (token == null) {
                $('#sessionExpired').modal('show');

            }
        }
    }
    //Image Logged
    $.ajax({
        type: 'GET',
        url: '/api/users/GetUserImage',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('#userLoggedImg').attr('src',  data);
        },
        error: function (data) {
            //  toastr.error("error");
        }
    });

    $.ajax({
        type: 'GET',
        url: '/api/users/GetUserImage',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('#userLoggedImg3').attr('src',  data);
        },
        error: function (data) {
            //  toastr.error("error");
        }
    });

    //Image UserProfile
    $.ajax({
        type: 'GET',
        url: '/api/users/GetUserImage',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            console.log(data);
            $('#userProfileImg').attr('src',  data);
        },
        error: function (data) {
            //  toastr.error("error");
        }
    })

    $.ajax({
        type: 'GET',
        url: '/api/users/GetUserFullName',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {

            $('#side-name').text(data);
        },
        //if failed
        error: function (data) {

        }
    });

    //Users HardwareRequest List Function

});
//End of Ajax

function GetDepartments() {
    var Datatables;
    Datatables = $("#departmentList").DataTable({
        ajax: {
            url: "/api/dept/get",
            dataSrc: "",
            headers: {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            }
        },
        autoWidth: false,
        columns: [

            {
                data: "dateAdded",
            },
            {
                data: "name",
            },
            {
                data: "ftpId",
            },
            {
                data: null,
                render: function (data) {
                    return '<button class="btn btn-success btn-sm edit" data-id="' + data.id + '"><i class="fas fa-edit"></i> Edit</button>'
                        + '  <button class="btn btn-danger btn-sm delete" data-id="' + data.id + '"><i class="fas fa-trash"></i> Delete</button>'
                },
                "orderable": false,
            }

        ]
    });

    $('#btnSubmit').click(function (e) {
        e.preventDefault();

        //find name
        var name = $('input[name=name]').val();
        var ftpId = $('select[name=ftpId]').val();
        // data
        var data = {
            name: name,
            ftpId: ftpId
        };
        $.ajax({
            type: 'POST',
            url: '/api/dept/save',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $("#name").val("");

                $('#departmentAdd').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Department Successfully Added!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Name Already Exist In the Database/ Invalid")
            }
        });
    });

    //Get edit
    $("#departmentList").on('click', '.edit', function () {
        var id = $(this).attr('data-id');
        var url = '/api/dept/getdepartment/' + id;
        //alert(id);
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $("#editmodal").modal('show');
                $('#edit').find('input[name="id"]').val(data.id);
                $('#edit').find('input[name="name"]').val(data.name);
                $('#edit').find('select[name="ftpId"]').val(data.ftpId);
            },
            //if failed
            error: function (data) {
                // console.log(data, data.id, data.name);
                toastr.error("error")
            }
        })
    })

    $("#UpdateRecord").click(function (e) {
        e.preventDefault();
        var data = {
            name: $('#edit').find('input[name=name]').val(),
            ftpId: $('#edit').find('select[name=ftpId]').val(),
        };
        var id = $('#edit').find('input[name="id"]').val();
        $.ajax({
            type: 'PUT',
            url: '/api/dept/updatedept/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#editmodal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Data Successfully Updated!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Saving")
            }
        });
    });

    $('#departmentList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        var url = '/api/department/Delete/' + id;
        $.ajax({
            // confirm before delete
            beforeSend: function (xhr) {
                // use bootbox
                bootbox.confirm({
                    message: "Are you sure you want to delete this record?",
                    buttons: {
                        // yes and no sequence
                        confirm: {
                            label: 'Yes',
                            className: 'btn-success btn-sm'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger btn-sm'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                type: 'DELETE',
                                url: url,
                                headers: {
                                    'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                                },
                                success: function (data) {
                                    //show please wait modal
                                    $('#pleasewait').modal('show');
                                    //show toastr after 3
                                    setTimeout(function () {
                                        toastr.success("Department Successfully Deleted!");
                                    }, 2000);
                                    setTimeout(function () {
                                        window.location.reload();
                                    }, 3000);
                                },
                                //if failed
                                error: function (data) {
                                    toastr.error("Error Deleting Data")
                                }
                            });
                        }
                    }
                });

            },
        });
    });
}
//Start of UsersHardware Request
function GetHardwareRequest() {
    var Hardwaretable2 = $("#hardwareRequestList").DataTable({
        "ajax": {
            "url": "/api/v2/hr/user",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        // "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "fnInitComplete": function () {
            this.api()
                .columns([3])
                .every(function () {
                    var column = this;

                    // Create select element and listener
                    var select = $('<select class="form-control"><option value="">Show All</option></select>')
                        .appendTo($(column.header()).empty())
                        .on('change', function () {
                            var val = DataTable.util.escapeRegex($(this).val());
                            $('#pleasewait').modal('show');
                            setTimeout(function () {
                                $('#pleasewait').modal('hide');
                            }, 700);
                            $('#hardwareRequestList').DataTable().search(this.value).draw();
                        });

                    // Add list of options
                    column
                        .data()
                        .unique()
                        .sort()
                        .each(function (d, j) {
                            select.append('<option value="' + d + '">' + d + '</option>');
                        });
                });

        },
         "searching" : " true",
         "searchDelay" : 1000,
        // order by desc dateuploaded
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"
        },

        "autoWidth": false,
        "columns": [
            {
                data: "ticket",
                render: function (data) {
                    return '<span class="shadow badge bg-primary">' + data + '</span>'
                }, 
            },
            {
                data: "dateAdded"
            },
            {
                data: "hardwareName"
            },
            {
                data: "status",
                render: function (data, type, row) {
                    if (data == "Open") {
                        return '<span class="shadow badge bg-open">' + data + '</span>'
                    }
                    if (data == "Manual") {
                        return '<span class="shadow badge bg-info">In Progress</span>'
                    }
                    else if (data == "In Progress") {
                        return '<span class="shadow badge bg-info">' + data + '</span>'
                    }
                    else if (data == "Pending Assigned Request") {
                        return '<span class="shadow badge bg-info">In Progress</span>'
                    }
                    else if (data == "Resolved") {
                        return '<span class="shadow badge bg-success">' + data + '</span>'
                    }
                    else if (data == "Verified") {
                        return '<span class="shadow badge bg-primary">'+data+'</span>'
                    }
                    else if (data == "Approved") {
                        return '<span class="shadow badge bg-warning">'+data+'</span>'
                    }
                    else if (data == "Cancel") {
                        return '<span class="shadow badge bg-danger">' + data + '</span>'
                    }
                }
            },
            {
                data: null
            }
        ],
        columnDefs:
            [{
                targets: [-1], render: function (a, b, data, d) {
                    if (data.status == "Open") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-secondary btn-sm edit me-2" data-id="' + data.id + '"><i class="bi bi-person-check"></i> Edit </button>' +
                            '<button class="btn btn-outline-danger btn-sm delete me-2" data-id="' + data.id + '"><i class="bi bi-trash3"></i> Cancel </button>' 
                    }
                    else if (data.status == "In Progress") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm report me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.status == "Manual") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm report me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.status == "Pending Assigned Request") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm report me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.status == "Resolved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm report me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.status == "Verified") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm report me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.status == "Approved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm report me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.status == "Cancel") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }

            },
            orderable: false,
            width: "240px"
        }]
    });

    setInterval (function () {
        Hardwaretable2.ajax.reload();
    }, 10000);

    $('#hardwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/userRequest/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, row) {
                $('#viewmodal').modal('show'); dateAdded
                $('#viewRequest').find('input[name="ticket"]').val(data.ticket);
                $('#viewRequest').find('input[name="dateAdded"]').val(data.dateAdded);
                $('#viewRequest').find('input[name="fullName"]').val(data.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.divisionName);
                $('#viewRequest').find('input[name="hardwareName"]').val(data.hardwareName);
                $('#viewRequest').find('input[name="modelName"]').val(data.modelName);
                $('#viewRequest').find('input[name="uniTypes"]').val(data.uniTypes);
                $('#viewRequest').find('input[name="brandName"]').val(data.brandName);
                $('#viewRequest').find('input[name="FileName"]').val(data.documentLabel);
                $('#viewRequest').find('textarea[name="description"]').val(data.description);
                $.ajax({
                    type: 'GET',
                    url: '/api/hardwareRequest/GetRequestbyId/' + id,
                    success: function (data, row) {
                        $('#addImage').find('input[name="id"]').val(data.id);

                        if (data.status == "Open")
                            $('.update-image').prop('disabled', false)

                        else if (data.status == "In Progress")
                            $('.update-image').prop('disabled', true)

                        else if (data.status == "Accepts Request")
                            $('.update-image').prop('disabled', true)

                        else if (data.status == "Manual")
                            $('.update-image').prop('disabled', true)

                        else if (data.status == "Resolved")
                            $('.update-image').prop('disabled', true)

                        else if (data.status == "Verified")
                            $('.update-image').prop('disabled', true)

                        else if (data.status == "Approved")
                            $('.update-image').prop('disabled', true)
                        else if (data.status == "Cancel")
                            $('.update-image').prop('disabled', true)
                        else
                            $('.update-image').prop('disabled', false)


                        var uploadTableuser = $('#UploadList').DataTable({
                            destroy: true,

                            ajax: {
                                url: "/api/v2/userUploads/" + id,
                                dataSrc: '',
                                headers: {
                                    "Authorization": "Bearer " + localStorage.getItem('access_token')
                                }
                            },
                            searching: false,
                            ordering: false,
                            columns: [
                                {
                                    data: "dateAdded"
                                },
                                {
                                    data: "documentBlob",
                                    render: function (data, type, row, meta) {
                                        var fileType = row.fileName.split('.').pop();
                                        if (fileType == 'pdf') {
                                            return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                        } else if (fileType == 'doc' || fileType == 'docx') {
                                            return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                        } else if (fileType == 'xls' || fileType == 'xlsx') {
                                            return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                        } else if (fileType == 'ppt' || fileType == 'pptx') {
                                            return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                        } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                            return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                        } else {
                                            return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                        }
                                        
                                    },
                                    className: "text-center"

                                },
                                {
                                    // download link by using anchor link only
                                    data: "documentBlob",
                                    render: function (data, type, row) {
                                        var f = new Blob([s2ab(atob(data))], { type: "" });
                                        var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                        var newF = URL.createObjectURL(f);
                                        urls.push(newF);
                                        var fileType = row.fileName.split('.').pop();

                                        //    check file if is image type
                                        if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                            // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                            //     +
                                            return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                        }
                                        else {
                                            return ''

                                        }
                                    },
                                    className: "text-center"
                                },
                                {
                                    data: null,
                                }
                            ],
                            columnDefs:
                                [{
                                    targets: [-1], render: function (a, b, data, d) {
                                        if (data.hardwareUserRequest.status == "Open") {
                                            return '<button type="button" class="btn btn-outline-danger btn-sm delete me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> delete </button>';
                                        }
                                        else if (data.hardwareUserRequest.status == "In Progress") {
                                            return ''
                                        }
                                        else if (data.hardwareUserRequest.status == "Accepts Request") {
                                            return ''
                                        }
                                        else if (data.hardwareUserRequest.status == "Manual") {
                                            return ''
                                        }
                                        else if (data.hardwareUserRequest.status == "Resolved") {
                                            return ''
                                        }
                                        else if (data.hardwareUserRequest.status == "Verified") {
                                            return ''
                                        }
                                        else if (data.hardwareUserRequest.status == "Approved") {
                                            return ''
                                        }
                                        else if (data.hardwareUserRequest.status == "Cancel") {
                                            return ''
                                        }
                                    },
                                    orderable: false,
                                    width: "280px"
                                }]

                        });

                        $('#upload2').find('input[name=hardwareUserRequestId]').val(data.id);
                        // refresh page on modal close
                        $('#viewmodal').on('hidden.bs.modal', function () {
                            // remove id on select
                            $('select[name=hardwareUserRequestId]').find('option[value=' + data.id + ']').remove();
                        });
                    }

                });
            }
        });
    });
    $('#UploadList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        bootbox.confirm({
            message: "Are you sure you want to delete this image?",
            centerVertical: true,
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success btn-sm'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger btn-sm '
                }
            },
            callback: function (result) {
                if (result) {
                    $.ajax({

                        type: 'DELETE',
                        url: '/api/v1/deleteImage/' + id,
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        },
                        success: function (data) {
                            $('#pleasewait').modal('show');

                            $('#viewmodal').modal('hide');
                            setTimeout(function () {
                                toastr.success("File Successfully Deleted!");
                                // hide please wait modal
                            }, 2000);
                            setTimeout(function () {
                                $('#pleasewait').modal('hide');
                                window.location.reload();
                            }, 3000);
                        }
                    });
                }
            }
        });
    });


    $('#upload2').submit(function (e) {
        e.preventDefault();
        var formData = new FormData(this);
        $.ajax({
            url: '/api/v2/saveFile',
            type: 'POST',
            data: formData,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                $('#addimageModal').modal('hide');

                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("File Successfully Added!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                }, 3000);
            },
            cache: false,
            contentType: false,
            processData: false,
            error: function (data) {
                toastr.error("Error Updating File")
            }
        });

    });

    $('#hardwareRequestList').on('click', '.edit', function () {
        var id = $(this).attr('data-id');
        var url = '/api/userRequest/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#editRequest').modal('show');
                $('#EditRequest').find('input[name="id"]').val(data.id);
                $('#EditRequest').find('input[name="brandName"]').val(data.brandName);
                $('#EditRequest').find('input[name="modelName"]').val(data.modelName);
                $('#EditRequest').find('input[name="FileName"]').val(data.documentLabel);
                $('#EditRequest').find('select[name="unitTypeId"]').val(data.unitTypeId);
                $('#EditRequest').find('select[name="hardwareId"]').val(data.hardwareId);
                $('#EditRequest').find('textarea[name="description"]').val(data.description);
            }
        })
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/unitType',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $.each(data, function (index, value) {
                $('select[name=unitTypeId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/hardware',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=hardwareId]').append('<option value=""> Select Hardware Service Category</option>');
            $.each(data, function (index, value) {
                $('select[name=hardwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    $('#UpdateRequest').click(function (e) {
        e.preventDefault();

        var id = $('#EditRequest').find('input[name="id"]').val();
        var data = {
            brandName: $('#EditRequest').find('input[name=brandName]').val(),
            hardwareId: $('#EditRequest').find('select[name=hardwareId]').val(),
            modelName: $('#EditRequest').find('input[name=modelName]').val(),
            documentLabel: $('#EditRequest').find('input[name=FileName]').val(),
            unitTypeId: $('#EditRequest').find('select[name=unitTypeId]').val(),
            hardwareId: $('#EditRequest').find('select[name=hardwareId]').val(),
            description: $('#EditRequest').find('textarea[name=description]').val(),
        }
        $.ajax({
            type: 'PUT',
            url: '/api/hardwareRequest/Request/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                
                $('#editRequest').modal('hide');

                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success(" Successfully Update Request!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    table2.ajax.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                console.log(data.id);
                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
    $('#hardwareRequestList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        var url = '/api/userRequest/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#CancelRequestModal').modal('show');
                $('#cancelRequest').find('input[name="id"]').val(data.id);
            }
        });
    });
    $('#cancel').click(function (e) {
        e.preventDefault();
        var id = $('#cancelRequest').find('input[name="id"]').val();
        var data = $('#cancelRequest').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/hardwareRequest/CancelRequest/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#CancelRequestModal').modal('hide');

                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("File Successfully Deleted!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    table2.ajax.reload();
                    $('#pleasewait').modal('hide');
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#hardwareRequestList').on('click', '.report', function () {
        var id = $(this).attr('data-id');
        var url = '/api/userRequest/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#ReportModal').modal('show');

                var refId = $('#hardwareUserRequestId').val(data.id)
                var uploadTable = $('#techList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertech/getbyId/" + id,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,
        
                    columns: [
                        {
                            data: "dateAssigned"
                        },
                        {
                            data: "technicianName"
                        }

                    ]
                });
                var table = $('#techReport').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertask/getbyId/" + id,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "hardwareUserRequest.ticket", 
                            render: function (data, type, row) {
                                return '<span class="badge shadow bg-primary">' + data +'</span>'
                            }
                        },
                        {
                            data: "hardwareUserRequest.fullName"
                        },
                        {
                            data: "hardwareTaskId", 
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return '<span class="badge shadow bg-secondary">Requested</span>'
                                }
                                else if (data == 2) {
                                    return '<span class="badge shadow bg-info">Assigned</span>'
                                }
                                else if (data == 3) {
                                    return '<span class="badge shadow bg-success">Reported</span>'
                                }
                                else if (data == 4) {
                                    return '<span class="badge shadow bg-primary">Verified</span>'
                                }
                                else if (data == 5) {
                                    return '<span class="badge shadow bg-danger">Approved</span>'
                                }
                            }
                        },

                        {
                            data: null,

                        },
                    ],
                    columnDefs:
                        [{
                            targets: [-1], render: function (a, b, data, d) {
                                if (data.hardwareTask.id == 1) {
                                    return ''
                                }
                                else if (data.hardwareTask.id ==  2 ) {
                                    return  '';
                                }
                                else if (data.hardwareTask.id == 3) {
                                    return '<button class="btn btn-outline-primary btn-sm view1 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';

                                }
                                else if (data.hardwareTask.id == 4) {
                                    return '<button class="btn btn-outline-primary btn-sm view2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                                else if (data.hardwareTask.id == 5) {
                                    return '<button class="btn btn-outline-primary btn-sm view3 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                            },
                            orderable: false,
                            width: "240px"
                        }]

                });
               
            },

            
        });
    });
    //view 1
    $('#techReport').on('click', '.view1', function () {
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/techAssign/get/" + id,
            success: function (data) {
                $('#ReportModal').modal('hide');
                $('#transactionModal').modal('show');
                $('#techForm3').find('input[name="hardwareName"]').val(data.technicianReport.hardwareName);
                $('#techForm3').find('input[name="uniTypes"]').val(data.technicianReport.uniTypes);
                $('#techForm3').find('input[name="brandName"]').val(data.technicianReport.brandName);
                $('#techForm3').find('input[name="modelName"]').val(data.technicianReport.modelName);
                $('#techForm3').find('input[name="findingName"]').val(data.technicianReport.findingName);
                $('#techForm3').find('input[name="possibleCause"]').val(data.technicianReport.possibleCause);
                $('#techForm3').find('input[name="serialNumber"]').val(data.technicianReport.serialNumber);
                $('#techForm3').find('input[name="controlNumber"]').val(data.technicianReport.controlNumber);
                $('#techForm3').find('textarea[name="remarks"]').val(data.technicianReport.remarks);
                $('#techForm3').find('input[name="technicianName"]').val(data.technicianReport.technicianName);
                $('#techForm3').find('input[name="dateStarted"]').val(data.technicianReport.dateStarted);
                $('#techForm3').find('input[name="dateEnded"]').val(data.technicianReport.dateEnded);
                $('#techForm3').find('input[name="technicianReport"]').val(data.technicianReport.id);
                $('#techForm3').find('input[name="dateAssigned"]').val(data.technicianReport.dateAssigned);
                //$('#techForm3').find('input[name="dateVerified"]').val(data.hardwareVerify.dateVerified);
                //$('#techForm3').find('input[name="name"]').val(data.technicianReport.adminName); 
                //$('#techForm3').find('input[name="nameApproval"]').val(data.technicianReport.superName);
                ////$('#techForm3').find('input[name="DateApprove"]').val(data.hardwareApproval.DateApprove);
                $('#techForm3').find('input[name="technicianReport"]').val(data.technicianReport.id);
                var techId = $('#techForm3').find('input[name="technicianReport"]').attr('value');
                /*$('input[name="technicianReportId"]').attr('value');*/

                var uploadTable2 = $('#UploadList3').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/techUploads/get/" + techId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },

                    ],
                });

                $('#upload2').find('input[name=technicianReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=technicianReportId]').find('option[value=' + data.id + ']').remove();
                });
            }
        });
    });

    //view 2
    $('#techReport').on('click', '.view2', function () {
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/techAssign/get/" + id,
            success: function (data) {
                $('#ReportModal').modal('hide');
                $('#transactionModal2').modal('show');
                $('#techForm4').find('input[name="hardwareName"]').val(data.technicianReport.hardwareName);
                $('#techForm4').find('input[name="uniTypes"]').val(data.technicianReport.uniTypes);
                $('#techForm4').find('input[name="brandName"]').val(data.technicianReport.brandName);
                $('#techForm4').find('input[name="modelName"]').val(data.technicianReport.modelName);
                $('#techForm4').find('input[name="findingName"]').val(data.technicianReport.findingName);
                $('#techForm4').find('input[name="possibleCause"]').val(data.technicianReport.possibleCause);
                $('#techForm4').find('input[name="serialNumber"]').val(data.technicianReport.serialNumber);
                $('#techForm4').find('input[name="controlNumber"]').val(data.technicianReport.controlNumber);
                $('#techForm4').find('textarea[name="remarks"]').val(data.technicianReport.remarks);
                $('#techForm4').find('input[name="technicianName"]').val(data.technicianReport.technicianName);
                $('#techForm4').find('input[name="dateStarted"]').val(data.technicianReport.dateStarted);
                $('#techForm4').find('input[name="dateEnded"]').val(data.technicianReport.dateEnded);
                $('#techForm4').find('input[name="technicianReport"]').val(data.technicianReport.id);
                $('#techForm4').find('input[name="dateAssigned"]').val(data.technicianReport.dateAssigned);
                $('#techForm4').find('input[name="dateVerified"]').val(data.hardwareVerify.dateVerified);
                $('#techForm4').find('input[name="name"]').val(data.hardwareVerify.name);
                //$('#techForm3').find('input[name="nameApproval"]').val(data.technicianReport.superName);
                //$('#techForm3').find('input[name="DateApprove"]').val(data.hardwareApproval.DateApprove);
                $('#techForm4').find('input[name="technicianReport"]').val(data.technicianReport.id);
                var techId = $('#techForm4').find('input[name="technicianReport"]').attr('value');
                /*$('input[name="technicianReportId"]').attr('value');*/

                var uploadTable2 = $('#UploadList4').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/techUploads/get/" + techId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },

                    ],
                });

                $('#upload2').find('input[name=technicianReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal2').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=technicianReportId]').find('option[value=' + data.id + ']').remove();
                });
            }
        });
    });

    //view 3
    $('#techReport').on('click', '.view3', function () {
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/techAssign/get/" + id,
            success: function (data) {
                $('#ReportModal').modal('hide');
                $('#transactionModal5').modal('show');
                $('#techForm5').find('input[name="hardwareName"]').val(data.technicianReport.hardwareName);
                $('#techForm5').find('input[name="uniTypes"]').val(data.technicianReport.uniTypes);
                $('#techForm5').find('input[name="brandName"]').val(data.technicianReport.brandName);
                $('#techForm5').find('input[name="modelName"]').val(data.technicianReport.modelName);
                $('#techForm5').find('input[name="findingName"]').val(data.technicianReport.findingName);
                $('#techForm5').find('input[name="possibleCause"]').val(data.technicianReport.possibleCause);
                $('#techForm5').find('input[name="serialNumber"]').val(data.technicianReport.serialNumber);
                $('#techForm5').find('input[name="controlNumber"]').val(data.technicianReport.controlNumber);
                $('#techForm5').find('textarea[name="remarks"]').val(data.technicianReport.remarks);
                $('#techForm5').find('input[name="technicianName"]').val(data.technicianReport.technicianName);
                $('#techForm5').find('input[name="dateStarted"]').val(data.technicianReport.dateStarted);
                $('#techForm5').find('input[name="dateEnded"]').val(data.technicianReport.dateEnded);
                $('#techForm5').find('input[name="technicianReport"]').val(data.technicianReport.id);
                $('#techForm5').find('input[name="dateAssigned"]').val(data.technicianReport.dateAssigned);
                $('#techForm5').find('input[name="dateVerified"]').val(data.hardwareVerify.dateVerified);
                $('#techForm5').find('input[name="name"]').val(data.technicianReport.adminName);
                $('#techForm5').find('input[name="nameApproval"]').val(data.hardwareApproval.nameApproval);
                $('#techForm5').find('input[name="dateApprove"]').val(data.hardwareApproval.dateApprove);
                $('#techForm5').find('input[name="technicianReport"]').val(data.technicianReport.id);
                var techId = $('#techForm5').find('input[name="technicianReport"]').attr('value');
                /*$('input[name="technicianReportId"]').attr('value');*/

                var uploadTable2 = $('#UploadList5').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/techUploads/get/" + techId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },

                    ],
                });

                $('#upload2').find('input[name=technicianReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal2').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=technicianReportId]').find('option[value=' + data.id + ']').remove();
                });
            }
        });
    });

    $('#ReportModal').on('click', '.info ', function () {
        var id = $(this).attr('data-id');
        var url = "/api/v2/UserTask/getbyId/" + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#ReportModal').modal('hide');
                $('#infoRequest').modal('show');
                $('#infoReq').find('input[name="hardwareName"]').val(data.hardwareUserRequest.hardwareName);
                $('#infoReq').find('input[name="uniTypes"]').val(data.hardwareUserRequest.uniTypes);
                $('#infoReq').find('input[name="brandName"]').val(data.hardwareUserRequest.brandName);
                $('#infoReq').find('input[name="modelName"]').val(data.hardwareUserRequest.modelName);
                $('#infoReq').find('input[name="FileName"]').val(data.hardwareUserRequest.documentLabel);
                $('#infoReq').find('textarea[name="description"]').val(data.hardwareUserRequest.description);
            }
        }); 
    });
}
//Start of Departments
function Departments() {
    var Datatables;
    Datatables = $("#departmentList").DataTable({
        ajax: {
            url: "/api/dept/get",
            dataSrc: "",
            headers: {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            }
        },
        autoWidth: false,
        columns: [

            {
                data: "dateAdded",
            },
            {
                data: "name",
            },

        ]
    });

    $('#btnSubmit').click(function (e) {
        e.preventDefault();

        //find name
        var name = $('input[name=name]').val();
        // data
        var data = {
            name: name,
        };
        $.ajax({
            type: 'POST',
            url: '/api/dept/save',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //toastr.success("Directory Successfully Added!");
                //Datatables.ajax.reload();
                //$("#departmentAdd").modal('hide');
                $("#name").val("");
                $('#departmentAdd').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Department Successfully Updated!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Name Already Exist In the Database/ Invalid")
            }
        });
    });

    //Get edit
    $("#departmentList").on('click', '.edit', function () {
        var id = $(this).attr('data-id');
        var url = '/api/dept/getdepartment/' + id;
        //alert(id);
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $("#editmodal").modal('show');
                $('#edit').find('input[name="id"]').val(data.id);
                $('#edit').find('input[name="name"]').val(data.name);
            },
            //if failed
            error: function (data) {
                // console.log(data, data.id, data.name);
                toastr.error("Error")
            }
        })
    })

    $("#UpdateRecord").click(function (e) {
        e.preventDefault();
        var data = {
            name: $('#edit').find('input[name=name]').val(),
        };
        var id = $('#edit').find('input[name="id"]').val();
        $.ajax({
            type: 'PUT',
            url: '/api/dept/updatedept/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                toastr.success("Data Successfully Updated!");
                Datatables.ajax.reload();
                $('#editmodal').modal('hide');

            },
            //if failed
            error: function (data) {
                toastr.error("Error")
            }
        });
    });


    $('#departmentList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        var url = '/api/department/Delete/' + id;
        $.ajax({
            // confirm before delete
            beforeSend: function (xhr) {
                // use bootbox
                bootbox.confirm({
                    message: "Are you sure you want to delete this record?",
                    buttons: {
                        // yes and no sequence

                        confirm: {
                            label: 'Yes',
                            className: 'btn-success btn-sm'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger btn-sm'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                type: 'DELETE',
                                url: url,
                                headers: {
                                    'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                                },
                                success: function (data) {
                                    //show please wait modal
                                    $('#pleasewait').modal('show');
                                    //show toastr after 3
                                    setTimeout(function () {
                                        toastr.success("Data Successfully Deleted!");
                                        // hide please wait modal
                                    }, 2000);
                                    setTimeout(function () {
                                        window.location.reload();
                                    }, 3000);
                                },
                                //if failed
                                error: function (data) {
                                    toastr.error("Error")
                                }
                            });
                        }
                    }
                });

            },
        });
    });


}
//Start of Division
function Divisions() {
    var Datatables;
    Datatables = $("#divisionList").DataTable({
        ajax: {
            type: "GET",
            url: "/api/divisions/getdivisions",
            dataSrc: "",
        },
        autoWidth: false,
        ordering: false,
        columns: [
            {
                "data": "dateAdded"

            },
            { "data": "name" },

            {
                "data": "departmentsId",
                render: function (data, type, row) {
                    return row.departments.name;
                }
            },
            {
                data: null,
                render: function (data) {
                    return '<button class="btn btn-success btn-sm edit" data-id="' + data.id + '"><i class="fas fa-edit"></i> Edit</button>'
                        + '  <button class="btn btn-danger btn-sm delete" data-id="' + data.id + '"><i class="fas fa-trash"></i> Delete</button>'
                },
                "orderable": false,
            },
        ],

    });

    $('.departments').select2({
        theme: 'bootstrap-5',
        dropdownParent: $('#divisionAdd .modal-content')
    });

    //get department
    $.ajax({
        type: 'GET',
        url: '/api/div/department',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=departmentsId]').append('<option value="-1"> Select Department</option>');
            $.each(data, function (index, value) {
                $('select[name=departmentsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });


    //post 
    $("#btnSubmit").click(function (e) {
        //Serialize the form datas
        e.preventDefault();
        var name = $('input[name=name]').val();
        var departmentsId = $('select[name=departmentsId]').val();

        var data = {
            name: name,
            departmentsId: departmentsId
        };

        $.ajax({
            url: "/api/division/save",
            type: "POST",
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            data: data,
            success: function (data) {
                $('#divisionAdd').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Data Successfully Added!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            error: function (data) {
                toastr.error("error");
            }
        });
    });

    //Get edit
    $("#divisionList").on('click', '.edit', function () {
        var id = $(this).attr('data-id');
        var url = '/api/div/getdivisions/' + id;
        console.log(id);
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $("#editmodal").modal('show');
                $('#edit').find('input[name="id"]').val(data.id);
                $('#edit').find('input[name="name"]').val(data.name);
                $('#edit').find('select[name="departmentsId"]').val(data.departmentsId);
            },
            //if failed
            error: function (data) {
                // console.log(data, data.id, data.name);
                toastr.error("Error")
            }
        })
    })

    $("#updatediv").click(function (e) {
        e.preventDefault();
        // find isActive vaue

        // find select department
        var departmentsId = $('#edit').find('select[name=departmentsId]').val();
        // find id
        var id = $('#edit').find('input[name="id"]').val();
        var data = {
            name: $('#edit').find('input[name=name]').val(),
            departmentsId: departmentsId,
        };
        $.ajax({
            type: 'PUT',
            url: '/api/division/updateDiv/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#editmodal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Division Successfully Updated!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {

                toastr.error("Error")
            }
        });
    });

    $('#divisionList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        var url = '/api/division/Delete/' + id;
        $.ajax({  //make ajax request to delete
            // confirm before delete
            beforeSend: function (xhr) {
                // use bootbox
                bootbox.confirm({
                    message: "Are you sure you want to delete this record?",
                    buttons: {
                        // yes and no sequence

                        confirm: {
                            label: 'Yes',
                            className: 'btn-success btn-sm'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger btn-sm'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                type: 'DELETE',
                                url: url,
                                headers: {
                                    'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                                },
                                success: function (data) {
                                    //show please wait modal
                                    $('#pleasewait').modal('show');
                                    //show toastr after 3
                                    setTimeout(function () {
                                        toastr.success("Data Successfully Deleted!");
                                        // hide please wait modal
                                    }, 2000);
                                    setTimeout(function () {
                                        window.location.reload();
                                    }, 3000);
                                },
                                //if failed
                                error: function (data) {
                                    toastr.error("Error")
                                }
                            });
                        }
                    }
                });

            },
        });
    });
}
//HardwareTEchnician
function HardwareTechnician() {
    var Datatables;
    Datatables = $("#hardwareList").DataTable({
        ajax: {
            url: "/api/htech/GetTech",
            dataSrc: "",
            headers: {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            }
        },
        autoWidth: false,
        columns: [
            {
                data: "dateAdded",
            },
            {
                data: "name",
            },
            {
                data: "email",
            }

        ]
    });

    $('#btnSubmit').on('click',function (e) {
        e.preventDefault();
        //find name
        var name = $('input[name=name]').val();
        // data
        var data = {
            name: name,
        };
        $.ajax({
            type: 'POST',
            url: '/api/htech/save',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //toastr.success("Directory Successfully Added!");
                //Datatables.ajax.reload();
                //$("#hardwareTechModal").modal('hide');

                $("#name").val("");
                $('#hardwareTechModal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Technician Successfully Added!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Name Already Exist In the Database/ Invalid")
            }
        });
    });

    //Get edit
    $("#hardwareList").on('click', '.edit', function () {
        var id = $(this).attr('data-id');
        var url = '/api/htech/getTechbyId/' + id;
        // alert(id);
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $("#editmodal").modal('show');
                $('#edit').find('input[name="id"]').val(data.id);
                $('#edit').find('input[name="name"]').val(data.name);
            },
            //if failed
            error: function (data) {
                // console.log(data, data.id, data.name);
                toastr.error("Error")
            }
        })
    })


    $("#Updatetech").click(function (e) {
        e.preventDefault();
        var data = {
            name: $('#edit').find('input[name=name]').val(),
        };
        var id = $('#edit').find('input[name="id"]').val();
        $.ajax({
            type: 'PUT',
            url: '/api/htech/updateHardwareTech/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                $('#editmodal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Technician Successfully Updated!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);

            },
            //if failed
            error: function (data) {
                toastr.error("Error Updating")
            }
        });
    });

    $('#hardwareList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        var url = '/api/htech/Delete/' + id;
        $.ajax({
            // confirm before delete
            beforeSend: function (xhr) {
                // use bootbox
                bootbox.confirm({
                    message: "Are you sure you want to delete this record?",
                    buttons: {
                        // yes and no sequence

                        confirm: {
                            label: 'Yes',
                            className: 'btn-success btn-sm'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger btn-sm'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                type: 'DELETE',
                                url: url,
                                headers: {
                                    'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                                },
                                success: function (data) {

                                    //show please wait modal
                                    $('#pleasewait').modal('show');
                                    //show toastr after 3
                                    setTimeout(function () {
                                        toastr.success("Data Successfully Deleted!");
                                        // hide please wait modal
                                    }, 2000);
                                    setTimeout(function () {
                                        window.location.reload();
                                    }, 3000);
                                },
                                //if failed
                                error: function (data) {
                                    toastr.error("Error")
                                }
                            });
                        }
                    }
                });

            },
        });
    });
}
function LoginActivity() {
    var table2 = $("#activity").DataTable({
        "ajax": {
            "url": "/api/all/activity",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "fnInitComplete": function (oSettings, json) {
            // search after pressing enter
            $('#activity input').unbind();
            $('#activity input').bind('keyup', function (e) {
                if (e.keyCode == 13) {
                    // trigger search 
                    $('#pleasewait').modal('show');
                    setTimeout(function () {
                        $('#pleasewait').modal('hide');
                    }, 2500);
                    $('#activity').DataTable().search(this.value).draw();
                }
                // if search is empty, reset the filter
                if (this.value == "") {
                    $('#activity').DataTable().search("").draw();
                }
            }
            );
        },
        // "searching" : " true",
        // "searchDelay" : 1000,
        // order by desc dateuploaded
        "order": [[2, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [
            {
                data: 'userName'
            },
            {
                data: 'activityMessage'
            },
            {
                data: "activityDate",
            }

        ],
    });

}
function RequestActivity() {
    var table2 = $("#requestActivity").DataTable({
        "ajax": {
            "url": "/api/all/Request",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        // "searching" : " true",
        // "searchDelay" : 1000,
        // order by desc dateuploaded
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                "data": "userName",
            },
            {
                "data": "departmentsId",
                render: function (data, type, row) {
                    return row.departments.name
                }
            },
            {
                "data": "divisionsId",
                "render": function (data, type, row) {
                    return row.divisions.name;
                }
            },
            {
                "data": "uploadMessage",
            },
            {
                "data": "uploadDate",
            }

        ],
    });

}
function SoftwareActivity() {
    var table2 = $("#SoftwareActivities").DataTable({
        "ajax": {
            "url": "/api/SoftwareRequest/logs/Get",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "fnInitComplete": function (oSettings, json) {
            // search after pressing enter
            $('#hardwareRequestList_filter input').unbind();
            $('#hardwareRequestList_filter input').bind('keyup', function (e) {
                if (e.keyCode == 13) {
                    // trigger search 
                    $('#pleasewait').modal('show');
                    setTimeout(function () {
                        $('#pleasewait').modal('hide');
                    }, 2500);
                    $('#hardwareRequestList').DataTable().search(this.value).draw();
                }
                // if search is empty, reset the filter
                if (this.value == "") {
                    $('#hardwareRequestList').DataTable().search("").draw();
                }
            }
            );
        },
        // "searching" : " true",
        // "searchDelay" : 1000,
        // order by desc dateuploaded
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                // display count
                data: null,
                render: function (data, type, row, meta) {
                    return meta.row + meta.settings._iDisplayStart + 1;
                }
            },
            { data: "userName" },
                        {
                "data": "departmentsId",
                render: function (data, type, row) {
                    return row.departments.name;
                }
            },
            {
                "data": "divisionsId",
                render: function (data, type, row) {
                    return row.divisions.name;
                }
            },
            {
                data: 'uploadMessage'
            },
            {
                data: "uploadDate",


            }

        ],
    });


}
function HardwareActivity() {
    //$('#HardwareActivities').DataTable({
    //    ajax: {
    //        url: '/api/v2/HardwareActivity/get',
    //        dataSrc: "",
    //        headers: {
    //            "Authorization": "Bearer " + localStorage.getItem('access_token')
    //        }
    //    },
    //    autoWidth: false,
    //    columns: [
    //        {
    //            // display count
    //            data: null,
    //            render: function (data, type, row, meta) {
    //                return meta.row + meta.settings._iDisplayStart + 1;
    //            }
    //        },
    //        {
    //            data: 'userName'
    //        },
    //        {
    //            "data": "departmentsId",
    //            render: function (data, type, row) {
    //                return row.departments.name;
    //            }
    //        },
    //        {
    //            "data": "divisionsId",
    //            render: function (data, type, row) {
    //                return row.divisions.name;
    //            }
    //        },
    //        {
    //            data: 'requetMessage'
    //        },
    //        {
    //            data: "requetDate",

    //        }
    //    ]
    //});
    var table2 = $("#HardwareActivities").DataTable({
        "ajax": {
            "url": "/api/HardwareRequest/logs/Get",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "fnInitComplete": function (oSettings, json) {
            // search after pressing enter
            $('#hardwareRequestList_filter input').unbind();
            $('#hardwareRequestList_filter input').bind('keyup', function (e) {
                if (e.keyCode == 13) {
                    // trigger search 
                    $('#pleasewait').modal('show');
                    setTimeout(function () {
                        $('#pleasewait').modal('hide');
                    }, 2500);
                    $('#hardwareRequestList').DataTable().search(this.value).draw();
                }
                // if search is empty, reset the filter
                if (this.value == "") {
                    $('#hardwareRequestList').DataTable().search("").draw();
                }
            }
            );
        },
        // "searching" : " true",
        // "searchDelay" : 1000,
        // order by desc dateuploaded
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                // display count
                data: null,
                render: function (data, type, row, meta) {
                    return meta.row + meta.settings._iDisplayStart + 1;
                }
            },
            { data: "userName" },
            {
                "data": "departmentsId",
                render: function (data, type, row) {
                    return row.departments.name;
                }
            },
            {
                "data": "divisionsId",
                render: function (data, type, row) {
                    return row.divisions.name;
                }
            },
            {
                data: 'uploadMessage'
            },
            {
                data: "uploadDate",


            }

        ],
    });
}
function DashBoard() {
    $.ajax({
        type: 'GET',
        url: '/api/acitivi/get',
        headers: {
            "Authorization": "Bearer " + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('#activityLogs tbody').html('');
            $.each(data, function (index, value) {
                $('#activityLogs tbody').append(
                    '<tr>' +
                    '<td>' + '<span style="font-size: 15px;">' + value.userName + '</span>' + '</td>' +
                    '<td>' + '<span style="font-size: 15px;">' + value.activityMessage + '</span>' + '</td>' +
                    '<td>' + '<span style="font-size: 15px;">' + value.activityDate + '</span>' + '</td>' + '</tr>'
                );
            });
        },

        //if failed
        error: function (data) {

            // toastr.info("Success")
        }

    })

    $.ajax({
        type: 'GET',
        url: '/api/v2/sr/assign',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('#softwareProgrammer tbody').html('');
            $.each(data, function (index, value) {
                $('#softwareProgrammer tbody').append(
                    '<tr>' +
                    '<td>' + '<span class="badge bg-info">' + value.softwareUserRequest.ticket + '</span>' + '</td>' +
                    '<td>' + value.dateAssigned + '</td>' +
                    '<td>' + value.softwareUserRequest.fullName + '</td>' +
                    '<td>' + value.softwareUserRequest.departmentName + '</td>' +
                    '<td>' + value.softwareUserRequest.divisionName + '</td>' +
                    '<td>' + value.softwareUserRequest.softwareName + '</td>' +
                    '<td>' + (value.softwareUserRequest.status == "Open" ? '<span class="badge bg-secondary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Open</span>'
                        : (value.softwareUserRequest.status == "Return Request" ? '<span class="badge bg-secondary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Open</span>'
                            : (value.softwareUserRequest.status == "Resolved" ? '<span class="badge bg-success" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Resolved</span>'
                                : (value.softwareUserRequest.status == "Accept" ? '<span class="badge bg-warning" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">For Checking</span>'
                                    : (value.softwareUserRequest.status == "Update Request" ? '<span class="badge bg-secondary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Open</span>'
                                        : (value.softwareUserRequest.status == "In Progress" ? '<span class="badge bg-info" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">In Progress</span>'
                                            : (value.softwareUserRequest.status == "Verified" ? '<span class="badge bg-primary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Verified</span>'
                                                : (value.softwareUserRequest.status == "Approved" ? '<span class="badge bg-warning" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Approved</span>'
                                                    : (value.softwareUserRequest.status == "Cancel" ? '<span class="badge bg-danger" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Cancel</span>'
                                                        : '<span class="badge bg-secondary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Open</span>'))))))))) + '</td>' + '</tr>'
                );
            });
        },

        //if failed
        error: function (data) {

            // toastr.info("Success")
        }

    });
    //User Dashboard UserACtivity
    $.ajax({
        type: 'GET',
        url: '/api/login/userActivity2',
        headers: {
            "Authorization": "Bearer " + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('#userlogs tbody').html('');
            $.each(data, function (index, value) {
                $('#userlogs tbody').append(
                    '<tr>' +
                    '<td>' + '<span style="font-size: 15px;">' + value.userName + '</span>' + '</td>' +
                    '<td>' + '<span style="font-size: 15px;">' + value.activityMessage + '</span>' + '</td>' +
                    '<td>' + '<span style="font-size: 15px;">' + value.activityDate + '</span>' + '</td>' + '</tr>'
                );
            });
        },

        //if failed
        error: function (data) {

            // toastr.info("Success")
        }

    })
    //$.ajax({
    //    type: 'GET',
    //    url: '/api/login/userActivity3',
    //    headers: {
    //        "Authorization": "Bearer " + localStorage.getItem('access_token')
    //    },
    //    success: function (data) {
    //        $('#userlogs4 tbody').html('');
    //        $.each(data, function (index, value) {
    //            $('#userlogs4 tbody').append(
    //                '<tr>' +
    //                '<td>' + '<span style="font-size: 15px;">' + value.userName + '</span>' + '</td>' +
    //                '<td>' + '<span style="font-size: 15px;">' + value.activityMessage + '</span>' + '</td>' +
    //                '<td>' + '<span style="font-size: 15px;">' + value.activityDate + '</span>' + '</td>' + '</tr>'
    //            );
    //        });
    //    },

    //    //if failed
    //    error: function (data) {

    //        // toastr.info("Success")
    //    }

    
    //$.ajax({
    //    type: 'GET',
    //    url: '/api/v2/hr/assign',
    //    headers: {
    //        'Authorization': 'Bearer ' + localStorage.getItem('access_token')
    //    },
    //    success: function (data) {
    //        $('#hardwareProgrammer tbody').html('');
    //        $.each(data, function (index, value) {
    //            $('#hardwareProgrammer tbody').append(
    //                '<tr>' +
    //                '<td>' + '<span class="badge bg-info">' + value.hardwareUserRequest.ticket + '</span>' + '</td>' +
    //                '<td>' + value.dateAssigned + '</td>' +
    //                '<td>' + value.hardwareUserRequest.fullName + '</td>' +
    //                '<td>' + value.hardwareUserRequest.departmentName + '</td>' +
    //                '<td>' + value.hardwareUserRequest.divisionName + '</td>' +
    //                '<td>' + value.hardwareUserRequest.hardwareName + '</td>' +
    //                '<td>' + (value.hardwareUserRequest.status == "Open" ? '<span class="badge bg-secondary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Open</span>'
    //                    : (value.hardwareUserRequest.status == "Return Request" ? '<span class="badge bg-secondary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Open</span>'
    //                        : (value.hardwareUserRequest.status == "Resolved" ? '<span class="badge bg-success" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Resolved</span>'
    //                            : (value.hardwareUserRequest.status == "Accept" ? '<span class="badge bg-warning" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">For Checking</span>'
    //                                : (value.hardwareUserRequest.status == "Update Request" ? '<span class="badge bg-secondary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Open</span>'
    //                                    : (value.hardwareUserRequest.status == "In Progress" ? '<span class="badge bg-info" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">In Progress</span>'
    //                                        : (value.hardwareUserRequest.status == "Verified" ? '<span class="badge bg-primary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Verified</span>'
    //                                            : (value.hardwareUserRequest.status == "Approved" ? '<span class="badge bg-warning" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Approved</span>'
    //                                                : (value.hardwareUserRequest.status == "Cancel" ? '<span class="badge bg-danger" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Cancel</span>'
    //                                                    : '<span class="badge bg-secondary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Open</span>'))))))))) + '</td>' + '</tr>'
    //            );
    //        });
    //    },

    //    error: function (data) {

    //    }

    //});

    // $.ajax({
    //     type: 'GET',
    //     url: '/api/softwareRequest/getSoftware',
    //     headers: {
    //         'Authorization': 'Bearer ' + localStorage.getItem('access_token')
    //     },
    //     success: function (data) {
    //         $('#softwareProgrammerSP tbody').html('');
    //         $.each(data, function (index, value) {
    //             $('#softwareProgrammerSP tbody').append(
    //                 '<tr>' +
    //                 '<td>' + '<span class="badge bg-info">' + value.ticket + '</span>' + '</td>' +
    //                 '<td>' + value.dateAdded + '</td>' +
    //                 '<td>' + value.fullName + '</td>' +
    //                 '<td>' + value.departments.name + '</td>' +
    //                 '<td>' + value.divisions.name + '</td>' +
    //                 '<td>' + value.software.name + '</td>' +

    //                 '<td>' + (value.statusId == 1 ? '<span class="badge bg-secondary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Open</span>' : (value.statusId == 2 ? '<span class="badge bg-success" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Resolved</span>' : (value.statusId == 3 ? '<span class="badge bg-warning" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">On hold</span>' : (value.statusId == 4 ? '<span class="badge bg-info" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">In Progress</span>' : (value.statusId == 5 ? '<span class="badge bg-danger" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Cancel Request</span>' : '<span class="badge bg-secondary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Open</span>'))))) + '</td>' + '</tr>'
    //             );
    //         });
    //     },

    //     //if failed
    //     error: function (data) {

    //         // toastr.info("Success")
    //     }

    // });

    // $.ajax({
    //     type: 'GET',
    //     url: '/api/hardware/gethardware',
    //     headers: {
    //         'Authorization': 'Bearer ' + localStorage.getItem('access_token')
    //     },
    //     success: function (data) {
    //         $('#hardwareProgrammerSP tbody').html('');
    //         $.each(data, function (index, value) {
    //             $('#hardwareProgrammerSP tbody').append(
    //                 '<tr>' +
    //                 '<td>' + '<span class="badge bg-info">' + value.ticket + '</span>' + '</td>' +
    //                 '<td>' + value.dateAdded + '</td>' +
    //                 '<td>' + value.fullName + '</td>' +
    //                 '<td>' + value.departments.name + '</td>' +
    //                 '<td>' + value.divisions.name + '</td>' +
    //                 '<td>' + value.hardware.name + '</td>' +

    //                 '<td>' + (value.statusId == 1 ? '<span class="badge bg-secondary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Open</span>' : (value.statusId == 2 ? '<span class="badge bg-success" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Resolved</span>' : (value.statusId == 3 ? '<span class="badge bg-warning" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">On hold</span>' : (value.statusId == 4 ? '<span class="badge bg-info" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">In Progress</span>' : (value.statusId == 5 ? '<span class="badge bg-danger" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Cancel Request</span>' : '<span class="badge bg-secondary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Open</span>'))))) + '</td>' + '</tr>'
    //             );
    //         });
    //     },

    //     //if failed
    //     error: function (data) {

    //         // toastr.info("Success")
    //     }

    // });

    $.ajax({
        type: 'GET',
        url: '/api/users/GetSoftwareReqAdmin',
        headers: {
            "Authorization": "Bearer " + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('#softwareActivityAdmin tbody').html('');
            $.each(data, function (index, value) {
                $('#softwareActivityAdmin tbody').append(
                    '<tr>' +
                    '<td>' + '<span style="font-size: 15px;">' + value.userName + '</span>' + '</td>' +
                    '<td>' + '<span style="font-size: 15px;">' + value.departments.name + '</span>' + '</td>' +
                    '<td>' + '<span style="font-size: 15px;">' + value.divisions.name + '</span>' + '</td>' +
                    '<td>' + '<span style="font-size: 15px;">' + value.uploadMessage + '</span>' + '</td>' +
                    '<td>' + '<span style="font-size: 15px;">' + value.uploadDate + '</span>' + '</td>' + '</tr>'
                );
            });
        },

        //if failed
        error: function (data) {

             toastr.info("Success")
        }

    });

    $.ajax({
        type: 'GET',
        url: '/api/users/GetHardwareReqAdmin',
        headers: {
            "Authorization": "Bearer " + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('#HardwareActivity tbody').html('');
            $.each(data, function (index, value) {
                $('#HardwareActivity tbody').append(
                    '<tr>' +
                    '<td>' + '<span style="font-size: 15px;">' + value.userName + '</span>' + '</td>' +
                    '<td>' + '<span style="font-size: 15px;">' + value.departments.name + '</span>' + '</td>' +
                    '<td>' + '<span style="font-size: 15px;">' + value.divisions.name + '</span>' + '</td>' +
                    '<td>' + '<span style="font-size: 15px;">' + value.uploadMessage + '</span>' + '</td>' +
                    '<td>' + '<span style="font-size: 15px;">' + value.uploadDate+ '</span>' + '</td>' + '</tr>'
                );
            });
        },

        //if failed
        error: function (data) {

            // toastr.info("Success")
        }

    });


    $.ajax({
        type: 'GET',
        url: '/api/DashRequest/get',
        headers: {
            "Authorization": "Bearer " + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('#requestActivity tbody').html('');
            $.each(data, function (index, value) {
                $('#requestActivity tbody').append(
                    '<tr>' +
                    '<td>' + '<span style="font-size: 15px;">' + value.userName + '</span>' + '</td>' +
                    '<td>' + '<span style="font-size: 15px;">' + value.departments.name + '</span>' + '</td>' +
                    '<td>' + '<span style="font-size: 15px;">' + value.divisions.name + '</span>' + '</td>' +
                    '<td>' + '<span style="font-size: 15px;">' + value.uploadMessage + '</span>' + '</td>' +
                    '<td>' + '<span style="font-size: 15px;">' + value.uploadDate + '</span>' + '</td>' + '</tr>'
                );
            });
        },

        //if failed
        error: function (data) {

            // toastr.info("Success")
        }

    });





    //$.ajax({
    //    type: 'GET',
    //    url: '/api/hrdStatus/count',
    //    headers: {
    //        "Authorization": "Bearer " + localStorage.getItem('access_token')
    //    },
    //    success: function (data) {
    //        $('#statusListcount2 tbody').html('');
    //        $.each(data, function (index, value) {
    //            $('#statusListcount2 tbody').append(
    //                '<tr>' +
    //                '<td>' + '<span style="font-size: 15px;">' + value.name + '</span>' + '</td>' +
    //                '<td>' + '<span style="font-size: 15px;">' + value.count + '</span>' + '</td>' + '</tr>'
    //            );
    //        });
    //    },

    //    //if failed
    //    error: function (data) {

    //        // toastr.info("Success")
    //    }
    //});

    $.ajax({
        type: 'GET',
        url: '/api/software/requestbyUserList',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('#UsersoftwareRequest tbody').html('');
            $.each(data, function (index, value) {
                $('#UsersoftwareRequest tbody').append(
                    '<tr>' +
                    '<td>' + '<span class="badge bg-info">' + value.ticket + '</span>' + '</td>' +
                    '<td>' + value.dateAdded + '</td>' +
                    '<td>' + value.software.name + '</td>' +
                    '<td>' + (value.status == "Open" ? '<span class="badge bg-secondary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Open</span>'
                        : (value.status == "Return Request" ? '<span class="badge bg-secondary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Open</span>'
                            : (value.status == "Resolved" ? '<span class="badge bg-success" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Resolved</span>'
                                : (value.status == "Accept" ? '<span class="badge bg-warning" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">For Checking</span>'
                                    : (value.status == "Update Request" ? '<span class="badge bg-secondary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Open</span>'
                                        : (value.status == "In Progress" ? '<span class="badge bg-info" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">In Progress</span>'
                                            : (value.status == "Verified" ? '<span class="badge bg-primary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Verified</span>'
                                                : (value.status == "Approved" ? '<span class="badge bg-warning" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Approved</span>'
                                                    : (value.status == "Cancel" ? '<span class="badge bg-danger" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Cancel</span>'
                                                        : '<span class="badge bg-secondary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Open</span>'))))))))) + '</td>' + '</tr>'
                );
            });
        },

        //if failed
        error: function (data) {

            // toastr.info("Success")
        }

    });


    $.ajax({
        type: 'GET',
        url: '/api/hardware/requestbyUserList',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('#UserhardwareRequest tbody').html('');
            $.each(data, function (index, value) {
                $('#UserhardwareRequest tbody').append(
                    '<tr>' +
                    // activityDate momentjs
                    '<td>' + '<span class="badge bg-info">' + value.ticket + '</span>' + '</td>' +
                    '<td>' + moment(value.dateAdded).format('M/D/Y LT') + '</td>' +
                    '<td>' + value.hardware.name + '</td>' +
                    '<td>' + (value.status == "Open" ? '<span class="badge bg-secondary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Open</span>'
                        : (value.status == "Accpet" ? '<span class="badge bg-secondary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Open</span>'
                            : (value.status == "Manual" ? '<span class="badge bg-info" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">In Progress</span>'
                                : (value.status == "In Progress" ? '<span class="badge bg-info" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">In Progress</span>'
                                    : (value.status == "Resolved" ? '<span class="badge bg-success" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Resolved</span>'
                                        : (value.status == "Verified" ? '<span class="badge bg-primary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Verified</span>'
                                            : (value.status == "Approved" ? '<span class="badge bg-warning" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Approved</span>'
                                                : (value.status == "Cancel" ? '<span class="badge bg-danger" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Cancel</span>'
                                                    : '<span class="badge bg-secondary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Open</span>')))))))) + '</td>' + '</tr>'
                    );
            });
        },

        //if failed
        error: function (data) {

            // toastr.info("Success")
        }

    });

}
//Query of Systems Cgpp
function ExistingSystem() {
    var Datatables;
    Datatables = $("#systemList").DataTable({
        ajax: {
            url: "/api/information/getSystem",
            dataSrc: "",
            headers: {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            }
        },
        autoWidth: false,
        columns: [

            {
                data: "dateAdded"
            },
            {
                data: "name",
            },
            {
                data: null,
                render: function (data) {
                    return '<button class="btn btn-success btn-sm edit" data-id="' + data.id + '"><i class="fas fa-edit"></i> Edit</button>'
                        + '  <button class="btn btn-danger btn-sm delete" data-id="' + data.id + '"><i class="fas fa-trash"></i> Delete</button>'
                },
                "orderable": false,
            }

        ]
    });

    $('#btnSubmit').click(function (e) {
        e.preventDefault();

        //find name
        var name = $('input[name=name]').val();
        // data
        var data = {
            name: name,
        };
        $.ajax({
            type: 'POST',
            url: '/api/information/saveSystem',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $("#name").val("");
                //hide modal
                $('#SystemModal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Successfully Added New System!");
                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Name Already Exist In the Database/ Invalid")
            }
        });
    });

    //Get edit
    $("#systemList").on('click', '.edit', function () {
        var id = $(this).attr('data-id');
        var url = '/api/information/getSystembyId/' + id;
        //alert(id);
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $("#editmodal").modal('show');
                $('#edit').find('input[name="id"]').val(data.id);
                $('#edit').find('input[name="name"]').val(data.name);
            },
            //if failed
            error: function (data) {
                // console.log(data, data.id, data.name);
                toastr.error("Error")
            }
        })
    });


    $("#UpdateData").click(function (e) {
        e.preventDefault();
        var data = {
            name: $('#edit').find('input[name=name]').val(),
        };
        var id = $('#edit').find('input[name="id"]').val();
        $.ajax({
            type: 'PUT',
            url: '/api/information/updateSystem//' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#editmodal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Data Successfully Updated!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);

            },
            //if failed
            error: function (data) {
                toastr.error("Error Updating")
            }
        });
    });



    $('#systemList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        var url = '/api/information/Delete/' + id;
        $.ajax({
            // confirm before delete
            beforeSend: function (xhr) {
                // use bootbox
                bootbox.confirm({
                    message: "Are you sure you want to delete this record?",
                    buttons: {
                        // yes and no sequence

                        confirm: {
                            label: 'Yes',
                            className: 'btn-success btn-sm'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger btn-sm'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                type: 'DELETE',
                                url: url,
                                headers: {
                                    'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                                },
                                success: function (data) {
                                    //toastr.success("Data Successfully Deleted!");
                                    //Datatables.ajax.reload();  $('#editmodal').modal('hide');
                                    //show please wait modal
                                    $('#pleasewait').modal('show');
                                    //show toastr after 3
                                    setTimeout(function () {
                                        toastr.success("Data Successfully Updated!");
                                        // hide please wait modal
                                    }, 2000);
                                    setTimeout(function () {
                                        window.location.reload();
                                    }, 3000);
                                },
                                //if failed
                                error: function (data) {
                                    toastr.error("Error")
                                }
                            });
                        }
                    }
                });

            },
        });
    });
}
function ManageUsers() {
    $('#UsersList').DataTable();
    $.ajax({
        type: 'GET',
        url: '/api/v1/users/GetDepartments',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            var html = '<option value="">Select Department</option>';
            $.each(data, function (i, item) {
                html += '<option value="' + item.id + '">' + item.name + '</option>';
            });
            $('select[name=departmentsId2]').html(html);
            // render divisionsId2 select
            // console log on select change
            $('select[name=departmentsId2]').on('change', function () {
                var depId = $('select[name=departmentsId2]').val();
                console.log(depId);
                $.ajax({
                    type: 'GET',
                    url: '/api/div/fetchbyid/' + depId,
                    headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                    },
                    success: function (data) {
                        var html = '<option value="">Select Division</option>';
                        $.each(data, function (i, item) {
                            html += '<option value="' + item.id + '">' + item.name + '</option>';
                        });
                        console.log(data);
                        $('select[name=divisionsId2]').html(html);
                    }
                });
            });
        }
    });
    //Department
    $.ajax({
        type: 'GET',
        url: '/api/User/department',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=departmentsId]').append('<option value=""> Select Department</option>');
            $.each(data, function (index, value) {
                $('select[name=departmentsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    //Division
    $.ajax({
        type: 'GET',
        url: '/api/User/division',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=divisionsId]').append('<option value=""> Select Division</option>');
            $.each(data, function (index, value) {
                $('select[name=divisionsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    $('#UsersList').on('click', '.edit-details', function () {
        var id = $(this).attr('id');
        var url = '/api/v1/users/getid/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#UserDetailsModal').modal('show');
                $('#userdetails').find('input[name="id"]').val(data.id);
                $('#userdetails').find('input[name="firstName"]').val(data.firstName);
                $('#userdetails').find('input[name="middleName"]').val(data.middleName);
                $('#userdetails').find('input[name="lastName"]').val(data.lastName);
                $('#userdetails').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#userdetails').find('input[name="email"]').val(data.email);
                $('#userdetails').find('input[name="userName"]').val(data.userName);
                //$('#userdetails').find('select[name="departmentsId"]').val(data.departmentsId);
                //$('#userdetails').find('select[name="divisionsId"]').val(data.divisionsId);
                $('#userdetails').find('select[name=departmentsId]').val(data.departmentsId);
                if (data.departmentsId == null || data.departmentsId == "") {
                    // render option not applicable
                    $('select[name=departmentsId]').append('<option value="">Not Applicable</option>');
                }
                // find division
                $('#userdetails').find('select[name=divisionsId]').val(data.divisionsId);
                if (data.divisionsId == null || data.divisionsId == "") {
                    // render option not applicable
                    $('select[name=divisionsId]').append('<option value="">Not Applicable</option>');
                }
                // alert(data.id);
            }
        });
    });

    //save technician
    $('#UserDetailsModal').submit(function (e) {
        e.preventDefault();
        var firstName = $('#userdetails').find('input[name="firstName"]').val();
        var middleName = $('#userdetails').find('input[name="middleName"]').val();
        var lastName = $('#userdetails').find('input[name="lastName"]').val();
        var userName = $('#userdetails').find('input[name="userName"]').val();

        var email = $('#userdetails').find('input[name="email"]').val();
        var mobileNumber = $('#userdetails').find('input[name="mobileNumber"]').val();
        var depId = $('#userdetails').find('select[name="departmentsId"]').val();
        var divId = $('#userdetails').find('select[name="divisionsId"]').val();
        var id = $('#userdetails').find('input[name="id"]').val();
        var data = {
            "id": id,
            "firstName": firstName,
            "middleName": middleName,
            "lastName": lastName,
            "email": email,
            "mobileNumber": mobileNumber,
            "departmentsId": depId,
            "divisionsId": divId,
            "userName": userName,
        };

        $.ajax({
            type: 'POST',
            url: '/api/Account/UpdateName/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //hide modal
                $('#UserDetailsModal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Details Changed");
                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            // ignore error
            error: function (data) {

            }
        })
    });

    $('#UsersList').on('click', '.reset-password', function () {
        var id = $(this).attr('id');
        var url = '/api/v1/users/getid/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#resetPassord').modal('show');
                $('#reset').find('input[name="id"]').val(data.id);
                $('#reset').find('input[name="newpassword"]').val(data.newpassword);
                $('#reset').find('input[name="changepassword"]').val(data.changepassword);
                $('#reset').find('input[name="userName"]').val(data.userName);
                $('#reset').find('input[name="mobileNumber"]').val(data.mobileNumber);
                // alert(data.id);
            }
        });
    });


    $("#reset").submit(function (e) {
        e.preventDefault();
        // find new pass
        var newpassword = $('#reset').find('input[name="newpassword"]').val();
        var mobileNumber = $('#reset').find('input[name="mobileNumber"]').val();
        var userName = $('#reset').find('input[name="userName"]').val();
        // find id
        var id = $('#reset').find('input[name="id"]').val();
        // find confirm pass
        var confirmpassword = $('#reset').find('input[name="confirmpassword"]').val();
        var data = {
            newpassword: newpassword,
            confirmpassword: confirmpassword,
            id: id,
            mobileNumber: mobileNumber,
            userName: userName
        };
        $.ajax({
            type: 'POST',
            url: '/api/Account/ChangePassword/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                //hide modal
                $('#resetPassord').modal('hide');
                // show please wait modal
                $('#pleasewait').modal('show');
                // show toastr after 3
                setTimeout(function () {
                    toastr.success("Password Changed");
                    // hide please wait modal

                }, 3000),
                    setTimeout(function () {
                        window.location.reload();
                    }, 6000);
            },
            //if failed
            error: function (data) {

                toastr.error("Error")
            }
        });
    });

    $('#UsersList').on('click', '.delete-account', function () {
        var id = $(this).attr('id');
        //console.log(id);
        // bootbox
        bootbox.confirm({
            message: "Are you sure you want to delete this file?",
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {
                if (result) {
                    $.ajax({
                        url: '/api/Account/DeleteUser/' + id,
                        type: 'DELETE',
                        headers: {
                            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                        },
                        success: function (data) {
                            toastr.success('File Deleted Successfully');
                            setTimeout(() => {
                                location.reload();
                            }, 1000);
                        },
                        error: function (data) {
                            toastr.error('Delete Failed');
                        }
                    });
                }
            }

        });
    });

    $('#addUser').submit(function (e) {
        e.preventDefault();
        var depId = $('select[name="departmentsId2"]').val();
        var divId = $('select[name="divisionsId2"]').val();
        var formData = $(this).serialize() + '&departmentsId=' + depId + '&divisionsId=' + divId;
        $.ajax({
            url: '/api/Account/Register',
            type: 'POST',
            data: formData,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#createModal').modal('hide');
                $('#pleasewait').modal('show');

                setTimeout(function () {
                    toastr.success("Account Created Successfully");
                    // hide please wait modal
                }, 2000),
                    setTimeout(function () {
                        location.reload();
                    }, 3000);
            },
            error: function (data) {
                toastr.error('Register Failed');
            }
        });
    });
}
function UserProfile() {
    //Department
    $.ajax({
        type: 'GET',
        url: '/api/User/department',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=departmentsId]').append('<option value=""> Select Department</option>');
            $.each(data, function (index, value) {
                $('select[name=departmentsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });

    //Division
    $.ajax({
        type: 'GET',
        url: '/api/User/division',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=divisionsId]').append('<option value=""> Select Division</option>');
            $.each(data, function (index, value) {
                $('select[name=divisionsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });

    $('#userProfile').on('click', '.update-details', function () {
        var id = $(this).attr('id');
        var url = '/api/v1/users/getid/' + id;

        $.ajax({
            type: 'GET',
            url: url,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#updateName').find('input[name="id"]').val(data.id);
                $('#updateName').find('input[name="fullName"]').val(data.fullName);
                $('#updateName').find('input[name="email"]').val(data.email);
                $('#updateName').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#updateName').find('select[name="departmentsId"]').val(data.departmentsId);
                $('#updateName').find('select[name="divisionsId"]').val(data.divisionsId);
                $('#updateName').find('input[name="userName"]').val(data.userName);

            },
            error: function (data) {
                toastr.error('error')
            }
        })

    });

    //save technician
    $('#changeName').click(function (e) {
        e.preventDefault();
        var fullName = $('#updateName').find('input[name="fullName"]').val();
        var email = $('#updateName').find('input[name="email"]').val();
        var mobileNumber = $('#updateName').find('input[name="mobileNumber"]').val();
        var depId = $('#updateName').find('select[name="departmentsId"]').val();
        var divId = $('#updateName').find('select[name="divisionsId"]').val();
        var userName = $('#updateName').find('input[name="userName"]').val();

        var id = $('#updateName').find('input[name="id"]').val();
        var data = {
            "id": id,
            "fullName": fullName,
            "email": email,
            "mobileNumber": mobileNumber,
            "departmentsId": depId,
            "divisionsId": divId,
            "userName": userName

        };

        $.ajax({
            type: 'POST',
            url: '/api/Account/UpdateName/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                /*how please wait modal*/
                $('#pleasewait').modal('show');
                /*show toastr after 3*/
                setTimeout(function () {
                    toastr.success("Details Changed");
                    /*hide please wait modal*/

                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            // ignore error
            error: function (data) {

            }
        })
    });

    $('#userProfile').on('click', '.update-details', function () {
        var id = $(this).attr('id');
        var url = '/api/v1/users/getid/' + id;

        $.ajax({
            type: 'GET',
            url: url,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#chageDetails').find('input[name="id"]').val(data.id);
                $('#chageDetails').find('input[name="fullName"]').val(data.fullName);
                $('#chageDetails').find('input[name="email"]').val(data.email);
                $('#chageDetails').find('input[name="userName"]').val(data.userName);

                $('#chageDetails').find('input[name="mobileNumber"]').val(data.mobileNumber);
            },
            error: function (data) {
                toastr.error('error')
            }
        })

    });

    $('#updateDetails').click(function (e) {
        e.preventDefault();
        var fullName = $('#chageDetails').find('input[name="fullName"]').val();
        var email = $('#chageDetails').find('input[name="email"]').val();
        var userName = $('#chageDetails').find('input[name="userName"]').val();

        var mobileNumber = $('#chageDetails').find('input[name="mobileNumber"]').val();
        var id = $('#chageDetails').find('input[name="id"]').val();
        var data = {
            "id": id,
            "fullName": fullName,
            "mobileNumber": mobileNumber,
            "email": email,
            "userName": userName,

        };
        $.ajax({
            type: 'POST',
            url: '/api/Account/changeNmae/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //hide modal
                // $('#updateDetails').modal('hide');
                // show please wait modal
                $('#pleasewait').modal('show');

                // show toastr after 3
                setTimeout(function () {
                    toastr.success("Details Changed");
                    // hide please wait modal

                }, 2000);

                $('#pleasewait').click(function () {

                    localStorage.removeItem('access_token');
                    localStorage.removeItem('username');

                    window.location.href = "/login";
                });
            },
            // ignore error
            error: function (data) {

            }
        })
    });


    $('#userProfile').on('click', '.update-image', function () {
        var id = $(this).attr('id');
        var url = '/api/v1/users/getid/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#changeImageForm').find('input[name="id"]').val(data.id);
                // alert(data.id);
            },
            error: function (data) {
                toastr.error('error')
            }
        })

    });

    $("#changeImageForm").submit(function (e) {
        e.preventDefault();
        var formData = new FormData(this);
        $.ajax({
            type: 'POST',
            url: '/api/Account/ChangeProfileImage',
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            data: formData,
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                /*alert(data);*/
                $('#pleasewait').modal('show');
                // show toastr after 3
                setTimeout(function () {
                    toastr.success("Profile Image Changed Successfully");
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Saving")
            }
        });
    });

    $.ajax({
        type: 'GET',
        url: '/api/users/GetUserFullName',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {

            $('#user-name').text(data);
        },
        //if failed
        error: function (data) {
        }
    });


    $("#userProfile").on('click', '.change-pass', function () {
        // get id on edit button
        var id = $(this).attr('id');
        var url = '/api/v1/users/getid/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#changePasswordForm').find('input[name="id"]').val(data.id);
                $('#changePasswordForm').find('input[name="newpassword"]').val(data.newpassword);
                $('#changePasswordForm').find('input[name="changepassword"]').val(data.changepassword);
                $('#changePasswordForm').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#changePasswordForm').find('input[name="email"]').val(data.email);

                //alert(data.id);
            },
            //if failed
            error: function (data) {
                toastr.error("Error")
            }
        });
    });


    $("#changePasswordForm").submit(function (e) {
        e.preventDefault();
        // find new pass
        var newpassword = $('#changePasswordForm').find('input[name="newpassword"]').val();
        // find id
        var id = $('#changePasswordForm').find('input[name="id"]').val();
        // find confirm pass
        var confirmpassword = $('#changePasswordForm').find('input[name="confirmpassword"]').val();
        var mobileNumber = $('#changePasswordForm').find('input[name="mobileNumber"]').val();
        var email = $('#changePasswordForm').find('input[name="email"]').val();
        var data = {
            newpassword: newpassword,
            confirmpassword: confirmpassword,
            id: id,
            mobileNumber: mobileNumber,
            email: email
        };
        $.ajax({
            type: 'POST',
            url: '/api/Account/ChangePassword/v2/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#pleasewait').modal('show');
                // show toastr after 3
                setTimeout(function () {
                    toastr.success("Password Changed");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 5000);
            },
            //if failed
            error: function (data) {

                toastr.error("Error")
            }
        });
    });
}
function SoftwareTechnician() {
    var Datatables;
    Datatables = $("#softwaretechList").DataTable({
        ajax: {
            url: "/api/stech/Gettech",
            dataSrc: "",
            headers: {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            }
        },
        autoWidth: false,
        columns: [

            {
                data: "dateAdded",
            },
            {
                data: "name",
            },
            {
                data: "techEmail"
            },
            {
                data: null,
                render: function (data) {
                    return '<button class="btn btn-success btn-sm edit" data-id="' + data.id + '"><i class="fas fa-edit"></i> Edit</button>'
                        + '  <button class="btn btn-danger btn-sm delete" data-id="' + data.id + '"><i class="fas fa-trash"></i> Delete</button>'
                },
                "orderable": false,
            }

        ]
    });

    $('#btnSubmit').click(function (e) {
        e.preventDefault();

        //find name
        var name = $('#save').find('input[name=name]').val();
        var techEmail = $('#save').find('input[name=techEmail]').val();
        var phoneNumber = $('#save').find('input[name=phoneNumber]').val();
        // data
        var data = {
            name: name,
            techEmail: techEmail,
            phoneNumber: phoneNumber
        };
        $.ajax({
            type: 'POST',
            url: '/api/stech/save',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //toastr.success("Directory Successfully Added!");
                //Datatables.ajax.reload();
                $("#Stechnicianmodal").modal('hide');

                $("#name").val("");
                $("#techEmail").val("");

                $('#pleasewait').modal('show');
                // show toastr after 3
                setTimeout(function () {
                    toastr.success("Programmer Successfully Added!");
                    // hide please wait modal
                }, 1000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Name Already Exist In the Database/ Invalid")
            }
        });
    });

    //Get edit
    $("#softwaretechList").on('click', '.edit', function () {
        var id = $(this).attr('data-id');
        var url = '/api/stech/getTechbyId/' + id;
        // alert(id);
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $("#editmodal").modal('show');
                $('#edit').find('input[name="id"]').val(data.id);
                $('#edit').find('input[name="name"]').val(data.name);
                $('#edit').find('input[name="techEmail"]').val(data.techEmail);
                $('#edit').find('input[name="phoneNumber"]').val(data.phoneNumber);
                //alert(data.techEmail);
            },
            //if failed
            error: function (data) {
                // console.log(data, data.id, data.name);
                toastr.error("Error")
            }
        })
    })

    $("#Updatetech").click(function (e) {
        e.preventDefault();
        var data = {
            name: $('#edit').find('input[name=name]').val(),
            techEmail: $('#edit').find('input[name=techEmail]').val(),
            phoneNumber: $('#edit').find('input[name=phoneNumber]').val(),
        };
        var id = $('#edit').find('input[name="id"]').val();
        $.ajax({
            type: 'PUT',
            url: '/api/stech/updateSoftwareTech/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $("#editmodal").modal('hide');

                $('#pleasewait').modal('show');
                // show toastr after 3
                setTimeout(function () {
                    toastr.success("Successfully Updated!");
                    // hide please wait modal
                }, 1000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);

            },
            //if failed
            error: function (data) {
                toastr.error("Error")
            }
        });
    });

    $('#softwaretechList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        var url = '/api/stech/Delete/' + id;
        $.ajax({
            // confirm before delete
            beforeSend: function (xhr) {
                // use bootbox
                bootbox.confirm({
                    message: "Are you sure you want to delete this record?",
                    buttons: {
                        // yes and no sequence

                        confirm: {
                            label: 'Yes',
                            className: 'btn-success btn-sm'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger btn-sm'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                type: 'DELETE',
                                url: url,
                                headers: {
                                    'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                                },
                                success: function (data) {
                                    //toastr.success("Data Successfully Deleted!");
                                    //Datatables.ajax.reload();
                                    $('#pleasewait').modal('show');
                                    //show toastr after 3
                                    setTimeout(function () {
                                        toastr.success("Data Successfully Updated!");
                                        // hide please wait modal
                                    }, 2000);
                                    setTimeout(function () {
                                        window.location.reload();
                                    }, 3000);
                                },
                                //if failed
                                error: function (data) {
                                    toastr.error("Error")
                                }
                            });
                        }
                    }
                });

            },
        });
    });
}
function UnitTypes() {
    var Datatables;
    Datatables = $("#unitList").DataTable({
        ajax: {
            url: "/api/unit/get",
            dataSrc: "",
            headers: {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            }
        },
        autoWidth: false,
        columns: [

            {
                data: "dateAdded"
            },
            {
                data: "name",
            },
            {
                data: null,
                render: function (data) {
                    return '<button class="btn btn-success btn-sm edit" data-id="' + data.id + '"><i class="fas fa-edit"></i> Edit</button>'
                        + '  <button class="btn btn-danger btn-sm delete" data-id="' + data.id + '"><i class="fas fa-trash"></i> Delete</button>'
                },
                "orderable": false,
            }

        ]
    });

    $('#btnSubmit').click(function (e) {
        e.preventDefault();
        //find name
        var name = $('input[name=name]').val();
        // data
        var data = {
            name: name,
        };
        $.ajax({
            type: 'POST',
            url: '/api/unit/save',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $("#name").val("");
                $('#UnitTypeAdd').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Data Successfully Added!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Name Already Exist In the Database/ Invalid")
            }
        });
    });

    //Get edit
    $("#unitList").on('click', '.edit', function () {
        var id = $(this).attr('data-id');
        var url = '/api/unit/get/' + id;
        // alert(id);
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $("#editmodal").modal('show');
                $('#edit').find('input[name="id"]').val(data.id);
                $('#edit').find('input[name="name"]').val(data.name);
            },
            //if failed
            error: function (data) {
                // console.log(data, data.id, data.name);
                toastr.error("Error")
            }
        })
    });

    $("#UpdateData").click(function (e) {
        e.preventDefault();
        var data = {
            name: $('#edit').find('input[name=name]').val(),
        };
        var id = $('#edit').find('input[name="id"]').val();
        $.ajax({
            type: 'PUT',
            url: '/api/unit/updateUnit/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#editmodal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Data Successfully Updated!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error")
            }
        });
    });

    $('#unitList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        var url = '/api/unit/Delete/' + id;
        $.ajax({
            // confirm before delete
            beforeSend: function (xhr) {
                // use bootbox
                bootbox.confirm({
                    message: "Are you sure you want to delete this record?",
                    buttons: {
                        // yes and no sequence

                        confirm: {
                            label: 'Yes',
                            className: 'btn-success btn-sm'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger btn-sm'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                type: 'DELETE',
                                url: url,
                                headers: {
                                    'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                                },
                                success: function (data) {
                                    $('#editmodal').modal('hide');
                                    //show please wait modal
                                    $('#pleasewait').modal('show');
                                    //show toastr after 3
                                    setTimeout(function () {
                                        toastr.success("Data Successfully Deleted!");
                                        // hide please wait modal
                                    }, 2000);
                                    setTimeout(function () {
                                        window.location.reload();
                                    }, 3000);

                                },
                                //if failed
                                error: function (data) {
                                    toastr.error("Error")
                                }
                            });
                        }
                    }
                });

            },
        });
    });
}
var urls = [];
function HardwareAdmin() {
    var table2 = $("#hardwareRequestList").DataTable({
        "ajax": {
            "url": "/api/all/hardReq",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "fnInitComplete": function (oSettings, json) {
            // search after pressing enter
            $('#hardwareRequestList_filter input').unbind();
            $('#hardwareRequestList_filter input').bind('keyup', function (e) {
                if (e.keyCode == 13) {
                    // trigger search 
                    $('#pleasewait').modal('show');
                    setTimeout(function () {
                        $('#pleasewait').modal('hide');
                    }, 2500);
                    $('#hardwareRequestList').DataTable().search(this.value).draw();
                }
                // if search is empty, reset the filter
                if (this.value == "") {
                    $('#hardwareRequestList').DataTable().search("").draw();
                }
            }
            );
        },
        // "searching" : " true",
        // "searchDelay" : 1000,
        // order by desc dateuploaded
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                data: "ticket",
                render: function (data, type, row) {
                    if (data == null) {
                        return '<span class="badge bg-danger">No Ticket</span>';
                    }
                    return `<span class="badge bg-info">${(data)}</span>`
                }
            },
            { data: "dateAdded" },
            { data: "fullName" },
            {
                data: "hardwareId",
                render: function (data, type, row) {
                    return row.hardware.name;
                }
            },
            {
                data: "hardwareTechnician.name",
                render: function (data, type, row) {
                    if (data == null) {
                        return '<span class="badge bg-success">Not Assigned</span>'
                    }
                    else
                        return row.hardwareTechnician.name;
                }
            },
            {
                data: "status", render: function (data, type, row) {
                    if (data == 1) {
                        return '<span class="badge bg-secondary">Open</span>'
                    }
                    else if (data == 2) {
                        return '<span class="badge bg-success">Resolved</span>'
                    }
                    else if (data == 3) {
                        return '<span class="badge bg-warning">On hold</span>'
                    }
                    else if (data == 4) {
                        return '<span class="badge bg-info">In Progress</span>'
                    }
                    else if (data == 5) {
                        return '<span class="badge  bg-danger">Cancel Request</span>'
                    }
                    else
                        return '<span class="badge  bg-secondary">Open</span>'
                }
            },
            {
                data: "isVerified", render: function (data, type, row) {
                    if (data == true) {
                        return '<i class="fas fa-check-circle fa-2x ms-4" style="color:green;"></i>'

                    }
                    else
                        return ''
                }
            },
            {
                data: null,
                render: function (data) {
                    return '<button class="btn btn-info text-light btn-sm request ms-1 mb-1" data-id="' + data.id + '"><i class="fas fa-eye"></i> View </button>'
                        + '<button class=" btn btn-primary btn-sm attach ms-1 mb-1 text-white" data-id="' + data.id + '"><i class="fas fa-paperclip"></i> Attachment</button>'
                        + '<button class=" btn btn-primary btn-sm technician ms-1 mb-1" data-id="' + data.id + '"><i class="fas fa-users-cog"></i> Technician</button>'
                        + '<button class="btn btn-success btn-sm approvedby ms-1 mb-1 text-white" data-id="' + data.id + '"><i class="fas fa-user-edit"></i> Verified </button>'
                },
                orderable: false,
                width: "420px",
            },

        ],
    });

    $('#hardwareRequestList').on('click', '.attach', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/hardwareRequest/GetRequestbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#hardwareDisplay').modal('show');
                $('#hardwareDisplay').find('.modal-title').text('File Attachment');
                var refId = $('#hardwareRequestId').val(data.id);
                //alert(data.statusId);
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/uploadDislpay/" + id,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },

                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();
                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return '';
                                }
                            },
                            className: "text-center"
                        },

                    ]
                });


                $('#UploadList').on('click', '.delete', function () {
                    var id = $(this).attr('data-id');
                    bootbox.confirm({
                        message: "Are you sure you want to delete this record?",
                        buttons: {
                            confirm: {
                                label: 'Yes',
                                className: 'btn-success btn-sm'
                            },
                            cancel: {
                                label: 'No',
                                className: 'btn-danger btn-sm'
                            }
                        },
                        callback: function (result) {
                            if (result) {
                                $.ajax({
                                    type: 'DELETE',
                                    url: '/api/v1/deleteImage/' + id,
                                    headers: {
                                        "Authorization": "Bearer " + localStorage.getItem('access_token')
                                    },
                                    success: function (data) {
                                        toastr.success("Data Successfully Deleted!");
                                        window.location.reload();
                                    }
                                });
                            }
                        }
                    });
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }
        });
        // alert(data);
    });



    $('#hardwareRequestList').on('click', '.technician', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/hardwareRequest/GetRequestbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#TechnicianModal').modal('show');
                $('#assignTech').find('input[name="id"]').val(data.id);
                $('#assignTech').find('select[name="hardwareTechnicianId"]').val("");
                $('#assignTech').find('input[name="hardwareTechnicianId"]').val(data.hardwareTechnicianId);

                ////alert(data.hardwareTechnicianId);
                //if (data.hardwareTechnicianId == 0)
                //    $('.update-technician').prop('disabled', false)
                //else
                //    $('.update-technician').prop('disabled', true)

            }
        })
    });
    $('#updateTechnician').click(function (e) {
        // var id = $('input[name=id]').val();
        // var data = $('#assignTech').serialize();
        var hardwareTechnicianId = $('#assignTech').find('select[name=hardwareTechnicianId]').val();
        var hardwareRequestId = $('#assignTech').find('input[name=id]').val();
        var data = {
            "id": hardwareRequestId,
            "hardwareTechnicianId": hardwareTechnicianId
        };
        $.ajax({
            type: 'PUT',
            url: '/api/hardwareRequest/updateTechnician/' + hardwareRequestId,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $("#TechnicianModal").modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success(" Successfully Assign Technician!");
                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                //alert(id);
                toastr.error("Please Assign Technician!")
            }
        });
    });
    //get id assign
    $('#hardwareRequestList').on('click', '.assign', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/hardwareRequest/GetRequestbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#StatusModal').modal('show');
                $('#assign').find('input[name="id"]').val(data.id);
                $('#assign').find('select[name="hardwareTechnicianId"]').val(data.hardwareTechnicianId);
                $('#assign').find('select[name="statusId"]').val("");

                // alert(data.statusId);
                if (data.statusId == 5)
                    $('.update-status').prop('disabled', true)
                else if (data.statusId == 3)
                    $('.update-status').prop('disabled', true)
                else
                    $('.update-status').prop('disabled', false)
            }
        })
        // alert(data);
    });
    //submit assign
    $('#updateStatus').click(function (e) {
        e.preventDefault();
        var id = $('input[name=id]').val();
        var data = $('#assign').serialize();
        $.ajax({
            type: 'PUT',
            url: '/api/hardwareRequest/updateStatus/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#StatusModal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Data Successfully Update Status!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                //alert(id);
                toastr.error("Failed!")
            }
        });
    });
    //get RequestDetails
    $('#hardwareRequestList').on('click', '.request', function () {
        var id = $(this).attr('data-id');
        $("#generateReportBtn").attr('data-id', id);

        var url = '/api/v2/hardwareRequest/GetRequestbyId/' + id;

        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#hardwareRequestModal').modal('show');
                $('#EditRequest').find('input[name="id"]').val(data.id);
                $('#EditRequest').find('input[name="fullName"]').val(data.fullName);
                $('#EditRequest').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#EditRequest').find('input[name="modelName"]').val(data.modelName);
                $('#EditRequest').find('select[name="departmentsId"]').val(data.departmentsId);
                $('#EditRequest').find('select[name="divisionsId"]').val(data.divisionsId);
                $('#EditRequest').find('select[name="hardwareId"]').val(data.hardwareId);
                $('#EditRequest').find('select[name="unitTypeId"]').val(data.unitTypeId);
                $('#EditRequest').find('input[name="brandName"]').val(data.brandName);
                $('#EditRequest').find('input[name="FileName"]').val(data.documentLabel);
                $('#EditRequest').find('textarea[name="description"]').val(data.description);
                $('#EditRequest').find('select[name="statusId"]').val(data.statusId);
                $('#EditRequest').find('select[name="findingId"]').val(data.findingId);
                $('#EditRequest').find('select[name="hardwareTechnicianId"]').val(data.hardwareTechnicianId);
                $('#EditRequest').find('input[name="possibleCause"]').val(data.possibleCause);
                $('#EditRequest').find('textarea[name="remarks"]').val(data.remarks);
                $('#EditRequest').find('input[name="dateStarted"]').val(data.dateStarted);
                $('#EditRequest').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#EditRequest').find('input[name="timeStarted"]').val(data.timeStarted);
                $('#EditRequest').find('input[name="timeEnded"]').val(data.timeEnded);
                $('#EditRequest').find('input[name="approver"]').val(data.approver);
                $('#EditRequest').find('input[name="dateApproved"]').val(data.dateApproved);
                $('#EditRequest').find('input[name="viewer"]').val(data.viewer);
                $('#EditRequest').find('input[name="dateView"]').val(data.dateView);
                $('#EditRequest').find('input[name="serialNumber"]').val(data.serialNumber);
                $('#EditRequest').find('input[name="controlNumber"]').val(data.controlNumber);

                // alert(data.timeEnded);
            }
        })
        // alert(data);
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/department',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=departmentsId]').append('<option value=""> Select Department</option>');
            $.each(data, function (index, value) {
                $('select[name=departmentsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/UnitType',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=unitTypeId]').append('<option value=""> Select UnitType</option>');
            $.each(data, function (index, value) {
                $('select[name=unitTypeId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/division',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=divisionsId]').append('<option value=""> Select Division</option>');
            $.each(data, function (index, value) {
                $('select[name=divisionsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/hardware',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=hardwareId]').append('<option value=""> Select Hardware Service Category</option>');
            $.each(data, function (index, value) {
                $('select[name=hardwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    //GET findings
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/Findings',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=findingId]').append('<option value=""> Select Result</option>');
            $.each(data, function (index, value) {
                $('select[name=findingId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/Technician',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=hardwareTechnicianId]').append('<option value=""> Select Technician</option>');
            $.each(data, function (index, value) {
                $('select[name=hardwareTechnicianId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    //status
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/status',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=statusId]').append('<option value=""> Select Status </option>');
            $.each(data, function (index, value) {
                $('select[name=statusId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    $('#hardwareRequestList').on('click', '.approvedby', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/hardwareRequest/GetRequestbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#ApprovedByModal').modal('show');
                $('#approve').find('input[name="id"]').val(data.id);
                $('#approve').find('select[name="statusId"]').val(data.statusId);
                $('#approve').find('textarea[name="approverRemarks"]').val(data.approverRemarks);
                console.log(data.isVerified);
                if (data.isVerified == true)
                    $('.update-verified').prop('disabled', true)
                else
                    $('.update-verified').prop('disabled', false)


            }
        });
    });

    $('#Approved').click(function (e) {
        e.preventDefault();
        var id = $('#approve').find('input[name="id"]').val();
        var data = $('#approve').serialize();
        $.ajax({
            type: 'PUT',
            url: '/api/hardwareRequest/approver/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#ApprovedByModal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success(" Successfully Approved!");
                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    table2.ajax.reload();
                    $('#pleasewait').modal('hide');
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Fill up Remarks")
            }
        });
    });
    $('#hardwareRequestList').on('click', '.viewedby', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/hardwareRequest/GetRequestbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#ViewedByModal').modal('show');
                $('#viewed').find('input[name="viewedBy"]').val(data.viewer);
                $('#viewed').find('textarea[name="viewedRemarks"]').val(data.viewedRemarks);
            }
        })
    })
}
function HardwareAdmin2() {
    var tables;
    tables = $('#hardwareRequestList').DataTable({
        ajax: {
            url: "/api/v2/hardwareRequest/GetRequest",
            dataSrc: "",
            headers: {
                "Authorization": "Bearer" + localStorage.getItem('access_token')
            }
        },
        ordering: false,
        autoWidth: false,
        columns: [
            {
                data: "ticket",
                render: function (data, type, row) {
                    if (data == null) {
                        return '<span class="badge bg-danger">No Ticket</span>';
                    }
                    return `<span class="badge bg-info">${(data)}</span>`
                }
            },
            { data: "dateAdded" },
            { data: "fullName" },
            {
                data: "statusId", render: function (data, type, row) {
                    if (data == 1) {
                        return '<span class="badge bg-secondary">Open</span>'
                    }
                    else if (data == 2) {
                        return '<span class="badge bg-success">Resolved</span>'
                    }
                    else if (data == 3) {
                        return '<span class="badge bg-warning">On hold</span>'
                    }
                    else if (data == 4) {
                        return '<span class="badge bg-info">In Progress</span>'
                    }
                    else if (data == 5) {
                        return '<span class="badge  bg-danger">Cancel Request</span>'
                    }
                    else
                        return '<span class="badge  bg-secondary">Open</span>'
                }
            },
            {
                data: "dateApproved", render: function (data, type, row) {
                    if (data == null) {
                        return '<span class="badge  bg-primary">waiting to verified</span>'
                    }
                    else
                        return `<span>${moment(data).format("D/M/Y LT")}</span>`;
                }
            },
            {
                data: "dateView", render: function (data, type, row) {
                    if (data == null) {
                        return '<span class="badge  bg-primary">waiting to verified</span>'
                    }
                    else
                        return `<span>${moment(data).format("D/M/Y LT")}</span>`;
                }
            },
            {
                data: null,
                render: function (data) {
                    return '<button class="btn btn-info text-light btn-sm request ms-1 mb-1" data-id="' + data.id + '"><i class="fas fa-eye"></i> View Details </button>'
                        + '<button class="btn btn-success btn-sm approvedby ms-1 mb-1 " data-id="' + data.id + '"><i class="fas fa-user-edit"></i> Verified </button>'
                },
                orderable: false,
                width: "250px",
            },
        ]
    });
    $('#hardwareRequestList').on('click', '.technician', function () {
        var id = $(this).attr('data-id');
        var url = '/api/hardwareRequest/GetRequestbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#TechnicianModal').modal('show');
                $('#assignTech').find('input[name="id"]').val(data.id);
                $('#assignTech').find('select[name="hardwareTechnicianId"]').val("");

                //  alert(data.statusId);
                if (data.statusId == 5)
                    $('.update-technician').prop('disabled', true)
                else if (data.statusId == 3)
                    $('.update-technician').prop('disabled', true)

                else
                    $('.update-technician').prop('disabled', false)
            }
        })
    });
    $('#updateTechnician').click(function (e) {
        // var id = $('input[name=id]').val();
        // var data = $('#assignTech').serialize();
        var hardwareTechnicianId = $('#assignTech').find('select[name=hardwareTechnicianId]').val();
        var hardwareRequestId = $('#assignTech').find('input[name=id]').val();
        var data = {
            "id": hardwareRequestId,
            "hardwareTechnicianId": hardwareTechnicianId
        };
        $.ajax({
            type: 'PUT',
            url: '/api/hardwareRequest/updateTechnician/' + hardwareRequestId,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $("#TechnicianModal").modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Successfully Assign Technician!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                //alert(id);
                toastr.error("Please Assign Technician!")
            }
        });
    });
    //get id assign
    $('#hardwareRequestList').on('click', '.assign', function () {
        var id = $(this).attr('data-id');
        var url = '/api/hardwareRequest/GetRequestbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#StatusModal').modal('show');
                $('#assign').find('input[name="id"]').val(data.id);
                $('#assign').find('select[name="hardwareTechnicianId"]').val(data.hardwareTechnicianId);
                $('#assign').find('select[name="statusId"]').val("");

                // alert(data.statusId);
                if (data.statusId == 5)
                    $('.update-status').prop('disabled', true)
                else if (data.statusId == 3)
                    $('.update-status').prop('disabled', true)
                else
                    $('.update-status').prop('disabled', false)
            }
        })
        // alert(data);
    });
    //submit assign
    $('#updateStatus').click(function (e) {
        e.preventDefault();
        var id = $('input[name=id]').val();
        var data = $('#assign').serialize();
        $.ajax({
            type: 'PUT',
            url: '/api/hardwareRequest/updateStatus/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //toastr.success(" Successfully Update Status!");
                //tables.ajax.reload();
                ////setTimeout(() => {
                ////    location.reload();
                ////}, 1500);
                $("#StatusModal").modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Successfully Update Status!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                //alert(id);
                toastr.error("Please Update Status!")
            }
        });
    });
    //get RequestDetails
    $('#hardwareRequestList').on('click', '.request', function () {
        var id = $(this).attr('data-id');
        var url = '/api/hardwareRequest/GetRequestbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#hardwareRequestModal').modal('show');
                $('#EditRequest').find('input[name="id"]').val(data.id);
                $('#EditRequest').find('input[name="fullName"]').val(data.fullName);
                $('#EditRequest').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#EditRequest').find('input[name="modelName"]').val(data.modelName);
                $('#EditRequest').find('select[name="departmentsId"]').val(data.departmentsId);
                $('#EditRequest').find('select[name="divisionsId"]').val(data.divisionsId);
                $('#EditRequest').find('select[name="hardwareId"]').val(data.hardwareId);
                $('#EditRequest').find('select[name="unitTypeId"]').val(data.unitTypeId);
                $('#EditRequest').find('input[name="brandName"]').val(data.brandName);
                $('#EditRequest').find('textarea[name="description"]').val(data.description);
                $('#EditRequest').find('select[name="statusId"]').val(data.statusId);
                $('#EditRequest').find('select[name="findingId"]').val(data.findingId);
                $('#EditRequest').find('select[name="hardwareTechnicianId"]').val(data.hardwareTechnicianId);
                $('#EditRequest').find('input[name="possibleCause"]').val(data.possibleCause);
                $('#EditRequest').find('textarea[name="remarks"]').val(data.remarks);
                $('#EditRequest').find('input[name="dateStarted"]').val(data.dateStarted);
                $('#EditRequest').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#EditRequest').find('input[name="timeStarted"]').val(data.timeStarted);
                $('#EditRequest').find('input[name="timeEnded"]').val(data.timeEnded);
                $('#EditRequest').find('input[name="approver"]').val(data.approver);
                $('#EditRequest').find('input[name="dateApproved"]').val(data.dateApproved);
                $('#EditRequest').find('textarea[name="approverRemarks"]').val(data.approverRemarks);
                $('#EditRequest').find('input[name="viewer"]').val(data.viewer);
                $('#EditRequest').find('input[name="dateView"]').val(data.dateView);
                $('#EditRequest').find('textarea[name="viewedRemarks"]').val(data.viewedRemarks);



                // alert(data.timeEnded);
            }
        })
        // alert(data);
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/department',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=departmentsId]').append('<option value=""> Select Department</option>');
            $.each(data, function (index, value) {
                $('select[name=departmentsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/UnitType',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=unitTypeId]').append('<option value=""> Select UnitType</option>');
            $.each(data, function (index, value) {
                $('select[name=unitTypeId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/division',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=divisionsId]').append('<option value=""> Select Division</option>');
            $.each(data, function (index, value) {
                $('select[name=divisionsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/hardware',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=hardwareId]').append('<option value=""> Select Hardware Service Category</option>');
            $.each(data, function (index, value) {
                $('select[name=hardwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    //GET findings
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/Findings',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=findingId]').append('<option value=""> Select Result</option>');
            $.each(data, function (index, value) {
                $('select[name=findingId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/Technician',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=hardwareTechnicianId]').append('<option value=""> Select Technician</option>');
            $.each(data, function (index, value) {
                $('select[name=hardwareTechnicianId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    //status
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/status',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=statusId]').append('<option value=""> Select Status </option>');
            $.each(data, function (index, value) {
                $('select[name=statusId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    $('#hardwareRequestList').on('click', '.approvedby', function () {
        var id = $(this).attr('data-id');
        var url = '/api/hardwareRequest/GetRequestbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#ApprovedByModal').modal('show');
                $('#approve').find('input[name="id"]').val(data.id);
                $('#approve').find('select[name="statusId"]').val(data.statusId);
                $('#approve').find('textarea[name="approverRemarks"]').val(data.approverRemarks);
                $('#approve').find('input[name="isReported"]').val(data.isReported);

                if (data.isReported == true)
                    $('.update-verified').prop('disabled', false)
                else
                    $('.update-verified').prop('disabled', true)
                // alert(id);
                // alert(data.statusId);
            }
        })
        // alert(data);
        //AddApproved
    });
    $('#Approved').click(function (e) {
        e.preventDefault();
        var id = $('#approve').find('input[name="id"]').val();
        var data = $('#approve').serialize();
        $.ajax({
            type: 'PUT',
            url: '/api/hardwareRequest/approver/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                tables.ajax.reload();
                $("#ApprovedByModal").modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Request Successfully Approved!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Fill up Remarks")
            }
        });
    });
    $('#hardwareRequestList').on('click', '.viewedby', function () {
        var id = $(this).attr('data-id');
        var url = '/api/hardwareRequest/GetRequestbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#ViewedByModal').modal('show');
                $('#viewed').find('input[name="viewedBy"]').val(data.viewer);
                $('#viewed').find('textarea[name="viewedRemarks"]').val(data.viewedRemarks);
            }
        })
    })
}
function HardwareDeveloper() {
    var table2 = $("#hardwareRequestList").DataTable({
        "ajax": {
            "url": "/api/all/hardReq",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "fnInitComplete": function (oSettings, json) {
            // search after pressing enter
            $('#hardwareRequestList_filter input').unbind();
            $('#hardwareRequestList_filter input').bind('keyup', function (e) {
                if (e.keyCode == 13) {
                    // trigger search 
                    $('#pleasewait').modal('show');
                    setTimeout(function () {
                        $('#pleasewait').modal('hide');
                    }, 2500);
                    $('#hardwareRequestList').DataTable().search(this.value).draw();
                }
                // if search is empty, reset the filter
                if (this.value == "") {
                    $('#hardwareRequestList').DataTable().search("").draw();
                }
            }
            );
        },
        // "searching" : " true",
        // "searchDelay" : 1000,
        // order by desc dateuploaded
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                "data": "ticket",
                render: function (data, type, row) {
                    if (data == null) {
                        return '<span class="badge bg-danger">No Ticket</span>';
                    }
                    return `<span class="badge bg-info">${(data)}</span>`
                }

            },
            { "data": "dateAdded" },
            { "data": "fullName" },
            {
                "data": "hardwareId",
                "render": function (data, type, row) {
                    return row.hardware.name;
                }
            },
            {
                "data": "statusId", render: function (data, type, row) {
                    if (data == 1) {
                        return '<span class="badge  bg-secondary">Open</span>'
                    }
                    else if (data == 2) {
                        return '<span class="badge bg-success">Resolved</span>'
                    }
                    else if (data == 3) {
                        return '<span class="badge  bg-warning">On hold</span>'
                    }
                    else if (data == 4) {
                        return '<span class="badge  bg-info">In Progress</span>'
                    }
                    else if (data == 5) {
                        return '<span class="badge  bg-danger">Cancel Request</span>'
                    }
                    else
                        return '<span class="badge  bg-secondary">Open</span>'

                }
            },

            {
                "data": null,
                "render": function (data, type, full) {
                    return '<button class="btn btn-info btn-sm view ms-1 mb-1 text-white" data-id="' + data.id + '"><i class="far fa-eye"></i> View</button>' +
                        '<button class=" btn btn-success btn-sm attach ms-1 mb-1 text-white" data-id="' + data.id + '"><i class="fas fa-paperclip"></i> Attachments</button>' +
                        '<button class="btn btn-danger btn-sm delete ms-1 mb-1" data-id="' + data.id + '"><i class="far fa-edit"></i> Delete</button>'


                },
                "orderable": false,
                "width": "290px",
            },

        ],
    });
    $('#hardwareRequestList').on('click', '.attach', function () {
        var id = $(this).attr('data-id');
        var url = '/api/hardwareRequest/GetRequestbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#hardwareDisplay').modal('show');
                $('#hardwareDisplay').find('.modal-title').text('File Attachment');
                var refId = $('#hardwareRequestId').val(data.id);
                //alert(data.statusId);
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/uploadDislpay/" + id,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            }
                        },

                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();
                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return '';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            data: null,
                            render: function (data, type, row) {
                                return '<button class="btn btn-danger text-light btn-sm delete ms-1 mb-1" data-id="' + row.id + '"><i class="fas fa-eye"></i> Delete </button>'
                            },
                            className: "action-center"

                        }

                    ]
                });


            },
            error: function (data) {
                toastr.error("Failed")
            }
        });
        // alert(data);
    });

    $('#UploadList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        bootbox.confirm({
            message: "Are you sure you want to delete this record?",
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success btn-sm'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger btn-sm'
                }
            },
            callback: function (result) {
                if (result) {
                    $.ajax({
                        type: 'DELETE',
                        url: '/api/v1/deleteImage/' + id,
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        },
                        success: function (data) {
                            toastr.success("Data Successfully Deleted!");
                            window.location.reload();
                        }
                    });
                }
            }
        });
    });


    //get RequestDetailsModal
    $('#hardwareRequestList').on('click', '.request', function () {
        var id = $(this).attr('data-id');
        // alert(id);
        var url = '/api/hardwareRequest/GetRequestbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#hardwareRequestModal').modal('show');

                $('#EditRequest').find('input[name="id"]').val(data.id);
                $('#EditRequest').find('input[name="brandName"]').val(data.brandName);
                $('#EditRequest').find('input[name="modelName"]').val(data.modelName);
                $('#EditRequest').find('select[name="unitTypeId"]').val(data.unitTypeId);
                $('#EditRequest').find('select[name="hardwareId"]').val(data.hardwareId);
                $('#EditRequest').find('textarea[name="description"]').val(data.description);

                $('#EditRequest').find('input[name="statusId"]').val(data.statusId);
                if (data.statusId == 2)
                    $('.update-request').prop('disabled', true)

                else if (data.statusId == 3)
                    $('.update-request').prop('disabled', true)

                else if (data.statusId == 4)
                    $('.update-request').prop('disabled', true)

                else if (data.statusId == 5)
                    $('.update-request').prop('disabled', true)
                else
                    $('.update-request').prop('disabled', false)




                //alert(data.statusId);
            }
        })
        // alert(data);
    });


    //save edit
    $('#UpdateRequest').click(function (e) {
        e.preventDefault();

        var id = $('#EditRequest').find('input[name="id"]').val();
        var data = $('#EditRequest').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/hardwareRequest/Request/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                // tables.ajax.reload();
                $("#hardwareRequestModal").modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Request Successfully Updated!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                console.log(data.id);
                toastr.error("Fill up alll forms / Invalid")
            }
        })
    })


    //get CancelModal
    $('#hardwareRequestList').on('click', '.cancel', function () {
        var id = $(this).attr('data-id');
        //alert(id);
        var url = '/api/hardwareRequest/GetRequestbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#CancelRequestModal').modal('show');

                $('#cancelRequest').find('input[name="id"]').val(data.id);
                $('#cancelRequest').find('input[name="brandName"]').val(data.brandName);
                $('#cancelRequest').find('input[name="modelName"]').val(data.modelName);
                $('#cancelRequest').find('select[name="unitTypeId"]').val(data.unitTypeId);
                $('#cancelRequest').find('select[name="hardwareId"]').val(data.hardwareId);
                $('#cancelRequest').find('textarea[name="description"]').val(data.description);

                $('#cancleRequest').find('input[name="statusId"]').val(data.statusId);
                //alert(data.statusId);
                if (data.statusId == 2)
                    $('.cancel-request').attr('disabled', true);
                else if (data.statusId == 3)
                    $('.cancel-request').attr('disabled', true);
                else if (data.statusId == 4)
                    $('.cancel-request').attr('disabled', true);
                else if (data.statusId == 5)
                    $('.cancel-request').attr('disabled', true);
                else
                    $('.cancel-request').attr('disabled', false);
            }
        })
        // alert(data);
    });

    // save cancel
    $('#cancel').click(function (e) {
        e.preventDefault();
        var id = $('#cancelRequest').find('input[name="id"]').val();
        var data = $('#cancelRequest').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/hardwareRequest/cancel/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $("#CancelRequestModal").modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success(" Successfully Cancelled Request!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                console.log(data.id);
                toastr.error("Fill up Remarks")
            }
        })
    })



    //get Details
    $('#hardwareRequestList').on('click', '.view', function () {
        var id = $(this).attr('data-id');
        $("#generateReportBtn").attr('data-id', id);

        //alert(id);
        var url = '/api/hardwareRequest/GetRequestbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#viewmodal').modal('show');

                $('#viewRequest').find('input[name="id"]').val(data.id);
                $('#viewRequest').find('input[name="fullName"]').val(data.fullName);
                $('#viewRequest').find('input[name="FileName"]').val(data.documentLabel);

                $('#viewRequest').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#viewRequest').find('input[name="modelName"]').val(data.modelName);
                $('#viewRequest').find('select[name="departmentsId"]').val(data.departmentsId);
                $('#viewRequest').find('select[name="divisionsId"]').val(data.divisionsId);
                $('#viewRequest').find('select[name="hardwareId"]').val(data.hardwareId);
                $('#viewRequest').find('select[name="unitTypeId"]').val(data.unitTypeId);
                $('#viewRequest').find('input[name="brandName"]').val(data.brandName);
                $('#viewRequest').find('textarea[name="description"]').val(data.description);
                $('#viewRequest').find('select[name="statusId"]').val(data.statusId);
                $('#viewRequest').find('select[name="findingId"]').val(data.findingId);
                $('#viewRequest').find('select[name="hardwareTechnicianId"]').val(data.hardwareTechnicianId);
                $('#viewRequest').find('input[name="possibleCause"]').val(data.possibleCause);
                $('#viewRequest').find('textarea[name="remarks"]').val(data.remarks);
                $('#viewRequest').find('input[name="dateStarted"]').val(data.dateStarted);
                $('#viewRequest').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#viewRequest').find('input[name="timeStarted"]').val(data.timeStarted);
                $('#viewRequest').find('input[name="timeEnded"]').val(data.timeEnded);
                $('#viewRequest').find('input[name="viewer"]').val(data.viewer);
                $('#viewRequest').find('input[name="dateView"]').val(data.dateView);
                $('#viewRequest').find('input[name="approver"]').val(data.viewer);
                $('#viewRequest').find('input[name="dateApproved"]').val(data.dateView);

            }
        })
        // alert(data);
    });
    //unit Type
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/unitType',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=unitTypeId]').append('<option value="-1"> Select UnitType</option>');
            $.each(data, function (index, value) {
                $('select[name=unitTypeId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });

    //Department
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/department',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=departmentsId]').append('<option value=""> Select Department</option>');
            $.each(data, function (index, value) {
                $('select[name=departmentsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //Division
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/division',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=divisionsId]').append('<option value=""> Select Division</option>');
            $.each(data, function (index, value) {
                $('select[name=divisionsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //hardware Category
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/hardware',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=hardwareId]').append('<option value=""> Select Hardware Service Category</option>');
            $.each(data, function (index, value) {
                $('select[name=hardwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //technician
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/Technician',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=hardwareTechnicianId]').append('<option value=""> Select Technician</option>');
            $.each(data, function (index, value) {
                $('select[name=hardwareTechnicianId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //status
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/status',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=statusId]').append('<option value=""> Select Status </option>');
            $.each(data, function (index, value) {
                $('select[name=statusId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //GET findings
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/Findings',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=findingId]').append('<option value=""> Select Result</option>');
            $.each(data, function (index, value) {
                $('select[name=findingId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/Technician',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=hardwareTechnicianId]').append('<option value=""> Select Technician</option>');
            $.each(data, function (index, value) {
                $('select[name=hardwareTechnicianId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });

    //Delete
    $('#hardwareRequestList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        var url = '/api/hardwareRequest/Delete/' + id;
        $.ajax({
            // confirm before delete
            beforeSend: function (xhr) {
                // use bootbox
                bootbox.confirm({
                    message: "Are you sure you want to delete this record?",
                    buttons: {
                        // yes and no sequence

                        confirm: {
                            label: 'Yes',
                            className: 'btn-success btn-sm'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger btn-sm'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                type: 'DELETE',
                                url: url,
                                headers: {
                                    'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                                },
                                success: function (data) {
                                    //show please wait modal
                                    $('#pleasewait').modal('show');
                                    //show toastr after 3
                                    setTimeout(function () {
                                        toastr.success("Data Successfully Deleted!");
                                        // hide please wait modal
                                    }, 2000);
                                    setTimeout(function () {
                                        window.location.reload();
                                    }, 3000);
                                },
                                //if failed
                                error: function (data) {
                                    toastr.error("Error")
                                }
                            });
                        }
                    }
                });

            },
        });
    });

    //get RequestDetailsModal
    $('#hardwareRequestList').on('click', '.image', function () {
        var id = $(this).attr('data-id');
        // alert(id);
        var url = '/api/hardwareRequest/GetRequestbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#AddImage').modal('show');
                //alert(data.statusId);
            }
        })
        // alert(data);
    });
}
var urls = [];
function HardwareSuperAdmin() {
    var tables;

    var table2 = $("#hardwareRequestList").DataTable({
        "ajax": {
            "url": "/api/all/hardReq",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "fnInitComplete": function (oSettings, json) {
            // search after pressing enter
            $('#hardwareRequestList_filter input').unbind();
            $('#hardwareRequestList_filter input').bind('keyup', function (e) {
                if (e.keyCode == 13) {
                    // trigger search 
                    $('#pleasewait').modal('show');
                    setTimeout(function () {
                        $('#pleasewait').modal('hide');
                    }, 2500);
                    $('#hardwareRequestList').DataTable().search(this.value).draw();
                }
                // if search is empty, reset the filter
                if (this.value == "") {
                    $('#hardwareRequestList').DataTable().search("").draw();
                }
            }
            );
        },
        // "searching" : " true",
        // "searchDelay" : 1000,
        // order by desc dateuploaded
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [
            {
                data: "ticket",
                render: function (data, type, row) {
                    if (data == null) {
                        return '<span class="badge bg-danger">No Ticket</span>';
                    }
                    return `<span class="badge bg-info" style="font-size:"12px;"">${(data)}</span>`
                }
            },
            {
                data: "dateAdded"
            },

            { data: "fullName" },

            {
                data: "statusId", render: function (data, type, row) {
                    if (data == 1) {
                        return '<span class="badge bg-secondary">Open</span>'
                    }
                    else if (data == 2) {
                        return '<span class="badge bg-success">Resolved</span>'
                    }
                    else if (data == 3) {
                        return '<span class="badge bg-warning">On hold</span>'
                    }
                    else if (data == 4) {
                        return '<span class="badge bg-info">In Progress</span>'
                    }
                    else if (data == 5) {
                        return '<span class="badge  bg-danger">Cancel Request</span>'
                    }
                    else
                        return '<span class="badge  bg-secondary">Open</span>'
                }
            },
            {
                "data": "dateView", render: function (data, type, row) {
                    if (data == null) {
                        return ' -- '
                    }
                    else
                        return `<span>${moment(data).format("D/M/Y LT")}</span>`;

                }
            },
            {
                "data": "viewer", render: function (data, type, row) {
                    if (data == null) {
                        return ''
                    }
                    else
                        return `<span>${(data)}</span>`
                }
            },
            {
                "data": "dateApproved", render: function (data, type, row) {
                    if (data == null) {
                        return '--'
                    }
                    else
                        return `<span>${moment(data).format("D/M/Y LT")}</span>`;
                }
            },

            {
                data: null,
                render: function (data) {
                    return '<button class="btn btn-info text-light btn-sm request ms-1 mb-1" data-id="' + data.id + '"><i class="fas fa-eye"></i> View Details</button>'
                        + '<button class="btn btn-success text-light btn-sm attach ms-1 mb-1" data-id="' + data.id + '"><i class="fas fa-paperclip"></i> Attachments </button>'
                        + '<button class="btn btn-primary text-light btn-sm ms-1 mb-1 viewedby" data-id="' + data.id + '"><i class="fas fa-user-check"></i> Approved </button>'
                },
                orderable: false,
                width: "360px",
            },

        ],
    });
    $('#hardwareRequestList').on('click', '.attach', function () {
        var id = $(this).attr('data-id');
        // alert(id);
        var url = '/api/v2/hardwareRequest/GetRequestbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#hardwareDisplay').modal('show');
                $('#hardwareDisplay').find('.modal-title').text('File Attachement');
                var refId = $('#hardwareRequestId').val(data.id);
                //alert(data.id);
                //alert(data.statusId);
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,

                    ajax: {
                        url: "/api/v2/uploadDislpay/" + id,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },

                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();
                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>'
                                        +
                                        '<a href="' + newF + '" target="_blank" class="btn btn-primary btn-sm" style="margin: 2%;">View</a>';
                                }
                                else {
                                    return '';
                                }
                            },
                            className: "text-center"
                        },

                    ]
                })
            }
        })
        // alert(data);
    });

    $('#UploadList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        $('#hardwareDisplay').modal('hide');

        bootbox.confirm({
            message: "Are you sure you want to delete this record?",
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success btn-sm'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger btn-sm'
                }
            },
            callback: function (result) {
                if (result) {
                    $.ajax({
                        type: 'DELETE',
                        url: '/api/v1/deleteImage/' + id,
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        },
                        success: function (data) {
                            toastr.success("Data Successfully Deleted!");
                            window.location.reload();
                        }
                    });
                }
            }
        });
    });


    //get RequestDetails
    $('#hardwareRequestList').on('click', '.request', function () {
        var id = $(this).attr('data-id');
        $("#generateReportBtn").attr('data-id', id);


        var url = '/api/v2/hardwareRequest/GetRequestbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#hardwareRequestModal').modal('show');

                $('#EditRequest').find('input[name="id"]').val(data.id);
                $('#EditRequest').find('input[name="fullName"]').val(data.fullName);
                $('#EditRequest').find('input[name="dateAdded"]').val(data.dateAdded);
                $('#EditRequest').find('input[name="FileName"]').val(data.documentLabel);

                $('#EditRequest').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#EditRequest').find('input[name="modelName"]').val(data.modelName);
                $('#EditRequest').find('select[name="departmentsId"]').val(data.departmentsId);
                $('#EditRequest').find('select[name="divisionsId"]').val(data.divisionsId);
                $('#EditRequest').find('select[name="hardwareId"]').val(data.hardwareId);
                $('#EditRequest').find('select[name="unitTypeId"]').val(data.unitTypeId);
                $('#EditRequest').find('input[name="brandName"]').val(data.brandName);
                $('#EditRequest').find('textarea[name="description"]').val(data.description);
                $('#EditRequest').find('select[name="statusId"]').val(data.statusId);
                $('#EditRequest').find('select[name="findingId"]').val(data.findingId);
                $('#EditRequest').find('select[name="hardwareTechnicianId"]').val(data.hardwareTechnicianId);
                $('#EditRequest').find('input[name="possibleCause"]').val(data.possibleCause);
                $('#EditRequest').find('textarea[name="remarks"]').val(data.remarks);
                $('#EditRequest').find('input[name="dateStarted"]').val(data.dateStarted);
                $('#EditRequest').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#EditRequest').find('input[name="timeStarted"]').val(data.timeStarted);
                $('#EditRequest').find('input[name="timeEnded"]').val(data.timeEnded);
                $('#EditRequest').find('input[name="approver"]').val(data.approver);
                $('#EditRequest').find('input[name="dateApproved"]').val(data.dateApproved);
                $('#EditRequest').find('input[name="serialNumber"]').val(data.serialNumber);
                $('#EditRequest').find('input[name="controlNumber"]').val(data.controlNumber);
                $('#EditRequest').find('input[name="viewer"]').val(data.viewer);
                $('#EditRequest').find('input[name="dateView"]').val(data.dateView);
            }
        })
        // alert(data);
    });

    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/department',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=departmentsId]').append('<option value=""> Select Department</option>');
            $.each(data, function (index, value) {
                $('select[name=departmentsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/UnitType',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=unitTypeId]').append('<option value=""> Select UnitType</option>');
            $.each(data, function (index, value) {
                $('select[name=unitTypeId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/division',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=divisionsId]').append('<option value=""> Select Division</option>');
            $.each(data, function (index, value) {
                $('select[name=divisionsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/hardware',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=hardwareId]').append('<option value=""> Select Hardware Service Category</option>');
            $.each(data, function (index, value) {
                $('select[name=hardwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/Technician',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=hardwareTechnicianId]').append('<option value=""> Select Technician</option>');
            $.each(data, function (index, value) {
                $('select[name=hardwareTechnicianId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });

    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/Findings',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=findingId]').append('<option value=""> Select Result</option>');
            $.each(data, function (index, value) {
                $('select[name=findingId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //status
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/status',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=statusId]').append('<option value="0">Open </option>');
            $.each(data, function (index, value) {
                $('select[name=statusId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });

    $('#hardwareRequestList').on('click', '.viewedby', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/hardwareRequest/GetRequestbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#ViewedByModal').modal('show');
                $('#viewed').find('input[name="id"]').val(data.id);
                $('#viewed').find('input[name="isVerified"]').val(data.isVerified);
                $('#viewed').find('textarea[name="viewedRemarks"]').val(data.viewedRemarks);

                //alert(data.isApproved);
                if (data.isVerified == true)
                    $('.update-viewed').prop('disabled', false)

                else
                    $('.update-viewed').prop('disabled', true)
                //alert(id);

            }
        })
    });

    $('#ViewwdBySubmit').click(function (e) {
        e.preventDefault();

        var id = $('#viewed').find('input[name="id"]').val();
        var data = $('#viewed').serialize();

        $.ajax({
            type: 'PUT',
            url: '/api/hardwareRequest/viewer/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#ViewedByModal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success(" Successfully Approved!");
                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Fill up Remarks")
            }
        });
    });

    $('#hardwareRequestList').on('click', '.approvedby', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/hardwareRequest/GetRequestbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#ApprovedByModal').modal('show');
                $('#approve').find('input[name="id"]').val(data.id);
                $('#approve').find('input[name="approvedBy"]').val("Jose Pepito G. Bonete");
                $('#approve').find('select[name="statusId"]').val(data.statusId);
                $('#approve').find('textarea[name="approveRemarks"]').val(data.approveRemarks);
            }
        })
    });


}

function GetHardwareServices() {
    var Datatables;
    Datatables = $("#hardwareList").DataTable({
        ajax: {
            url: "/api/hard/get",
            dataSrc: "",
            headers: {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            }
        },
        ordering: false,
        autoWidth: false,
        columns: [

            {
                data: "name",
            },
            //{
            //    data: null,
            //    render: function (data) {
            //        return '<button class="btn btn-primary btn-sm request" data-id="' + data.id + '"><i class="far fa-folder"></i> Request</button>'
            //    },
            //    orderable: false,
            //},
            {
                data: null,
                render: function (data) {
                    return '<button class="btn btn-success btn-sm edit" data-id="' + data.id + '"><i class="fas fa-edit"></i> Edit</button>'
                        + '  <button class="btn btn-danger btn-sm delete" data-id="' + data.id + '"><i class="fas fa-trash"></i> Delete</button>'
                },
                orderable: false,
            }

        ]
    });

    $('#btnSubmit').click(function (e) {
        e.preventDefault();

        //find name
        var name = $('input[name=name]').val();
        // data
        var data = {
            name: name,
        };
        $.ajax({
            type: 'POST',
            url: '/api/hard/save',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $("#name").val("");
                $('#AddHardware').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Data Successfully Added!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Name Already Exist In the Database/ Invalid")
            }
        });
    });

    //Get edit
    $("#hardwareList").on('click', '.edit', function () {
        var id = $(this).attr('data-id');
        var url = '/api/hard/gethardware/' + id;
        // alert(id);
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $("#editmodal").modal('show');
                $('#edit').find('input[name="id"]').val(data.id);
                $('#edit').find('input[name="name"]').val(data.name);
            },
            //if failed
            error: function (data) {
                // console.log(data, data.id, data.name);
                toastr.error("Error")
            }
        })
    })

    //Update
    $("#updateDate").click(function (e) {
        e.preventDefault();
        var data = {
            name: $('#edit').find('input[name=name]').val(),
        };
        var id = $('#edit').find('input[name="id"]').val();
        $.ajax({
            type: 'PUT',
            url: '/api/hard/updateHardware/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#editmodal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Data Successfully Updated!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error")
            }
        });
    });

    $('#hardwareList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        var url = '/api/hard/Delete/' + id;
        $.ajax({
            // confirm before delete
            beforeSend: function (xhr) {
                // use bootbox
                bootbox.confirm({
                    message: "Are you sure you want to delete this record?",
                    buttons: {
                        // yes and no sequence

                        confirm: {
                            label: 'Yes',
                            className: 'btn-success btn-sm'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger btn-sm'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                type: 'DELETE',
                                url: url,
                                headers: {
                                    'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                                },
                                success: function (data) {
                                    $('#pleasewait').modal('show');
                                    //show toastr after 3
                                    setTimeout(function () {
                                        toastr.success("File Successfully Deleted!");
                                        // hide please wait modal
                                    }, 2000);
                                    setTimeout(function () {
                                        window.location.reload();
                                    }, 3000);

                                },
                                //if failed
                                error: function (data) {
                                    toastr.error("Error")
                                }
                            });
                        }
                    }
                });

            },
        });
    });

    //Get id hardware Request
    $('#hardwareList').on('click', '.request', function () {
        var data = $(this).attr('data-id');
        $('#hardwareeRequestModal').modal('show');
        $('#hardwareeRequestModal').find('input[name=hardwareId]').val(data);
        $('#hardwareeRequestModal').find('select[name=unitTypeId]').val("-1");
        $('#hardwareeRequestModal').find('input[name=brandName]').val("");
        $('#hardwareeRequestModal').find('input[name=modelName]').val("");

        // alert(data);
    });

    $('#btnRequest').click(function (e) {
        e.preventDefault();
        var id = $('input[name=hardwareId]').val();
        var valdata = $('#SaveRequest').serialize();
        $.ajax({
            type: 'POST',
            url: '/api/hardwareRequest/SaveRequest',
            data: valdata,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $("#hardwareeRequestModal").modal('hide');
                $('#description').val(" ");
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Data Successfully Added!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                //   alert(id);
                toastr.error("Fill up alll forms / Invalid")
            }
        });
    });


    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/unitType',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=unitTypeId]').append('<option value="-1"> Select UnitType</option>');
            $.each(data, function (index, value) {
                $('select[name=unitTypeId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
}

function UserHardwareServices() {

    var Datatables;
    Datatables = $("#hardwareList").DataTable({
        ajax: {
            url: "/api/hard/get",
            dataSrc: "",
            headers: {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            }
        },
        lengthMenu: [50, 100],
        ordering: false,
        autoWidth: false,
        columns: [

            {
                data: "name",
            },

            {
                data: null,
                render: function (data) {
                    return '<button class="btn btn-primary btn-sm request" data-id="' + data.id + '"><i class="far fa-folder"></i> Request</button>'
                },
                orderable: false,
            }

        ]
    });


    //Get id Software Request
    $('#hardwareList').on('click', '.request', function () {
        var data = $(this).attr('data-id');
        $('#hardwareeRequestModal').modal('show');
        $('#hardwareeRequestModal').find('input[name=hardwareId]').val(data);
        $('#hardwareeRequestModal').find('select[name=hardwareId]').val(data);
        $('#hardwareeRequestModal').find('select[name=unitTypeId]').val("-1");
        $('#hardwareeRequestModal').find('input[name=brandName]').val("");
        $('#hardwareeRequestModal').find('input[name=modelName]').val("");
        $('#hardwareeRequestModal').find('textarea[name=description]').val("");
        $('#hardwareeRequestModal').find('input[name=FileName]').val("");

        // alert(data);
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/hardware',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=hardwareId]').append('<option value=""> Select Hardware Service Category</option>');
            $.each(data, function (index, value) {
                $('select[name=hardwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/unitType',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=unitTypeId]').append('<option value="-1"> Select UnitType</option>');
            $.each(data, function (index, value) {
                $('select[name=unitTypeId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
}

function GetTechnician() {
    var Datatables;
    Datatables = $("#hardwareList").DataTable({
        ajax: {
            url: "/api/htech/GetTech",
            dataSrc: "",
            headers: {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            }
        },
        autoWidth: false,
        columns: [

            {
                data: "dateAdded",
            },
            {
                data: "name",
            },
            {
                data: "email"
            },
            {
                data: null,
                render: function (data) {
                    return '<button class="btn btn-success btn-sm edit" data-id="' + data.id + '"><i class="fas fa-edit"></i> Edit</button>'
                        + '  <button class="btn btn-danger btn-sm delete" data-id="' + data.id + '"><i class="fas fa-trash"></i> Delete</button>'
                },
                "orderable": false,
            }

        ]
    });

    $('#btnSubmit').click(function (e) {
        e.preventDefault();

        //find name
        var name = $('input[name=name]').val();
        var email = $('input[name=email]').val();
        var phoneNumber = $('input[name=phoneNumber]').val();
        // data
        var data = {
            name: name,
            email: email,
            phoneNumber: phoneNumber
        };
        $.ajax({
            type: 'POST',
            url: '/api/htech/save',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $("#hardwareTechModal").modal('hide');
                $('#editmodal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Data Successfully Added!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Name Already Exist In the Database/ Invalid")
            }
        });
    });

    //Get edit
    $("#hardwareList").on('click', '.edit', function () {
        var id = $(this).attr('data-id');
        var url = '/api/htech/getTechbyId/' + id;
        //alert(id);
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $("#editmodal").modal('show');
                $('#edit').find('input[name="id"]').val(data.id);
                $('#edit').find('input[name="name"]').val(data.name);
                $('#edit').find('input[name="email"]').val(data.email);
                $('#edit').find('input[name="phoneNumber"]').val(data.phoneNumber);
            },
            //if failed
            error: function (data) {
                // console.log(data, data.id, data.name);
                toastr.error("Error")
            }
        })
    })


    $("#Updatetech").click(function (e) {
        e.preventDefault();
        var data = {
            name: $('#edit').find('input[name=name]').val(),
            email: $('#edit').find('input[name=email]').val(), 
            phoneNumber: $('#edit').find('input[name=phoneNumber]').val(),
        };
        var id = $('#edit').find('input[name="id"]').val();
        $.ajax({
            type: 'PUT',
            url: '/api/htech/updateHardwareTech/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#editmodal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Data Successfully Updated!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error")
            }
        });
    });

    $('#hardwareList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        var url = '/api/htech/Delete/' + id;
        $.ajax({
            // confirm before delete
            beforeSend: function (xhr) {
                // use bootbox
                bootbox.confirm({
                    message: "Are you sure you want to delete this record?",
                    buttons: {
                        // yes and no sequence

                        confirm: {
                            label: 'Yes',
                            className: 'btn-success btn-sm'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger btn-sm'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                type: 'DELETE',
                                url: url,
                                headers: {
                                    'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                                },
                                success: function (data) {
                                    //show please wait modal
                                    $('#pleasewait').modal('show');
                                    //show toastr after 3
                                    setTimeout(function () {
                                        toastr.success("Data Successfully Deleted!");
                                        // hide please wait modal
                                    }, 2000);
                                    setTimeout(function () {
                                        window.location.reload();
                                    }, 3000);
                                },
                                //if failed
                                error: function (data) {
                                    toastr.error("Error")
                                }
                            });
                        }
                    }
                });

            },
        });
    });
}

function GetSoftwareTechnician() {
    var Datatables;
    Datatables = $("#softwaretechList").DataTable({
        ajax: {
            url: "/api/stech/Gettech",
            dataSrc: "",
            headers: {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            }
        },
        autoWidth: false,
        columns: [

            {
                data: "dateAdded",
            },
            {
                data: "name",
            },
            {
                data: "techEmail"
            }
        ]
    });

    $('#btnSubmit').click(function (e) {
        e.preventDefault();

        //find name
        var name = $('input[name=name]').val();
        // data
        var data = {
            name: name,
        };
        $.ajax({
            type: 'POST',
            url: '/api/stech/save',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $("#name").val("");
                $('#Stechnicianmodal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Data Successfully Added!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Name Already Exist In the Database/ Invalid")
            }
        });
    });

    //Get edit
    $("#softwaretechList").on('click', '.edit', function () {
        var id = $(this).attr('data-id');
        var url = '/api/stech/getTechbyId/' + id;
        // alert(id);
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $("#editmodal").modal('show');
                $('#edit').find('input[name="id"]').val(data.id);
                $('#edit').find('input[name="name"]').val(data.name);
            },
            //if failed
            error: function (data) {
                // console.log(data, data.id, data.name);
                toastr.error("Error")
            }
        })
    })

    $("#Updatetech").click(function (e) {
        e.preventDefault();
        var data = {
            name: $('#edit').find('input[name=name]').val(),
        };
        var id = $('#edit').find('input[name="id"]').val();
        $.ajax({
            type: 'PUT',
            url: '/api/stech/updateSoftwareTech/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                $('#editmodal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Data Successfully Updated!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error")
            }
        });
    });

    $('#softwaretechList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        var url = '/api/stech/Delete/' + id;
        $.ajax({
            // confirm before delete
            beforeSend: function (xhr) {
                // use bootbox
                bootbox.confirm({
                    message: "Are you sure you want to delete this record?",
                    buttons: {
                        // yes and no sequence

                        confirm: {
                            label: 'Yes',
                            className: 'btn-success btn-sm'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger btn-sm'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                type: 'DELETE',
                                url: url,
                                headers: {
                                    'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                                },
                                success: function (data) {
                                    //show please wait modal
                                    $('#pleasewait').modal('show');
                                    //show toastr after 3
                                    setTimeout(function () {
                                        toastr.success("Data Successfully Deleted!");
                                        // hide please wait modal
                                    }, 2000);
                                    setTimeout(function () {
                                        window.location.reload();
                                    }, 3000);
                                },
                                //if failed
                                error: function (data) {
                                    toastr.error("Error")
                                }
                            });
                        }
                    }
                });

            },
        });
    });
}

function SoftwareServices() {
    var Datatables;
    Datatables = $("#softwareList").DataTable({
        ajax: {
            url: "/api/soft/get",
            dataSrc: "",
            headers: {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            }
        },
        ordering: false,
        autoWidth: false,
        columns: [

            {
                data: "name",
            },

            {
                data: null,
                render: function (data) {
                    return '<button class="btn btn-primary btn-sm request" data-id="' + data.id + '"><i class="far fa-folder"></i> Request</button>'
                },
                orderable: false,
            },
            {
                data: null,
                render: function (data) {
                    return '<button class="btn btn-success btn-sm edit" data-id="' + data.id + '"><i class="fas fa-edit"></i> Edit</button>'
                        + '  <button class="btn btn-danger btn-sm delete" data-id="' + data.id + '"><i class="fas fa-trash"></i> Delete</button>'
                },
                orderable: false,
            }

        ]
    });

    $('#btnSubmit').click(function (e) {
        e.preventDefault();

        //find name
        var name = $('input[name=name]').val();
        // data
        var data = {
            name: name,
        };
        $.ajax({
            type: 'POST',
            url: '/api/soft/save',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                $("#AddSoftware").modal('hide');
                $("#name").val("");
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Data Successfully Added!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Name Already Exist In the Database/ Invalid")
            }
        });
    });

    //Get edit
    $("#softwareList").on('click', '.edit', function () {
        var id = $(this).attr('data-id');
        var url = '/api/soft/getsoftware/' + id;
        // alert(id);
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $("#editmodal").modal('show');
                $('#edit').find('input[name="id"]').val(data.id);
                $('#edit').find('input[name="name"]').val(data.name);
            },
            //if failed
            error: function (data) {
                // console.log(data, data.id, data.name);
                toastr.error("Error")
            }
        })
    })

    //Update
    $("#updateDate").click(function (e) {
        e.preventDefault();
        var data = {
            name: $('#edit').find('input[name=name]').val(),
        };
        var id = $('#edit').find('input[name="id"]').val();
        $.ajax({
            type: 'PUT',
            url: '/api/soft/updateSoftware/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#editmodal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Data Successfully Updated!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error")
            }
        });
    });

    $('#softwareList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        var url = '/api/soft/Delete/' + id;
        $.ajax({
            // confirm before delete
            beforeSend: function (xhr) {
                // use bootbox
                bootbox.confirm({
                    message: "Are you sure you want to delete this record?",
                    buttons: {
                        // yes and no sequence

                        confirm: {
                            label: 'Yes',
                            className: 'btn-success btn-sm'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger btn-sm'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                type: 'DELETE',
                                url: url,
                                headers: {
                                    'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                                },
                                success: function (data) {
                                    //show please wait modal
                                    $('#pleasewait').modal('show');
                                    //show toastr after 3
                                    setTimeout(function () {
                                        toastr.success("Data Successfully Deleted!");
                                        // hide please wait modal
                                    }, 2000);
                                    setTimeout(function () {
                                        window.location.reload();
                                    }, 3000);
                                },
                                //if failed
                                error: function (data) {
                                    toastr.error("Error")
                                }
                            });
                        }
                    }
                });

            },
        });
    });

    //Get id Software Request
    $('#softwareList').on('click', '.request', function () {
        var data = $(this).attr('data-id');
        $('#softwarerequest').modal('show');
        $('#softwarerequest').find('input[name=softwareId]').val(data);
        $('#softwarerequest').find('select[name=informationSystemId]').val("");
        $('#softwarerequest').find('input[name=requestFor]').val("");
        $('#softwarerequest').find('textarea[name=description]').val("");
        //alert(data);
    })

    //get Information Dropdown
    $.ajax({
        type: 'GET',
        url: '/api/info/System',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name = informationSystemId]').append('<option value=""> Select System</option>');
            $.each(data, function (index, value) {
                $('select[name=informationSystemId]').append('<option value="' + value.id + '">' + value.name + '</option>');

            })
        }
    });


    //save
    $('#btnRequest').click(function (e) {
        e.preventDefault();
        var id = $('input[name=softwareId]').val();
        var valdata = $('#SaveRequest').serialize();
        $.ajax({
            type: 'POST',
            url: '/api/softwareRequest/saveRequest',
            data: valdata,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                toastr.success("Directory Successfully Added!");
                //Datatables.ajax.reload();
                $("#softwarerequest").modal('hide');
                $('#description').val(" ");
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Data Successfully Updated!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                // alert(id);
                toastr.error("Fill up alll forms / Invalid")
            }
        });
    });
}

function UserSoftwareRequestCategory() {
    var Datatables;
    Datatables = $("#softwareList").DataTable({
        ajax: {
            url: "/api/soft/get",
            dataSrc: "",
            headers: {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            }
        },
        lengthMenu: [50, 100],
        ordering: false,
        autoWidth: false,
        columns: [

            {
                data: "name",
            },
            {
                data: null,
                render: function (data) {
                    return '<button class="btn btn-primary btn-sm request" data-id="' + data.id + '"><i class="far fa-folder"></i> Request</button>'
                },
                orderable: false,
            },

        ]
    });

    
    $('#softwareList').on('click', '.request', function () {
        var data = $(this).attr('data-id');
        $('#softwarerequest').modal('show');
        $('#softwarerequest').find('input[name=softwareId]').val(data);
        $('#softwarerequest').find('select[name=softwareId]').val(data);
        $('#softwarerequest').find('select[name=informationSystemId]').val("");
        $('#softwarerequest').find('input[name=requestFor]').val("");
        $('#softwarerequest').find('textarea[name=description]').val("");
        $('#softwarerequest').find('input[name=documentLabel]').val("");
        // alert(data);
    })

    //get Information Dropdown
    $.ajax({
        type: 'GET',
        url: '/api/info/System',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name = informationSystemId]').append('<option value=""> Select System</option>');
            $.each(data, function (index, value) {
                $('select[name=informationSystemId]').append('<option value="' + value.id + '">' + value.name + '</option>');

            })
        }
    });

    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/software',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=softwareId]').append('<option value=""> Select Software</option>');
            $.each(data, function (index, value) {
                $('select[name=softwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
}

function SoftwareAdmin2() {
    var tables;
    tables = $('#softwareRequestList').DataTable({
        ajax: {
            url: "/api/softwareRequest/requestTech",
            dataSrc: "",
            headers: {
                "Authorization": "Bearer" + localStorage.getItem('access_token')
            }
        },
        autoWidth: false,
        ordering: false,
        columns: [
            {
                data: "ticket",
                render: function (data, type, row) {
                    if (data == null) {
                        return '<span class="badge bg-danger">No Ticket</span>';
                    }
                    return `<span class="badge bg-info">${(data)}</span>`
                }

            },
            { data: "dateAdded" },
            { data: "fullName" },
            {
                data: "softwareId",
                render: function (data, type, row) {
                    return row.software.name;
                }
            },
            {
                data: "statusId", render: function (data, type, row) {
                    if (data == 1) {
                        return '<span class="badge  bg-secondary">Open</span>'
                    }
                    else if (data == 2) {
                        return '<span class="badge  bg-success">Resolved</span>'
                    }
                    else if (data == 3) {
                        return '<span class="badge bg-warning">On hold</span>'
                    }
                    else if (data == 4) {
                        return '<span class="badge bg-info">In Progress</span>'
                    }
                    else if (data == 5) {
                        return '<span class="badge  bg-danger">Cancel Request</span>'
                    }
                    else
                        return '<span class="badge bg-secondary">Open</span>'
                }
            },
            {
                data: "dateApproved", render: function (data, type, row) {
                    if (data == null) {
                        return '<span class="badge  bg-primary">waiting to verified</span>'
                    }
                    else
                        return `<span>${moment(data).format("D/M/Y LT")}</span>`;
                }
            },
            {
                data: "dateView", render: function (data, type, row) {
                    if (data == null) {
                        return '<span class="badge  bg-primary">waiting to verified</span>'
                    }
                    else
                        return `<span>${moment(data).format("D/M/Y LT")}</span>`;
                }
            },
            {
                data: null,
                render: function (data) {
                    return '<button class="btn btn-info text-light btn-sm view ms-1 mb-1" data-id="' + data.id + '"><i class="fas fa-eye"></i> View Details </button>'
                        + '<button class="btn btn-success btn-sm approvedby ms-1 mb-1 " data-id="' + data.id + '"><i class="fas fa-user-edit"></i> Verified </button>'
                },
                orderable: false,
                width: "250px",
            },
        ]
    });


    //get Details
    $('#softwareRequestList').on('click', '.view', function () {
        var id = $(this).attr('data-id');
        //alert(id);
        var url = '/api/softwareRequest/GetbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#softwareDetailsModal').modal('show');

                $('#viewRequest').find('input[name="id"]').val(data.id);
                $('#viewRequest').find('input[name="fullName"]').val(data.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#viewRequest').find('input[name="modelName"]').val(data.modelName);
                $('#viewRequest').find('select[name="departmentsId"]').val(data.departmentsId);
                $('#viewRequest').find('select[name="divisionsId"]').val(data.divisionsId);
                $('#viewRequest').find('select[name="softwareId"]').val(data.softwareId);
                $('#viewRequest').find('select[name="informationSystemId"]').val(data.informationSystemId);
                $('#viewRequest').find('input[name="requestFor"]').val(data.requestFor);
                $('#viewRequest').find('textarea[name="description"]').val(data.description);
                $('#viewRequest').find('select[name="statusId"]').val(data.statusId);
                $('#viewRequest').find('select[name="softwareTechnicianId"]').val(data.softwareTechnicianId);
                $('#viewRequest').find('textarea[name="remarks"]').val(data.remarks);
                $('#viewRequest').find('input[name="dateStarted"]').val(data.dateStarted);
                $('#viewRequest').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#viewRequest').find('input[name="timeStarted"]').val(data.timeStarted);
                $('#viewRequest').find('input[name="timeEnded"]').val(data.timeEnded);
                $('#viewRequest').find('input[name="approver"]').val(data.approver);
                $('#viewRequest').find('input[name="dateApproved"]').val(data.dateApproved);
                $('#viewRequest').find('textarea[name="approverRemarks"]').val(data.approverRemarks);
                $('#viewRequest').find('input[name="viewer"]').val(data.viewer);
                $('#viewRequest').find('input[name="dateView"]').val(data.dateView);
                $('#viewRequest').find('textarea[name="viewedRemarks"]').val(data.viewedRemarks);
            }
        })
        // alert(data);
    });


    //Department
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/department',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=departmentsId]').append('<option value=""> Select Department</option>');
            $.each(data, function (index, value) {
                $('select[name=departmentsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });

    //Division
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/division',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=divisionsId]').append('<option value=""> Select Division</option>');
            $.each(data, function (index, value) {
                $('select[name=divisionsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });


    //Software
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/software',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=softwareId]').append('<option value=""> Select Software</option>');
            $.each(data, function (index, value) {
                $('select[name=softwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });


    //Software
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/infoSystem',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=informationSystemId]').append('<option value=""> Select System</option>');
            $.each(data, function (index, value) {
                $('select[name=informationSystemId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    //Status
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/status',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=statusId]').append('<option value=""> Select Status</option>');
            $.each(data, function (index, value) {
                $('select[name=statusId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //Technician
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/Technician',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=softwareTechnicianId]').append('<option value=""> Select Technician</option>');
            $.each(data, function (index, value) {
                $('select[name=softwareTechnicianId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });



    //get id assign
    $('#softwareRequestList').on('click', '.assign', function () {
        var id = $(this).attr('data-id');
        var url = '/api/softwareRequest/GetbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#StatusModal').modal('show');
                $('#assign').find('input[name="id"]').val(data.id);
                $('#assign').find('select[name="statusId"]').val("");
            }
        })
        // alert(data);
    });


    //submit assign
    $('#updateStatus').click(function (e) {
        e.preventDefault();

        var id = $('input[name=id]').val();
        var data = $('#assign').serialize();
        $.ajax({
            type: 'PUT',
            url: '/api/softwareRequest/updateStatus/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                $('#editmodal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Successfully Updat Status!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                // alert(id);
                toastr.error("Please update Status!")
            }
        });
    });



    $('#softwareRequestList').on('click', '.technician', function () {
        var id = $(this).attr('data-id');
        var url = '/api/softwareRequest/GetbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#TechnicianModal').modal('show');
                $('#assignTech').find('input[name="id"]').val(data.id);
                $('#assignTech').find('select[name="softwareTechnicianId"]').val("")
            }
        })
    });

    $('#updateTechnician').click(function (e) {
        var id = $('input[name=id]').val();

        //var data = $('#assignTech').serialize();
        var softwareTechnicianId = $('#assignTech').find('select[name="softwareTechnicianId"]').val();
        var softwareRequestId = $('#assignTech').find('input[name=id]').val();
        var data = {
            "id": softwareRequestId,
            "softwareTechnicianId": softwareTechnicianId
        };
        $.ajax({
            type: 'PUT',
            url: '/api/softwareRequest/UpdateTechnician/' + softwareRequestId,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Successfully Assign Technician!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                //alert(id);
                toastr.error("Please Assign Technician")
            }
        });
    });


    $('#softwareRequestList').on('click', '.approvedby', function () {
        var id = $(this).attr('data-id');
        var url = '/api/softwareRequest/GetbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#ApprovedByModal').modal('show');
                $('#approve').find('input[name="id"]').val(data.id);
                $('#approve').find('select[name="statusId"]').val(data.statusId);
                $('#approve').find('textarea[name="approverRemarks"]').val(data.approverRemarks);

                if (data.statusId == 2)
                    $('.update-verified').prop('disabled', false)
                else
                    $('.update-verified').prop('disabled', true)
            }
        })
    });

    //AdminSaveRemarks
    $('#Approved').click(function (e) {
        e.preventDefault();
        var id = $('#approve').find('input[name="id"]').val();
        var data = $('#approve').serialize();
        $.ajax({
            type: 'PUT',
            url: '/api/softwareRequest/verify/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                $("#ApprovedByModal").modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Successfully Approved!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Fill up Remarks")
            }
        });
    });
}


function SoftwareAdmin() {
    var tables;
    $("#softwareRequestList").DataTable({
        "ajax": {
            "url": "/api/all/softReq",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "fnInitComplete": function (oSettings, json) {
            // search after pressing enter
            $('#softwareRequestList_filter input').unbind();
            $('#softwareRequestList_filter input').bind('keyup', function (e) {
                if (e.keyCode == 13) {
                    // trigger search 
                    $('#pleasewait').modal('show');
                    setTimeout(function () {
                        $('#pleasewait').modal('hide');
                    }, 2500);
                    $('#softwareRequestList').DataTable().search(this.value).draw();
                }
                // if search is empty, reset the filter
                if (this.value == "") {
                    $('#softwareRequestList').DataTable().search("").draw();
                }
            }
            );
        },
        // "searching" : " true",
        // "searchDelay" : 1000,
        // order by desc dateuploaded
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [
            {
                data: "ticket",
                render: function (data, type, row) {
                    if (data == null) {
                        return '<span class="badge bg-danger">No Ticket</span>';
                    }
                    return `<span class="badge bg-info">${(data)}</span>`
                }
            },
            { data: "dateAdded" },
            { data: "fullName" },
            {
                data: "softwareId",
                render: function (data, type, row) {
                    return row.software.name;
                }
            },

            {
                data: "softwareTechnician.name",
                render: function (data, type, row) {
                    if (data == null) {
                        return '<span class="badge bg-success">Not Assigned</span>'
                    }
                    else
                        return row.softwareTechnician.name;
                }
            },
            {
                data: "statusId", render: function (data, type, row) {
                    if (data == 1) {
                        return '<span class="badge  bg-secondary">Open</span>'
                    }
                    else if (data == 2) {
                        return '<span class="badge  bg-success">Resolved</span>'
                    }
                    else if (data == 3) {
                        return '<span class="badge bg-warning">On hold</span>'
                    }
                    else if (data == 4) {
                        return '<span class="badge bg-info">In Progress</span>'
                    }
                    else if (data == 5) {
                        return '<span class="badge  bg-danger">Cancel Request</span>'
                    }
                    else
                        return '<span class="badge bg-secondary">Open</span>'
                }
            },
            {
                data: "isViewed", render: function (data, type, row) {
                    if (data == true) {
                        return '<i class="fas fa-check-circle fa-2x ms-4" style="color:green;"></i>'
                    }
                    else
                        return ''
                }
            },
            {
                data: null,
                render: function (data) {
                    return '<button class="btn btn-info text-light btn-sm view ms-1 mb-1 " data-id="' + data.id + '"><i class="fas fa-eye"></i> View  </button>'
                        + '<button class="btn btn-success text-light btn-sm attach ms-1 mb-1" data-id="' + data.id + '"><i class="fas fa-paperclip"></i> Attachments </button>'
                        + '<button class=" btn btn-primary btn-sm technician ms-1 mb-1 btn-Admin " data-id="' + data.id + '"><i class="fas fa-users-cog"></i> Technician</button>'
                        + '<button class="btn btn-secondary btn-sm approvedby text-center ms-1 mb-1 btn-verified  " data-id="' + data.id + '"><i class="fas fa-user-edit ms-2 me-1"></i> Verified </button>'
                },
                orderable: false,
                width: "440px",
            },

        ],
    });
    var urls = [];

    $('#softwareRequestList').on('click', '.attach', function () {
        var id = $(this).attr('data-id');
        // alert(id);
        var url = '/api/softwareRequest/GetbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#softwareDisplay').modal('show');
                $('#softwareDisplay').find('.modal-title').text('File Attachment');
                var refId = $('#softwareRequestId').val(data.id);
                //alert(data.id);
                //alert(data.statusId);
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,

                    ajax: {
                        url: "/api/v1/uploads/" + id,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },

                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();
                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return '';
                                }
                            },
                            className: "text-center"
                        },

                    ]
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#UploadList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        bootbox.confirm({
            message: "Are you sure you want to delete this record?",
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success btn-sm'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger btn-sm'
                }
            },
            callback: function (result) {
                if (result) {
                    $.ajax({
                        type: 'DELETE',
                        url: '/api/v1/deteleImage/' + id,
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        },
                        success: function (data) {
                            toastr.success("Data Successfully Deleted!");
                            window.location.reload();
                        }
                    });
                }
            }
        });
    });

    $('#softwareRequestList').on('click', '.view', function () {
        var id = $(this).attr('data-id');
        $("#generateReportBtn").attr('data-id', id);

        //alert(id);
        var url = '/api/softwareRequest/GetbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#softwareDetailsModal').modal('show');

                $('#viewRequest').find('input[name="id"]').val(data.id);
                $('#viewRequest').find('input[name="fullName"]').val(data.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#viewRequest').find('input[name="modelName"]').val(data.modelName);
                $('#viewRequest').find('input[name="FileName"]').val(data.documentLabel);

                $('#viewRequest').find('select[name="departmentsId"]').val(data.departmentsId);
                $('#viewRequest').find('select[name="divisionsId"]').val(data.divisionsId);
                $('#viewRequest').find('select[name="softwareId"]').val(data.softwareId);
                $('#viewRequest').find('select[name="informationSystemId"]').val(data.informationSystemId);
                $('#viewRequest').find('input[name="requestFor"]').val(data.requestFor);
                $('#viewRequest').find('textarea[name="description"]').val(data.description);
                $('#viewRequest').find('select[name="statusId"]').val(data.statusId);
                $('#viewRequest').find('select[name="softwareTechnicianId"]').val(data.softwareTechnicianId);
                $('#viewRequest').find('textarea[name="remarks"]').val(data.remarks);
                $('#viewRequest').find('input[name="dateStarted"]').val(data.dateStarted);
                $('#viewRequest').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#viewRequest').find('input[name="timeStarted"]').val(data.timeStarted);
                $('#viewRequest').find('input[name="timeEnded"]').val(data.timeEnded);
                $('#viewRequest').find('input[name="approver"]').val(data.approver);
                $('#viewRequest').find('input[name="dateApproved"]').val(data.dateApproved);
                $('#viewRequest').find('input[name="viewer"]').val(data.viewer);
                $('#viewRequest').find('input[name="dateView"]').val(data.dateView);
            }
        })
        // alert(data);
    });


    //Department
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/department',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=departmentsId]').append('<option value=""> Select Department</option>');
            $.each(data, function (index, value) {
                $('select[name=departmentsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });

    //Division
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/division',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=divisionsId]').append('<option value=""> Select Division</option>');
            $.each(data, function (index, value) {
                $('select[name=divisionsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });

    //Software
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/software',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=softwareId]').append('<option value=""> Select Software</option>');
            $.each(data, function (index, value) {
                $('select[name=softwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });


    //Software
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/infoSystem',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=informationSystemId]').append('<option value=""> Select System</option>');
            $.each(data, function (index, value) {
                $('select[name=informationSystemId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    //Status
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/status',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=statusId]').append('<option value=""> Select Status</option>');
            $.each(data, function (index, value) {
                $('select[name=statusId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //Technician
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/Technician',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=softwareTechnicianId]').append('<option value=""> Select Technician</option>');
            $.each(data, function (index, value) {
                $('select[name=softwareTechnicianId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });

    $('#softwareRequestList').on('click', '.technician', function () {
        var id = $(this).attr('data-id');
        var url = '/api/softwareRequest/GetbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#TechnicianModal').modal('show');
                $('#assignTech').find('input[name="id"]').val(data.id);
                $('#assignTech').find('input[name="statusId"]').val(data.statusId);
                //alert(data.statusId);

                //if (data.statusId == 2)
                //    $('.assigned-tech').prop('disabled', true)
                //else if (data.statusId == 5)
                //    $('.assigned-tech').prop('disabled', true)
                //else if (data.statusId == 3)
                //    $('.assigned-tech').prop('disabled', true)
                //else if (data.statusId == 4)
                //    $('.assigned-tech').prop('disabled', true)
                //else if (data.statusId == 1)
                //    $('.assigned-tech').prop('disabled', false)
                //else
                //    $('.assigned-tech').prop('disabled', false)

            }
        })
    });

    $('#updateTechnician').click(function (e) {
        var id = $('input[name=id]').val();
        //var data = $('#assignTech').serialize();
        var softwareTechnicianId = $('#assignTech').find('select[name="softwareTechnicianId"]').val();
        var softwareRequestId = $('#assignTech').find('input[name=id]').val();
        var data = {
            "id": softwareRequestId,
            "softwareTechnicianId": softwareTechnicianId
        };
        $.ajax({
            type: 'PUT',
            url: '/api/softwareRequest/UpdateTechnician/' + softwareRequestId,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#TechnicianModal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success(" Successfully Assign Technician!");
                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },

            //if failed
            error: function (data) {
                //alert(id);
                toastr.error("Please Assign Technician")
            }
        });
    });


    $('#softwareRequestList').on('click', '.approvedby', function () {
        var id = $(this).attr('data-id');
        var url = '/api/softwareRequest/GetbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#ApprovedByModal').modal('show');
                $('#approve').find('input[name="id"]').val(data.id);
                $('#approve').find('select[name="statusId"]').val(data.statusId);
                $('#approve').find('input[name="isReported"]').val(data.isReported);
                // alert(data.isReported);


                if (data.isReported == true)
                    $('.update-verified').prop('disabled', false)
                else
                    $('.update-verified').prop('disabled', true)
            }
        })
    });

    //AdminSaveRemarks
    $('#Approved').click(function (e) {
        e.preventDefault();
        var id = $('#approve').find('input[name="id"]').val();
        var data = $('#approve').serialize();
        $.ajax({
            type: 'PUT',
            url: '/api/softwareRequest/verify/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#ApprovedByModal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success(" Successfully Approved!");
                    // hide please wait modal

                }, 1000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Fill up Remarks")
            }
        });
    });
}
function SoftwareTechForm() {

    $("#softwareRequestList").DataTable({
        "ajax": {
            "url": "/api/sr/assigned",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "fnInitComplete": function (oSettings, json) {
            // search after pressing enter
            $('#softwareRequestList_filter input').unbind();
            $('#softwareRequestList_filter input').bind('keyup', function (e) {
                if (e.keyCode == 13) {
                    // trigger search 
                    $('#pleasewait').modal('show');
                    setTimeout(function () {
                        $('#pleasewait').modal('hide');
                    }, 2500);
                    $('#softwareRequestList').DataTable().search(this.value).draw();
                }
                // if search is empty, reset the filter
                if (this.value == "") {
                    $('#softwareRequestList').DataTable().search("").draw();
                }
            }
            );
        },
        // "searching" : " true",
        // "searchDelay" : 1000,
        // order by desc dateuploaded
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                "data": "ticket",
                render: function (data, type, row) {
                    if (data == null) {
                        return '<span class="badge bg-danger">No Ticket</span>';
                    }
                    return `<span class="badge bg-info">${(data)}</span>`
                }

            },
            { "data": "dateAdded" },
            { "data": "fullName" },
            {
                "data": "softwareId",
                "render": function (data, type, row) {
                    return row.software.name;
                }
            },

            {
                "data": "statusId", render: function (data, type, row) {
                    if (data == 1) {
                        return '<span class="badge  bg-secondary">Open</span>'
                    }
                    else if (data == 2) {
                        return '<span class="badge bg-success">Resolved</span>'
                    }
                    else if (data == 3) {
                        return '<span class="badge  bg-warning">On hold</span>'
                    }
                    else if (data == 4) {
                        return '<span class="badge  bg-info">In Progress</span>'
                    }
                    else if (data == 5) {
                        return '<span class="badge  bg-danger">Cancel Request</span>'
                    }
                    else
                        return '<span class="badge  bg-secondary">Open</span>'

                }
            },
            {
                data: "isReported", render: function (data, type, row) {
                    if (data == true) {
                        return '<i class="fas fa-check-circle fa-2x ms-4" style="color:green;"></i>'

                    }
                    else
                        return ''
                }
            },
            {
                data: "isViewed", render: function (data, type, row) {
                    if (data == true) {
                        return '<i class="fas fa-check-circle fa-2x ms-4" style="color:green;"></i>'

                    }
                    else
                        return ''
                }
            },
            {
                data: "isApproved", render: function (data, type, row) {
                    if (data == true) {
                        return '<i class="fas fa-check-circle fa-2x ms-4" style="color:green;"></i>'

                    }
                    else
                        return ''
                }
            },


            {
                data: null,
                render: function (data) {
                    return '<button class="btn btn-info text-light btn-sm view ms-1 mb-1 btn-view" data-id="' + data.id + '"><i class="fas fa-eye"></i> View </button>'
                        + '<button class="btn btn-success text-light btn-sm attach ms-1 mb-1" data-id="' + data.id + '"><i class="fas fa-paperclip"></i> Attachments </button>'
                        + '<button class=" btn btn-primary btn-sm assign ms-1 mb-1 btn-status" data-id="' + data.id + '"><i class="fas fa-edit"></i> Status</button>'
                        + '<button class="btn btn-secondary btn-sm report ms-1 mb-1" data-id="' + data.id + '" > <i class="fas fa-user-cog"></i> Report</button>'

                },
                orderable: false,
                width: "370px",
            },

        ],
    });
    var urls = [];
    $('#softwareRequestList').on('click', '.attach', function () {
        var id = $(this).attr('data-id');
        // alert(id);
        var url = '/api/softwareRequest/GetbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#softwareDisplay').modal('show');
                $('#softwareDisplay').find('.modal-title').text('File Attachment');
                var refId = $('#softwareRequestId').val(data.id);
                //alert(data.id);
                //alert(data.statusId);
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,

                    ajax: {
                        url: "/api/v1/uploads/" + id,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },

                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();
                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return '';
                                }
                            },
                            className: "text-center"
                        },

                    ]
                });

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#UploadList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        bootbox.confirm({
            message: "Are you sure you want to delete this record?",
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success btn-sm'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger btn-sm'
                }
            },
            callback: function (result) {
                if (result) {
                    $.ajax({
                        type: 'DELETE',
                        url: '/api/v1/deteleImage/' + id,
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        },
                        success: function (data) {
                            toastr.success("Data Successfully Updated!");
                            window.location.reload();
                        }
                    });
                }
            }
        });
    });

    //get Details
    $('#softwareRequestList').on('click', '.view', function () {
        var id = $(this).attr('data-id');
        //alert(id);
        $("#generateReportBtn").attr('data-id', id);

        var url = '/api/softwareRequest/GetbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#viewmodal').modal('show');

                $('#viewRequest').find('input[name="id"]').val(data.id);
                $('#viewRequest').find('input[name="fullName"]').val(data.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#viewRequest').find('input[name="modelName"]').val(data.modelName);
                $('#viewRequest').find('select[name="departmentsId"]').val(data.departmentsId);
                $('#viewRequest').find('select[name="divisionsId"]').val(data.divisionsId);
                $('#viewRequest').find('select[name="softwareId"]').val(data.softwareId);
                $('#viewRequest').find('select[name="informationSystemId"]').val(data.informationSystemId);
                $('#viewRequest').find('input[name="requestFor"]').val(data.requestFor);
                $('#viewRequest').find('input[name="FileName"]').val(data.documentLabel);

                $('#viewRequest').find('textarea[name="description"]').val(data.description);
                $('#viewRequest').find('select[name="statusId"]').val(data.statusId);
                $('#viewRequest').find('select[name="softwareTechnicianId"]').val(data.softwareTechnicianId);
                $('#viewRequest').find('textarea[name="remarks"]').val(data.remarks);
                $('#viewRequest').find('input[name="dateStarted"]').val(data.dateStarted);
                $('#viewRequest').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#viewRequest').find('input[name="timeStarted"]').val(data.timeStarted);
                $('#viewRequest').find('input[name="timeEnded"]').val(data.timeEnded);
                $('#viewRequest').find('input[name="approver"]').val(data.approver);
                $('#viewRequest').find('input[name="dateApproved"]').val(data.dateApproved);
                $('#viewRequest').find('input[name="viewer"]').val(data.viewer);
                $('#viewRequest').find('input[name="dateView"]').val(data.dateView);
            }
        })
        // alert(data);
    });


    //Department
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/department',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=departmentsId]').append('<option value=""> Select Department</option>');
            $.each(data, function (index, value) {
                $('select[name=departmentsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });

    //Division
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/division',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=divisionsId]').append('<option value=""> Select Division</option>');
            $.each(data, function (index, value) {
                $('select[name=divisionsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });


    //Software
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/software',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=softwareId]').append('<option value=""> Select Software</option>');
            $.each(data, function (index, value) {
                $('select[name=softwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });


    //Software
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/infoSystem',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=informationSystemId]').append('<option value=""> Select System</option>');
            $.each(data, function (index, value) {
                $('select[name=informationSystemId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    //Status
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/status',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=statusId]').append('<option value=""> Select Status</option>');
            $.each(data, function (index, value) {
                $('select[name=statusId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //Technician
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/Technician',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=softwareTechnicianId]').append('<option value=""> Select Technician</option>');
            $.each(data, function (index, value) {
                $('select[name=softwareTechnicianId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });



    //get id assign
    $('#softwareRequestList').on('click', '.assign', function () {
        var id = $(this).attr('data-id');
        var url = '/api/softwareRequest/GetbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#StatusModal').modal('show');
                $('#assign').find('input[name="id"]').val(data.id);
                $('#assign').find('select[name="statusId"]').val("");
               


            }
        })
        // alert(data);
    });


    //submit assign
    $('#updateStatus').click(function (e) {
        e.preventDefault();

        var id = $('input[name=id]').val();
        var data = $('#assign').serialize();
        $.ajax({
            type: 'PUT',
            url: '/api/softwareRequest/updateStatus/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //hide modal
                $('#StatusModal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success(" Successfully Update Status!");
                    // hide please wait modal

                }, 1000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);

            },
            //if failed
            error: function (data) {
                //alert(id);
                toastr.error("Please update Status!")
            }
        });
    });

    $('#softwareRequestList').on('click', '.report', function () {
        var id = $(this).attr('data-id');
        var url = '/api/softwareRequest/GetbyId/' + id;

        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#softwarerequestModal').modal('show');
                $('#techForm').find('input[name="id"]').val(data.id);
                $('#techForm').find('select[name="softwareId"]').val(data.softwareId);
                $('#techForm').find('select[name="informationSystemId"]').val(data.informationSystemId);
                $('#techForm').find('textarea[name="remarks"]').val("");
                $('#techForm').find('input[name="dateStarted"]').val("");
                $('#techForm').find('input[name="dateEnded"]').val("");
                $('#techForm').find('input[name="timeStarted"]').val("");
                $('#techForm').find('input[name="timeEnded"]').val("");
                $('#techForm').find('input[name="statusId"]').val(data.statusId);
                //alert(data.statusId);
            }
        })
    });

    $('#updateTechForm').click(function (e) {
        e.preventDefault();

        var dataId = $('#techForm').find('input[name=id]').val();
        var dateStarted = $('#techForm').find('input[name=dateStarted]').val();
        var dateEnded = $('#techForm').find('input[name=dateEnded]').val();
        var remarks = $('#techForm').find('textarea[name=remarks]').val();
        var timeStarted = $('#techForm').find('input[name=timeStarted]').val();
        var timeEnded = $('#techForm').find('input[name=timeEnded]').val();
        var softwareId = $('#techForm').find('select[name=softwareId]').val();
        var informationSystemId = $('#techForm').find('select[name=informationSystemId]').val();

        var data = {
            "id": dataId,
            "dateStarted": dateStarted,
            "dateEnded": dateEnded,
            "remarks": remarks,
            "timeStarted": timeStarted,
            "timeEnded": timeEnded,
            "softwareId": softwareId,
            "informationSystemId": informationSystemId,
        };

        $.ajax({
            type: 'PUT',
            url: '/api/softwareRequest/TechnicianForm/' + dataId,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //hide modal
                $('#softwarerequestModal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Technician Form Successfully Added!");
                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            error: function (data) {
                toastr.error("Fill up alll forms / Invalid")

            }
        })
    });
}

function DeveloperSoftware() {

    var tables;
    $("#softwareRequestList").DataTable({
        "ajax": {
            "url": "/api/all/softReq",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "fnInitComplete": function (oSettings, json) {
            // search after pressing enter
            $('#softwareRequestList_filter input').unbind();
            $('#softwareRequestList_filter input').bind('keyup', function (e) {
                if (e.keyCode == 13) {
                    // trigger search 
                    $('#pleasewait').modal('show');
                    setTimeout(function () {
                        $('#pleasewait').modal('hide');
                    }, 2500);
                    $('#softwareRequestList').DataTable().search(this.value).draw();
                }
                // if search is empty, reset the filter
                if (this.value == "") {
                    $('#softwareRequestList').DataTable().search("").draw();
                }
            }
            );
        },
        // "searching" : " true",
        // "searchDelay" : 1000,
        // order by desc dateuploaded
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [
            {
                data: "ticket",
                render: function (data, type, row) {
                    if (data == null) {
                        return '<span class="badge bg-danger">No Ticket</span>';
                    }
                    return `<span class="badge bg-info">${(data)}</span>`
                }
            },
            { data: "dateAdded" },
            { data: "fullName" },
            {
                data: "softwareId",
                render: function (data, type, row) {
                    return row.software.name;
                }
            },
            {
                data: "statusId", render: function (data, type, row) {
                    if (data == 1) {
                        return '<span class="badge  bg-secondary">Open</span>'
                    }
                    else if (data == 2) {
                        return '<span class="badge  bg-success">Resolved</span>'
                    }
                    else if (data == 3) {
                        return '<span class="badge bg-warning">On hold</span>'
                    }
                    else if (data == 4) {
                        return '<span class="badge bg-info">In Progress</span>'
                    }
                    else if (data == 5) {
                        return '<span class="badge  bg-danger">Cancel Request</span>'
                    }
                    else
                        return '<span class="badge bg-secondary">Open</span>'
                }
            },
            {
                data: null,
                render: function (data) {
                    return '<button class="btn btn-info text-light btn-sm view ms-1 mb-1 " data-id="' + data.id + '"><i class="fas fa-eye"></i> View  </button>'
                        + '<button class="btn btn-success text-light btn-sm attach ms-1 mb-1" data-id="' + data.id + '"><i class="fas fa-paperclip"></i> Attachments </button>'
                        + '<button class="btn btn-danger btn-sm delete ms-1 mb-1" data-id="' + data.id + '"><i class="fas fa-trash-alt"></i> Delete</button>'

                },
                orderable: false,
                width: "280px",
            },

        ],
    });

    $('#softwareRequestList').on('click', '.attach', function () {
        var id = $(this).attr('data-id');
        // alert(id);
        var url = '/api/softwareRequest/GetbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#softwareDisplay').modal('show');
                $('#softwareDisplay').find('.modal-title').text('File Attachment');
                var refId = $('#softwareRequestId').val(data.id);
                //alert(data.id);
                //alert(data.statusId);
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,

                    ajax: {
                        url: "/api/v1/uploads/" + id,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" width="150px" height="200px" />';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            }
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();
                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return '';
                                }
                            },
                            className: "text-center"
                        },

                        {
                            data: null,
                            render: function (data, type, row) {
                                return '<button class="btn btn-danger text-light btn-sm delete ms-1 mb-1" data-id="' + row.id + '"><i class="fas fa-eye"></i> Delete </button>'
                            },
                            className: "action-center"

                        }

                    ]
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });

    $('#UploadList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        bootbox.confirm({
            message: "Are you sure you want to delete this record?",
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success btn-sm'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger btn-sm'
                }
            },
            callback: function (result) {
                if (result) {
                    $.ajax({
                        type: 'DELETE',
                        url: '/api/v1/deteleImage/' + id,
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        },
                        success: function (data) {
                            toastr.success("Data Successfully Deleted!");
                            window.location.reload();
                        }
                    });
                }
            }
        });
    });

    $.ajax({
        type: 'GET',
        url: '/api/getuseremail',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            console.log(data);
            localStorage.setItem('email', data);
        },
    });

    //get Details
    $('#softwareRequestList').on('click', '.view', function () {
        var id = $(this).attr('data-id');
        $("#generateReportBtn").attr('data-id', id);

        //alert(id);
        var url = '/api/softwareRequest/GetbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#viewmodal').modal('show');

                $('#viewRequest').find('input[name="id"]').val(data.id);
                $('#viewRequest').find('input[name="fullName"]').val(data.fullName);
                $('#viewRequest').find('input[name="FileName"]').val(data.documentLabel);

                $('#viewRequest').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#viewRequest').find('input[name="modelName"]').val(data.modelName);
                $('#viewRequest').find('select[name="departmentsId"]').val(data.departmentsId);
                $('#viewRequest').find('select[name="divisionsId"]').val(data.divisionsId);
                $('#viewRequest').find('select[name="softwareId"]').val(data.softwareId);
                $('#viewRequest').find('select[name="informationSystemId"]').val(data.informationSystemId);
                $('#viewRequest').find('input[name="requestFor"]').val(data.requestFor);
                $('#viewRequest').find('textarea[name="description"]').val(data.description);
                $('#viewRequest').find('select[name="statusId"]').val(data.statusId);
                $('#viewRequest').find('select[name="softwareTechnicianId"]').val(data.softwareTechnicianId);
                $('#viewRequest').find('textarea[name="remarks"]').val(data.remarks);
                $('#viewRequest').find('input[name="dateStarted"]').val(data.dateStarted);
                $('#viewRequest').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#viewRequest').find('input[name="timeStarted"]').val(data.timeStarted);
                $('#viewRequest').find('input[name="timeEnded"]').val(data.timeEnded);
                $('#viewRequest').find('input[name="viewer"]').val(data.viewer);
                $('#viewRequest').find('input[name="dateView"]').val(data.dateView);
                $('#viewRequest').find('input[name="approver"]').val(data.approver);
                $('#viewRequest').find('input[name="dateApproved"]').val(data.dateApproved);

            }
        })
        // alert(data);
    });
    //Department
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/department',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=departmentsId]').append('<option value=""> Select Department</option>');
            $.each(data, function (index, value) {
                $('select[name=departmentsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //Division
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/division',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=divisionsId]').append('<option value=""> Select Division</option>');
            $.each(data, function (index, value) {
                $('select[name=divisionsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //Software
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/software',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=softwareId]').append('<option value=""> Select Software</option>');
            $.each(data, function (index, value) {
                $('select[name=softwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //Software
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/infoSystem',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=informationSystemId]').append('<option value=""> Select System</option>');
            $.each(data, function (index, value) {
                $('select[name=informationSystemId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    //Status
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/status',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=statusId]').append('<option value=""> Select Status</option>');
            $.each(data, function (index, value) {
                $('select[name=statusId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //Technician
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/Technician',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=softwareTechnicianId]').append('<option value=""> Select Technician</option>');
            $.each(data, function (index, value) {
                $('select[name=softwareTechnicianId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });

    $('#softwareRequestList').on('click', '.request', function () {
        var id = $(this).attr('data-id');
        var url = '/api/softwareRequest/GetbyId/' + id
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#softwarerequestmodal').modal('show');

                $('#EditRequest').find('input[name="id"]').val(data.id);
                $('#EditRequest').find('select[name="informationSystemId"]').val(data.informationSystemId);
                $('#EditRequest').find('select[name="softwareId"]').val(data.softwareId);
                $('#EditRequest').find('input[name="requestFor"]').val(data.requestFor);
                $('#EditRequest').find('textarea[name="description"]').val(data.description);

                $('#EditRequest').find('input[name="statusId"]').val(data.statusId);
                console.log(data.statusId);
                if (data.statusId == 2)
                    $('.update-request').prop('disabled', true)
                else if (data.statusId == 3)
                    $('.update-request').prop('disabled', true)

                else if (data.statusId == 4)
                    $('.update-request').prop('disabled', true)

                else if (data.statusId == 5)
                    $('.update-request').prop('disabled', true)
                else
                    $('.update-request').prop('disabled', false)

            }
        })
    });

    $('#editRequest').click(function (e) {
        e.preventDefault();

        var id = $("#EditRequest").find('input[name="id"]').val();
        var data = $('#EditRequest').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/softwareRequest/updateRequest/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                //hide modal
                $('#softwarerequestmodal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Request Successfully updated!");
                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            error: function (data) {
                //if error
            }
        })
    });

    //get CancelModal
    $('#softwareRequestList').on('click', '.cancel', function () {
        var id = $(this).attr('data-id');
        //alert(id);
        var url = '/api/softwareRequest/GetbyId/' + id;

        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#CancelRequestModal').modal('show');

                $('#cancelRequest').find('input[name="id"]').val(data.id);
                $('#cancelRequest').find('select[name="informationSystemId"]').val(data.informationSystemId);
                $('#cancelRequest').find('select[name="softwareId"]').val(data.softwareId);
                $('#cancelRequest').find('input[name="requestFor"]').val(data.requestFor);
                $('#cancelRequest').find('textarea[name="description"]').val(data.description);
                // alert(data.statusId);
                //alert(data.softwareId);

                $('#cancelRequest').find('input[name="statusId"]').val(data.statusId);
                //alert(data.statusId);
                if (data.statusId == 2)
                    $('.cancel-request').attr('disabled', true);
                else if (data.statusId == 3)
                    $('.cancel-request').attr('disabled', true);
                else if (data.statusId == 4)
                    $('.cancel-request').attr('disabled', true);
                else if (data.statusId == 5)
                    $('.cancel-request').attr('disabled', true);
                else
                    $('.cancel-request').attr('disabled', false);
            }
        })
        // alert(data);
    });


    $('#softwareRequestList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        var url = '/api/Software/Delete/' + id;
        $.ajax({
            // confirm before delete
            beforeSend: function (xhr) {
                // use bootbox
                bootbox.confirm({
                    message: "Are you sure you want to delete this record?",
                    buttons: {
                        // yes and no sequence

                        confirm: {
                            label: 'Yes',
                            className: 'btn-success btn-sm'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger btn-sm'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                type: 'DELETE',
                                url: url,
                                headers: {
                                    'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                                },
                                success: function (data) {

                                    //show please wait modal
                                    $('#pleasewait').modal('show');
                                    //show toastr after 3
                                    setTimeout(function () {
                                        toastr.success("Data Successfully Updated!");
                                        // hide please wait modal
                                    }, 2000);
                                    setTimeout(function () {
                                        window.location.reload();
                                    }, 3000);
                                },
                                //if failed
                                error: function (data) {
                                    toastr.error("Error")
                                }
                            });
                        }
                    }
                });

            },
        });
    });
}


function UserSoftwareRequest() {

}

function SoftwareSuperAdmin() {
    var tables;
    $("#softwareRequestList").DataTable({
        "ajax": {
            "url": "/api/all/softReq",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "fnInitComplete": function (oSettings, json) {
            // search after pressing enter
            $('#softwareRequestList_filter input').unbind();
            $('#softwareRequestList_filter input').bind('keyup', function (e) {
                if (e.keyCode == 13) {
                    // trigger search 
                    $('#pleasewait').modal('show');
                    setTimeout(function () {
                        $('#pleasewait').modal('hide');
                    }, 2500);
                    $('#softwareRequestList').DataTable().search(this.value).draw();
                }
                // if search is empty, reset the filter
                if (this.value == "") {
                    $('#softwareRequestList').DataTable().search("").draw();
                }
            }
            );
        },

        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                data: "ticket",
                render: function (data, type, row) {
                    if (data == null) {
                        return '<span class="badge bg-danger">No Ticket</span>';
                    }
                    return `<span class="badge bg-info">${(data)}</span>`
                }

            },
            {
                data: "dateAdded",
            },
            { data: "fullName" },
            {
                data: "statusId", render: function (data, type, row) {
                    if (data == 1) {
                        return '<span class="badge bg-secondary">Open</span>'
                    }
                    else if (data == 2) {
                        return '<span class="badge  bg-success">Resolved</span>'

                    }
                    else if (data == 3) {
                        return '<span class="badge bg-warning">On hold</span>'
                    }
                    else if (data == 4) {
                        return '<span class="badge  bg-info">In Progress</span>'
                    }
                    else if (data == 5) {
                        return '<span class="badge  bg-danger">Cancel Request</span>'
                    }
                    else
                        return '<span class="badge  bg-secondary">Open</span>'

                }
            },
            {
                data: "dateView", render: function (data, type, row) {
                    if (data == null) {
                        return ''
                    }
                    else
                        return `<span>${moment(data).format("D/M/Y ")}</span>`;

                }
            },
            {
                data: "viewer", render: function (data, type, row) {
                    if (data == null) {
                        return '--'
                    }
                    else
                        return `<span>${(data)}</span>`
                }
            },

            {
                data: "dateApproved", render: function (data, type, row) {
                    if (data == null) {
                        return ''
                    }
                    else
                        return `<span>${moment(data).format("D/M/Y")}</span>`;
                }
            },
            {
                data: null,
                render: function (data) {
                    return '<button class="btn btn-info text-light btn-sm view ms-1 mb-1 btn-view-admin" data-id="' + data.id + '"><i class="fas fa-eye"></i> View</button>'
                        + '<button class="btn btn-success text-light btn-sm attach ms-1 mb-1" data-id="' + data.id + '"><i class="fas fa-paperclip"></i> Attachments </button>'
                        + '<button class="btn btn-primary text-light btn-sm ms-1 mb-1 viewedby" data-id="' + data.id + '"><i class="fas fa-user-check"></i> Approved by </button>'
                },
                orderable: false,
                width: "330px",
            },

        ],
    });
    var urls = [];
    $('#softwareRequestList').on('click', '.attach', function () {
        var id = $(this).attr('data-id');
        // alert(id);
        var url = '/api/softwareRequest/GetbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#softwareDisplay').modal('show');
                $('#softwareDisplay').find('.modal-title').text('File Attachment');
                var refId = $('#softwareRequestId').val(data.id);
                //alert(data.id);
                //alert(data.statusId);
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,

                    ajax: {
                        url: "/api/v1/uploads/" + id,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded",
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },

                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();
                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return '';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            data: null,
                            render: function (data, type, row) {
                                return '<button class="btn btn-danger text-light btn-sm delete ms-1 mb-1" data-id="' + row.id + '"><i class="fas fa-eye"></i> Delete </button>'
                            },
                            className: "text-center"

                        }

                    ]
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#UploadList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        $('#softwareDisplay').modal('hide');
        bootbox.confirm({
            message: "Are you sure you want to delete this record?",
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success btn-sm'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger btn-sm'
                }
            },
            callback: function (result) {
                if (result) {
                    $.ajax({
                        type: 'DELETE',
                        url: '/api/v1/deteleImage/' + id,
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        },
                        success: function (data) {
                            toastr.success("Data Successfully Deleted!");
                            window.location.reload();
                        }
                    });
                }
            }
        });
    });

    //get Details
    $('#softwareRequestList').on('click', '.view', function () {
        var id = $(this).attr('data-id');
        //alert(id);
        var url = '/api/softwareRequest/GetbyId/' + id;

        $("#generateReportBtn").attr('data-id', id);
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#softwarerequestmodal').modal('show');

                $('#viewRequest').find('input[name="id"]').val(data.id);
                $('#viewRequest').find('input[name="fullName"]').val(data.fullName);
                $('#viewRequest').find('input[name="dateAdded"]').val(data.dateAdded);
                $('#viewRequest').find('input[name="FileName"]').val(data.documentLabel);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#viewRequest').find('input[name="modelName"]').val(data.modelName);
                $('#viewRequest').find('select[name="departmentsId"]').val(data.departmentsId);
                $('#viewRequest').find('select[name="divisionsId"]').val(data.divisionsId);
                $('#viewRequest').find('select[name="softwareId"]').val(data.softwareId);
                $('#viewRequest').find('select[name="informationSystemId"]').val(data.informationSystemId);
                $('#viewRequest').find('input[name="requestFor"]').val(data.requestFor);
                $('#viewRequest').find('textarea[name="description"]').val(data.description);
                $('#viewRequest').find('select[name="statusId"]').val(data.statusId);
                $('#viewRequest').find('select[name="softwareTechnicianId"]').val(data.softwareTechnicianId);
                $('#viewRequest').find('textarea[name="remarks"]').val(data.remarks);
                $('#viewRequest').find('input[name="dateStarted"]').val(data.dateStarted);
                $('#viewRequest').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#viewRequest').find('input[name="timeStarted"]').val(data.timeStarted);
                $('#viewRequest').find('input[name="timeEnded"]').val(data.timeEnded);
                $('#viewRequest').find('input[name="approver"]').val(data.approver);
                $('#viewRequest').find('input[name="dateApproved"]').val(data.dateApproved);
                $('#viewRequest').find('input[name="viewer"]').val(data.viewer);
                $('#viewRequest').find('input[name="dateView"]').val(data.dateView);
            }
        })
        // alert(data);
    });

    //Department
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/department',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=departmentsId]').append('<option value=""> Select Department</option>');
            $.each(data, function (index, value) {
                $('select[name=departmentsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //Division
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/division',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=divisionsId]').append('<option value=""> Select Division</option>');
            $.each(data, function (index, value) {
                $('select[name=divisionsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //Software
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/software',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=softwareId]').append('<option value=""> Select Software</option>');
            $.each(data, function (index, value) {
                $('select[name=softwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //Software
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/infoSystem',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=informationSystemId]').append('<option value=""> Select System</option>');
            $.each(data, function (index, value) {
                $('select[name=informationSystemId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    //Status
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/status',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=statusId]').append('<option value=""> Select Status</option>');
            $.each(data, function (index, value) {
                $('select[name=statusId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //Technician
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/Technician',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=softwareTechnicianId]').append('<option value=""> Select Technician</option>');
            $.each(data, function (index, value) {
                $('select[name=softwareTechnicianId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });


    $('#softwareRequestList').on('click', '.viewedby', function () {
        var id = $(this).attr('data-id');
        var url = '/api/softwareRequest/GetbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#ViewedByModal').modal('show');
                $('#viewed').find('input[name="id"]').val(data.id);
                $('#viewed').find('select[name="statusId"]').val(data.statusId);
                $('#viewed').find('textarea[name="viewedRemarks"]').val(data.viewedRemarks);
                $('#viewed').find('input[name="isViewed"]').val(data.isViewed);
                // alert(data.isApproved);
                //alert(data.statusId);
                if (data.isViewed == true)
                    $('.update-viewed').prop('disabled', false)

                else
                    $('.update-viewed').prop('disabled', true)
                //alert(id);

            }
        })
    });

    $('#ViewwdBySubmit').click(function (e) {
        e.preventDefault();

        var id = $('#viewed').find('input[name="id"]').val();
        var data = $('#viewed').serialize();

        $.ajax({
            type: 'PUT',
            url: '/api/softwareRequest/Viewed/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#ViewedByModal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success(" Successfully Approved!");
                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {

                toastr.error("Fill up Remarks")
            }
        });
    });
}

function UserdashHardware() {
    // get activity logs
    $.ajax({
        type: 'GET',
        url: '/api/v2/hr/get',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('#UserhardwareRequest tbody').html('');
            $.each(data, function (index, value) {
                $('#UserhardwareRequest tbody').append(
                    '<tr>' +
                    // activityDate momentjs
                    '<td>' + '<span class="badge bg-info">' + value.ticket + '</span>' + '</td>' +
                    '<td>' + value.dateAdded + '</td>' +
                    '<td>' + value.fullName + '</td>' +
                    '<td>' + value.departments + '</td>' +

                    '<td>' + (value.statusId == 1 ? '<span class="badge bg-secondary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Open</span>' : (value.statusId == 2 ? '<span class="badge bg-success" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Resolved</span>' : (value.statusId == 3 ? '<span class="badge bg-warning" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">On hold</span>' : (value.statusId == 4 ? '<span class="badge bg-info" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">In Progress</span>' : (value.statusId == 5 ? '<span class="badge bg-danger" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Cancel Request</span>' : '<span class="badge bg-secondary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Open</span>'))))) + '</td>' + '</tr>'
                );
            });
        },

        //if failed
        error: function (data) {

            // toastr.info("Success")
        }

    });
}

// dashboard List User Request
function UserdashSoftware() {
    // get activity logs
    $.ajax({
        type: 'GET',
        url: 'ServiceRequest/api/v2/sr/get',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('#UsersoftwareRequest tbody').html('');
            $.each(data, function (index, value) {
                $('#UsersoftwareRequest tbody').append(
                    '<tr>' +
                    '<td>' + '<span class="badge bg-info">' + value.ticket + '</span>' + '</td>' +
                    '<td>' + moment(value.dateAdded).format('M/D/Y LT') + '</td>' +
                    '<td>' + value.fullName + '</td>' +
                    '<td>' + (value.statusId == 1 ? '<span class="badge bg-secondary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Open</span>' : (value.statusId == 2 ? '<span class="badge bg-success" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Resolved</span>' : (value.statusId == 3 ? '<span class="badge bg-warning" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">On hold</span>' : (value.statusId == 4 ? '<span class="badge bg-info" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">In Progress</span>' : (value.statusId == 5 ? '<span class="badge bg-danger" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Cancel Request</span>' : '<span class="badge bg-secondary" style="border-radius: 35px; padding: 4px 6px; font-size: 10px;">Open</span>'))))) + '</td>' + '</tr>'
                );
            });
        },

        //if failed
        error: function (data) {

            // toastr.info("Success")
        }

    });
}

//Count Dashboard Tech/Users
function Count() {
    $.ajax({
        type: 'GET',
        url: '/api/department/countDept',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {

            $('#depcount').text(data);
        },
        //if failed
        error: function (data) {

            // toastr.info("Success")
        }
    });

    $.ajax({
        type: 'GET',
        url: '/api/software/countReq',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            //alert(data);
            $('#softwareRequest').text(data);
        },
        //if failed
        error: function (data) {

            // toastr.info("Success")
        }
    });

    $.ajax({
        type: 'GET',
        url: 'api/hardware/countReq/',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {

            $('#hardwareRequest').text(data);
        },
        //if failed
        error: function (data) {

            // toastr.info("Success")
        }
    });

    $.ajax({
        type: 'GET',
        url: '/api/software/requestbyUser',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {

            $('#softwareuser').text(data);
        },
        //if failed
        error: function (data) {

            // toastr.info("Success")
        }
    });

    $.ajax({
        type: 'GET',
        url: '/api/hardware/requestbyUser',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {

            $('#hardwareuser').text(data);
        },
        //if failed
        error: function (data) {

            // toastr.info("Success")
        }
    });

    $.ajax({
        type: 'GET',
        url: '/api/user/countuser',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {

            $('#usercount').text(data);
        },
        //if failed
        error: function (data) {

            // toastr.info("Success")
        }
    });

    $.ajax({
        type: 'GET',
        url: '/api/hardware/assignbytech',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            //alert(data);
            $('#AssignedRequests').text(data);
        },
        //if failed
        error: function (data) {

            // toastr.info("Success")
        }
    });

    $.ajax({
        type: 'GET',
        url: '/api/software/assignbytech',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            //alert(data);
            $('#AssignedSoftware').text(data);
        },
        //if failed
        error: function (data) {

            // toastr.info("Success")
        }
    });


     $.ajax({
         type: 'GET',
         url: '/api/hardwareTechnician/count',
         headers: {
             'Authorization': 'Bearer ' + localStorage.getItem('access_token')
         },
         success: function (data) {
             //alert(data);
             $('#Technician').text(data);
         },
         //if failed
         error: function (data) {

             // toastr.info("Success")
         }
     });

     $.ajax({
         type: 'GET',
         url: '/api/softwareTechnician/count',
         headers: {
             'Authorization': 'Bearer ' + localStorage.getItem('access_token')
         },
         success: function (data) {
             //alert(data);
             $('#ProgCount').text(data);
         },
         //if failed
         error: function (data) {

             // toastr.info("Success")
         }
     });
    $.ajax({
        type: 'GET',
        url: '/api/software/DivisionUser/count',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            //alert(data);
            $('#divUsers').text(data);
        },
        //if failed
        error: function (data) {

            // toastr.info("Success")
        }
    });
    $.ajax({
        type: 'GET',
        url: '/api/software/NewReq/count',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            //alert(data);
            $('#newRequest').text(data);
        },
        //if failed
        error: function (data) {

            // toastr.info("Success")
        }
    });
    $.ajax({
        type: 'GET',
        url: '/api/software/allReq/count',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            //alert(data);
            $('#allDivisionReq').text(data);
        },
        //if failed
        error: function (data) {

            // toastr.info("Success")
        }
    });
}

var urls = [];

function HardwareAssigned() {
    var tables;
    $("#hardwareRequestList").DataTable({
        "ajax": {
            "url": "/api/all/hardReq",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "fnInitComplete": function (oSettings, json) {
            // search after pressing enter
            $('#hardwareRequestList_filter input').unbind();
            $('#hardwareRequestList_filter input').bind('keyup', function (e) {
                if (e.keyCode == 13) {
                    // trigger search 
                    $('#pleasewait').modal('show');
                    setTimeout(function () {
                        $('#pleasewait').modal('hide');
                    }, 2500);
                    $('#hardwareRequestList').DataTable().search(this.value).draw();
                }
                // if search is empty, reset the filter
                if (this.value == "") {
                    $('#hardwareRequestList').DataTable().search("").draw();
                }
            }
            );
        },
        // "searching" : " true",
        // "searchDelay" : 1000,
        // order by desc dateuploaded
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                "data": "ticket",
                render: function (data, type, row) {
                    if (data == null) {
                        return '<span class="badge bg-danger">No Ticket</span>';
                    }
                    return `<span class="badge bg-info">${(data)}</span>`
                }

            },
            { "data": "dateAdded" },
            { "data": "fullName" },
            {
                "data": "hardwareId",
                "render": function (data, type, row) {
                    if (data == null) {
                        return '';
                    }
                    else {
                        return row.hardware.name;
                    }
                }
            },
            {
                "data": "hardwareTechnicianId",
                "render": function (data, type, row) {
                    if (data == null) {
                        return '';
                    }
                    else {
                        return row.hardwareTechnician.name;
                    }
                }
            },
            {
                "data": "statusId", render: function (data, type, row) {
                    if (data == 1) {
                        return '<span class="badge  bg-secondary">Open</span>'
                    }
                    else if (data == 2) {
                        return '<span class="badge bg-success">Resolved</span>'
                    }
                    else if (data == 3) {
                        return '<span class="badge  bg-warning">On hold</span>'
                    }
                    else if (data == 4) {
                        return '<span class="badge  bg-info">In Progress</span>'
                    }
                    else if (data == 5) {
                        return '<span class="badge  bg-danger">Cancel Request</span>'
                    }
                    else
                        return '<span class="badge  bg-secondary">Open</span>'

                }
            },

            {
                data: null,
                render: function (data) {
                    return '<button class="btn btn-info text-light btn-sm view ms-1 mb-1" data-id="' + data.id + '"><i class="fas fa-eye"></i> View </button>' +
                        '<button class="btn btn-success text-light btn-sm attach ms-1 mb-1" data-id="' + data.id + '"><i class="fas fa-paperclip"></i> Attachments </button>' +
                        '<button class="btn btn-primary text-light btn-sm assign ms-1 mb-1" data-id="' + data.id + '"><i class="fas fa-user-cog"></i> Assign To me</button>'

                },
                orderable: false,
                width: "210px",
            },

        ],
    });

    $('#hardwareRequestList').on('click', '.attach', function () {
        var id = $(this).attr('data-id');
        // alert(id);
        var url = '/api/v2/hardwareRequest/GetRequestbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#hardwareDisplay').modal('show');
                $('#hardwareDisplay').find('.modal-title').text('File Attachements');
                var refId = $('#hardwareRequestId').val(data.id);
                //alert(data.id);
                //alert(data.statusId);
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,

                    ajax: {
                        url: "/api/v2/uploadDislpay/" + id,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();
                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';

                                }
                                else {
                                    return '';
                                }
                            },
                            className: "text-center"
                        },

                    ]
                })
            }
        })
        // alert(data);
    });

    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/unitType',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=unitTypeId]').append('<option value="-1"> Select UnitType</option>');
            $.each(data, function (index, value) {
                $('select[name=unitTypeId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });

    //Department
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/department',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=departmentsId]').append('<option value=""> Select Department</option>');
            $.each(data, function (index, value) {
                $('select[name=departmentsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //Division
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/division',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=divisionsId]').append('<option value=""> Select Division</option>');
            $.each(data, function (index, value) {
                $('select[name=divisionsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //hardware Category
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/hardware',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=hardwareId]').append('<option value=""> Select Hardware Service Category</option>');
            $.each(data, function (index, value) {
                $('select[name=hardwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //technician
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/Technician',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=hardwareTechnicianId]').append('<option value=""> Select Technician</option>');
            $.each(data, function (index, value) {
                $('select[name=hardwareTechnicianId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //status
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/status',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=statusId]').append('<option value=""> Select Status </option>');
            $.each(data, function (index, value) {
                $('select[name=statusId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });

    //GET findings
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/Findings',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=findingId]').append('<option value=""> Select Result</option>');
            $.each(data, function (index, value) {
                $('select[name=findingId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });

    $('#hardwareRequestList').on('click', '.view', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/hardwareRequest/GetRequestbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="id"]').val(data.id);
                $('#viewRequest').find('input[name="fullName"]').val(data.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#viewRequest').find('input[name="modelName"]').val(data.modelName);
                $('#viewRequest').find('select[name="departmentsId"]').val(data.departmentsId);
                $('#viewRequest').find('select[name="divisionsId"]').val(data.divisionsId);
                $('#viewRequest').find('select[name="hardwareId"]').val(data.hardwareId);
                $('#viewRequest').find('select[name="unitTypeId"]').val(data.unitTypeId);
                $('#viewRequest').find('input[name="brandName"]').val(data.brandName);
                $('#viewRequest').find('textarea[name="description"]').val(data.description);
                $('#viewRequest').find('select[name="statusId"]').val(data.statusId);
                $('#viewRequest').find('select[name="findingId"]').val(data.findingId);
                $('#viewRequest').find('select[name="hardwareTechnicianId"]').val(data.hardwareTechnicianId);
                $('#viewRequest').find('input[name="possibleCause"]').val(data.possibleCause);
                $('#viewRequest').find('input[name="FileName"]').val(data.documentLabel);
                $('#viewRequest').find('textarea[name="remarks"]').val(data.remarks);
                $('#viewRequest').find('input[name="dateStarted"]').val(data.dateStarted);
                $('#viewRequest').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#viewRequest').find('input[name="timeStarted"]').val(data.timeStarted);
                $('#viewRequest').find('input[name="timeEnded"]').val(data.timeEnded);
                $('#viewRequest').find('input[name="approver"]').val(data.approver);
                $('#viewRequest').find('input[name="dateApproved"]').val(data.dateApproved);
                $('#viewRequest').find('input[name="viewer"]').val(data.viewer);
                $('#viewRequest').find('input[name="dateView"]').val(data.dateView);
                $('#viewRequest').find('input[name="serialNumber"]').val(data.serialNumber);
                $('#viewRequest').find('input[name="controlNumber"]').val(data.controlNumber);
            }
        })

    });
    $('#hardwareRequestList').on('click', '.assign', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/hardwareRequest/GetRequestbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#assignToMe').modal('show');
                $('#assignTome').find('input[name="id"]').val(data.id);

                /*                alert(data.proEmail);*/
                console.log(data.statusId);
                //if (data.statusId == 2)
                //    $('.update-request').prop('disabled', true)
                //else if (data.statusId == 3)
                //    $('.update-request').prop('disabled', true)
                //else if (data.statusId == 4)
                //    $('.update-request').prop('disabled', true)
                //else if (data.statusId == 5)
                //    $('.update-request').prop('disabled', true)
                //else
                //    $('.update-request').prop('disabled', false)

            }
        })
    });

    $('#Assigntome').click(function (e) {
        e.preventDefault();

        var id = $('#assignTome').find('input[name="id"]').val();
        var data = $('#assignTome').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/hardwareRequest/Assign/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#assignToMe').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success(" Successfully Assigned The Request!");
                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);

            },
            //if failed
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    })
}
function s2ab(s) {
    var buf = new ArrayBuffer(s.length);
    var view = new Uint8Array(buf);
    for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;
    return buf;
}

function ManualRequest() {
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/department',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            var html = '<option value="">Select Department</option>';
            $.each(data, function (i, item) {
                html += '<option value="' + item.id + '">' + item.name + '</option>';
            });
            $('select[name=departmentsId]').html(html);
            // render divisionsId select
            // console log on select change
            $('select[name=departmentsId]').on('change', function () {
                var depId = $('select[name=departmentsId]').val();
                $.ajax({
                    type: 'GET',
                    url: '/api/div/fetchbyid/' + depId,
                    headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                    },
                    success: function (data) {
                        var html = '<option value="0">Select Division</option>';
                        $.each(data, function (i, item) {
                            html += '<option value="' + item.id + '">' + item.name + '</option>';
                        });
                        //console.log(data);
                        $('select[name=divisionsId]').html(html);
                    }
                });
            });
        }
    });


    $('.departments').select2({
        theme: 'bootstrap-5'
    });

    //Software
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/software',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=softwareId]').append('<option value=""> Select Software</option>');
            $.each(data, function (index, value) {
                $('select[name=softwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });


    //Software
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/infoSystem',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=informationSystemId]').append('<option value=""> Select System</option>');
            $.each(data, function (index, value) {
                $('select[name=informationSystemId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });


}

function ManualRequest2() {

    $('#departmentsId').attr("disabled", true);
    $('#divisionsId').attr("disabled", true);

    $('.fullname').select2({
        theme: 'bootstrap-5'
    }).on('change', function (e) {
        var id = $('.fullname option:selected').attr('value');
        console.log(id);
        $.ajax({
            type: 'GET',
            url: '/api/v1/users/getid/' + id,
            success: function (data) {
                $('#manual').find('input[name="fullName"]').val(data.fullName);
                $('#manual').find('input[name="firstName"]').val(data.firstName);
                $('#manual').find('input[name="middleName"]').val(data.middleName);
                $('#manual').find('input[name="lastName"]').val(data.lastName);
                $('#manual').find('input[name="email"]').val(data.email);
                $('#manual').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#manual').find('select[name="departmentsId"]').val(data.departmentsId);
                $('#manual').find('select[name="divisionsId"]').val(data.divisionsId);

            },
            error: function (data) {

            }
        })

    });
    // Users
    $.ajax({
        type: 'GET',
        url: '/api/v1/roles/users',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $.each(data, function (index, value) {
                $('select[name=valueId]').append('<option value="' + value.userId + '">' + value.fullName + '</option>');
            }
            );
        },
    });



    //Department
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/department',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $.each(data, function (index, value) {
                $('select[name=departmentsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });

    //Division
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/division',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $.each(data, function (index, value) {
                $('select[name=divisionsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });


    //Software
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/software',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=softwareId]').append('<option value=""> Select Software</option>');
            $.each(data, function (index, value) {
                $('select[name=softwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });


    //Software
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/infoSystem',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=informationSystemId]').append('<option value=""> Select System</option>');
            $.each(data, function (index, value) {
                $('select[name=informationSystemId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });

}
function ManualRequest3() {
    $('.fullname').select2({
        theme: 'bootstrap-5'
    }).on('change', function (e) {
        var id = $('.fullname option:selected').attr('value');
        console.log(id);
        $.ajax({
            type: 'GET',
            url: '/api/v1/users/getid/' + id,
            success: function (data) {
                $('#manual').find('input[name="fullName"]').val(data.fullName);
                $('#manual').find('input[name="firstName"]').val(data.firstName);
                $('#manual').find('input[name="middleName"]').val(data.middleName);
                $('#manual').find('input[name="lastName"]').val(data.lastName);
                $('#manual').find('input[name="email"]').val(data.email);
                $('#manual').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#manual').find('select[name="departmentsId"]').val(data.departmentsId);
                $('#manual').find('select[name="divisionsId"]').val(data.divisionsId);

            },
            error: function (data) {

            }
        })

    });



    //$('.mobileNumber').select2({
    //    theme: 'bootstrap-5'
    //});

    $.ajax({
        type: 'GET',
        url: '/api/v1/roles/users',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $.each(data, function (index, value) {
                $('select[name=fullName]').append('<option value="' + value.userId + '">' + value.firstName + ' ' + value.middleName + ' ' + value.lastName + '</option>');
            }
            );
        },
    });
    //$('.fullname').on('select2:select', function () {
    //    var userId = $(".fullname:selected").attr('data-select2-id');
    //    console.log(userId);
    //})




    //Department
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/department',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=departmentsId]').append('<option value=""> Select Department</option>');
            $.each(data, function (index, value) {
                $('select[name=departmentsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    //Division
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/division',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=divisionsId]').append('<option value=""> Select Division</option>');
            $.each(data, function (index, value) {
                $('select[name=divisionsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });

    //UnitType
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/unitType',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $.each(data, function (index, value) {
                $('select[name=unitTypeId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });

    //hardwareCategory
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/hardware',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=hardwareId]').append('<option value=""> Select Hardware Service Category</option>');
            $.each(data, function (index, value) {
                $('select[name=hardwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //Findings
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/Findings',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=findingId]').append('<option value=""> Select Result</option>');
            $.each(data, function (index, value) {
                $('select[name=findingId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });

    //$('#btnSubmit').click(function (e) {
    //    e.preventDefault();
    //    var data = {
    //        fullName: $('input[name=fullName]').val(),
    //        email: $('input[name=email]').val(),
    //        mobileNumber: $('input[name=mobileNumber]').val(),
    //        departmentsId: $('select[name=departmentsId]').val(),
    //        divisionsId: $('select[name=divisionsId]').val(),
    //        hardwareId: $('#hardwareId').val(),
    //        modelName: $('#modelName').val(),
    //        brandName: $('#brandName').val(),
    //        unitTypeId: $('#unitTypeId').val(),
    //        documentLabel: $('#documentLabel').val(),
    //        description: $('#description').val(),

    //        possibleCause: $('#possibleCause').val(),
    //        findingId: $('#findingId').val(),
    //        serialNumber: $('#serialNumber').val(),
    //        controlNumber: $('#controlNumber').val(),
    //        dateStarted: $('#dateStarted').val(),
    //        dateEnded: $('#dateEnded').val(),
    //        timeStarted: $('#timeStarted').val(),
    //        timeEnded: $('#timeEnded').val(),
    //        remarks: $('#remarks').val(),
    //    };
    //    $.ajax({
    //        type: 'POST',
    //        url: '/api/manual/save/',
    //        data: data,
    //        headers: {
    //            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
    //        },
    //        success: function (data) {
    //            $('#pleasewait').modal('show');
    //            setTimeout(function () {
    //                toastr.success(" Successfully Create Hardware Request!");
    //                // hide please wait modal

    //            }, 2000);
    //            setTimeout(function () {
    //                window.location.href = "/HardwareRequest/Index";
    //            }, 3000);
    //        },
    //        //if failed
    //        error: function (data) {
    //            toastr.error("Name Already Exist In the Database/ Invalid")
    //        }
    //    });
    //});
}


function ManualRequest4() {
    $('.departments').select2({
        theme: 'bootstrap-5',

    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/department',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            var html = '<option value="">Select Department</option>';
            $.each(data, function (i, item) {
                html += '<option value="' + item.id + '">' + item.name + '</option>';
            });
            $('select[name=departmentsId]').html(html);
            // render divisionsId select
            // console log on select change
            $('select[name=departmentsId]').on('change', function () {
                var depId = $('select[name=departmentsId]').val();
                $.ajax({
                    type: 'GET',
                    url: '/api/div/fetchbyid/' + depId,
                    headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                    },
                    success: function (data) {
                        var html = '<option value="0">Select Division</option>';
                        $.each(data, function (i, item) {
                            html += '<option value="' + item.id + '">' + item.name + '</option>';
                        });
                        //console.log(data);
                        $('select[name=divisionsId]').html(html);
                    }
                });
            });
        }
    });

    //UnitType
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/unitType',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $.each(data, function (index, value) {
                $('select[name=unitTypeId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });

    //hardwareCategory
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/hardware',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=hardwareId]').append('<option value=""> Select Hardware Service Category</option>');
            $.each(data, function (index, value) {
                $('select[name=hardwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //Findings
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/Findings',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=findingId]').append('<option value=""> Select Result</option>');
            $.each(data, function (index, value) {
                $('select[name=findingId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });


//    $('#btnSubmit').click(function (e) {
//        e.preventDefault();
//        var data = {
//            fullName: $('input[name=fullName]').val(),
//            email: $('input[name=email]').val(),
//            mobileNumber: $('input[name=mobileNumber]').val(),
//            departmentsId: $('select[name=departmentsId]').val(),
//            divisionsId: $('select[name=divisionsId]').val(),
//            hardwareId: $('select[name=hardwareId]').val(),
//            modelName: $('input[name=modelName]').val(),
//            brandName: $('input[name=brandName]').val(),
//            unitTypeId: $('select[name=unitTypeId]').val(),
//            documentLabel: $('input[name=FileName]').val(),
//            description: $('textarea[name=description]').val(),

//            possibleCause: $('input[name=possibleCause]').val(),
//            findingId: $('select[name=findingId]').val(),
//            serialNumber: $('input[name=serialNumber]').val(),
//            controlNumber: $('input[name=controlNumber]').val(),
//            dateStarted: $('input[name=dateStarted]').val(),
//            dateEnded: $('input[name=dateEnded]').val(),
//            timeStarted: $('input[name=timeStarted]').val(),
//            timeEnded: $('input[name=timeEnded]').val(),
//            remarks: $('textarea[name=remarks]').val(),
//        };
//        $.ajax({
//            type: 'POST',
//            url: '/api/manual/save/',
//            data: data,
//            headers: {
//                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
//            },
//            success: function (data) {
//                console.log(data);
//                $('#pleasewait').modal('show');
//                setTimeout(function () {
//                    toastr.success(" Successfully Create Hardware Request!");
//                    // hide please wait modal

//                }, 2000);
//                setTimeout(function () {
//                    window.location.href = "/HardwareRequest/Index";
//                }, 3000);
//            },
//            //if failed
//            error: function (data) {
//                toastr.error("Name Already Exist In the Database/ Invalid")
//                console.log(data)
//            }
//        });
//    });
}

function UserRegistrationRequest() {
    FecthDepDiv();
    Datatables = $("#UserRequest").DataTable({
        ajax: {
            url: "/api/UserRegistration/register",
            dataSrc: "",
            headers: {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            }
        },
        autoWidth: false,
        columns: [

            {
                data: "dateCreated",
            },
            {
                data: "null",
                render: function (data, type, row) {
                    return row.firstName + " " + row.middleName + " " + row.lastName;
                }
            },
          
            {
                data: "email",
            },
            {
                data: "mobileNumber"
            },
            {
                data: "departmentName"
            },
            {
                data: "divisionName"
            },
            {
                data: "isNewAccount", render: function (data, type, row) {
                    if (data == true) {
                        return '<span class="badge  bg-success">Yes</span>'
                    }
                    else if (data == false) {
                        return ''
                    }
                }
            },
            {
                data: null,
                render: function (data) {
                    return '<button class="btn btn-outline-success approval btn-sm me-1 " data-id="' + data.id + '"><i class="fas fa-eye"></i> View</button>' + 
                        '<button class="btn btn-outline-danger delete btn-sm mb-1 mt-1 me-1" data-id="' + data.id + '"><i class="fas fa-trash"></i> Delete</button>' + 
                        '<button class="btn btn-outline-primary add btn-sm me-1" data-id="' + data.id + '"><i class="fas fa-plus"></i> Add User</button>'
                },
                "orderable": false,
                
            }

        ]
    });
    $('.departmentsId2').select2({
        theme: 'bootstrap-5',
        dropdownParent: $('#createModal .modal-content')
    });
    $('#UserRequest').on('click', '.tech', function () {
        var id = $(this).attr('data-id');
        var url = '/api/useraccount/get/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $("#addtoTech").modal('show');
                $('#addTech').find('input[name="id"]').val(data.id);
                $('#addTech').find('input[name="name"]').val(data.fullName);
                $('#addTech').find('input[name="email"]').val(data.email);
            },
            //if failed
            error: function (data) {
                // console.log(data, data.id, data.name);
                toastr.error("error")
            }
        })
    });


    function FecthDepDiv() {
        $.ajax({
            type: 'GET',
            url: '/api/hardwareRequest/department',
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                var html = '<option value="">Select Department</option>';
                $.each(data, function (i, item) {
                    html += '<option value="' + item.id + '">' + item.name + '</option>';
                });
                $('select[name=departmentsId2]').html(html);
                // render divisionsId2 select
                // console log on select change
                $('select[name=departmentsId2]').on('change', function () {
                    var depId = $('select[name=departmentsId2]').val();
                    $.ajax({
                        type: 'GET',
                        url: '/api/div/fetchbyid/' + depId,
                        headers: {
                            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                        },
                        success: function (data) {
                            var html = '<option value="0">Select Division</option>';
                            $.each(data, function (i, item) {
                                html += '<option value="' + item.id + '">' + item.name + '</option>';
                            });
                            //console.log(data);
                            $('select[name=divisionsId2]').html(html);
                        }
                    });
                });
            }
        });
    }

    $('#UserRequest').on('click', '.add', function () {
        var id = $(this).attr('data-id');
        var url = '/api/useraccount/get/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $("#createModal").modal('show');
                $('#addUser').find('input[name="id"]').val(data.id);
                $('#addUser').find('input[name="firstName"]').val(data.firstName);
                $('#addUser').find('input[name="middleName"]').val(data.middleName);
                $('#addUser').find('input[name="lastName"]').val(data.lastName);
                $('#addUser').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#addUser').find('input[name="email"]').val(data.email);
            },
            //if failed
            error: function (data) {
                // console.log(data, data.id, data.name);
                toastr.error("error")
            }
        })
    });

    $('#addUser').submit(function (e) {
        e.preventDefault();
        var depId = $('select[name="departmentsId2"]').val();
        var divId = $('select[name="divisionsId2"]').val();
        var formData = $(this).serialize() + '&departmentsId=' + depId + '&divisionsId=' + divId;
        $.ajax({
            url: '/api/Account/Register',
            type: 'POST',
            data: formData,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#createModal').modal('hide');
                $('#pleasewait').modal('show');

                setTimeout(function () {
                    toastr.success("Account Created Successfully");
                    // hide please wait modal
                }, 2000),
                    setTimeout(function () {
                        location.reload();
                    }, 3000);
            },
            error: function (data) {
                toastr.error('Register Failed');
            }
        });
    });

    $('#UserRequest').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        var url = '/api/userAccount/Delete/' + id;
        $.ajax({
            // confirm before delete
            beforeSend: function (xhr) {
                // use bootbox
                bootbox.confirm({
                    message: "Are you sure you want to delete this record?",
                    buttons: {
                        // yes and no sequence
                        confirm: {
                            label: 'Yes',
                            className: 'btn-success btn-sm'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger btn-sm'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                type: 'DELETE',
                                url: url,
                                headers: {
                                    'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                                },
                                success: function (data) {
                                    //show please wait modal
                                    $('#pleasewait').modal('show');
                                    //show toastr after 3
                                    setTimeout(function () {
                                        toastr.success("Successfully Deleted!");
                                    }, 2000);
                                    setTimeout(function () {
                                        window.location.reload();
                                    }, 3000);
                                },
                                //if failed
                                error: function (data) {
                                    toastr.error("Error Deleting Data")
                                }
                            });
                        }
                    }
                });

            },
        });
    });

    $("#UserRequest").on('click', '.approval', function () {
        var id = $(this).attr('data-id');
        var url = '/api/useraccount/get/' + id;
        //alert(id);
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $("#approvedUserModal").modal('show');
                $('#UserInfo').find('input[name="id"]').val(data.id);
                $('#UserInfo').find('input[name="firstName"]').val(data.firstName);
                $('#UserInfo').find('input[name="middleName"]').val(data.middleName);
                $('#UserInfo').find('input[name="lastName"]').val(data.lastName);
                $('#UserInfo').find('input[name="departmentName"]').val(data.departmentName);
                $('#UserInfo').find('input[name="divisionName"]').val(data.divisionName);
                $('#UserInfo').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#UserInfo').find('input[name="email"]').val(data.email);
            },
            //if failed
            error: function (data) {
                // console.log(data, data.id, data.name);
                toastr.error("error")
            }
        })
    })

    $("#updateuser").click(function (e) {
        e.preventDefault();
        var data = $('#UserInfo').serialize();
        var id = $('#UserInfo').find('input[name="id"]').val();
        $.ajax({
            type: 'PUT',
            url: '/api/v2/useraccount/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#approvedUserModal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Data Successfully Updated!");
                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Saving")
            }
        });
    });

    $('#addtechnician').click(function (e) {
        e.preventDefault();
        var data = $("#addTech").serialize();
        $.ajax({
            type: 'POST',
            url: '/api/addtech/save',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $("#addtoTech").modal('hide');

                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Data Successfully Added!");
                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Name Already Exist In the Database/ Invalid")
            }
        });


    });


}

function ForgotPassword() {
    Datatables = $("#UserForgotList").DataTable({
        ajax: {
            url: "/api/UserForgotPass/passemail",
            dataSrc: "",
            headers: {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            }
        },
        autoWidth: false,
        columns: [

            {
                data: "dateCreated",
            },
            {
                data: "null",
                render: function (data, type, row) {
                    return row.firstName + " " + row.middleName + " " + row.lastName;
                }
            },
            {
                data: "departmentName"
            },
            {
                data: "divisionName"
            },
            {
                data: "isRequest", render: function (data, type, row) {
                    if (data == true) {
                        return '<span class="badge  bg-success">seen</span>'
                    }
                    else if (data == false) {
                        return ''
                    }
                }
            },
            {
                data: null,
                render: function (data) {
                    return '<button class="btn btn-primary approval btn-sm me-1 text-white" data-id="' + data.id + '"><i class="fas fa-eye"></i> View</button>' + 
                        '<button class="btn btn-success btn-danger delete btn-sm me-1 text-white" data-id="' + data.id + '"><i class="fas fa-trash"></i> Delete</button>' 
                },
                "orderable": false,
            }

        ]
    });
    $("#UserForgotList").on('click', '.approval', function () {
        var id = $(this).attr('data-id');
        var url = '/api/userforgot/get/' + id;
        //alert(id);
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $("#approvedUserModal").modal('show');
                $('#UserInfo').find('input[name="id"]').val(data.id);
                $('#UserInfo').find('input[name="firstName"]').val(data.firstName);
                $('#UserInfo').find('input[name="middleName"]').val(data.middleName);
                $('#UserInfo').find('input[name="lastName"]').val(data.lastName);
                $('#UserInfo').find('input[name="departmentName"]').val(data.departmentName);
                $('#UserInfo').find('input[name="divisionName"]').val(data.divisionName);
                $('#UserInfo').find('input[name="mobileNumber"]').val(data.mobileNumber);
            },
            //if failed
            error: function (data) {
                // console.log(data, data.id, data.name);
                toastr.error("error")
            }
        })
    });
    $("#updateuser").click(function (e) {
        e.preventDefault();
        var data = $('#UserInfo').serialize();
        var id = $('#UserInfo').find('input[name="id"]').val();
        $.ajax({
            type: 'PUT',
            url: '/api/v2/userforgot/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#approvedUserModal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Data Successfully Updated!");
                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Saving")
            }
        });
    });
    $('#UserForgotList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        var url = '/api/forgot/Delete/' + id;
        $.ajax({
            // confirm before delete
            beforeSend: function (xhr) {
                // use bootbox
                bootbox.confirm({
                    message: "Are you sure you want to delete this record?",
                    buttons: {
                        // yes and no sequence
                        confirm: {
                            label: 'Yes',
                            className: 'btn-success btn-sm'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger btn-sm'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                type: 'DELETE',
                                url: url,
                                headers: {
                                    'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                                },
                                success: function (data) {
                                    //show please wait modal
                                    $('#pleasewait').modal('show');
                                    //show toastr after 3
                                    setTimeout(function () {
                                        toastr.success("Successfully Deleted!");
                                    }, 2000);
                                    setTimeout(function () {
                                        window.location.reload();
                                    }, 3000);
                                },
                                //if failed
                                error: function (data) {
                                    toastr.error("Error Deleting Data")
                                }
                            });
                        }
                    }
                });

            },
        });
    });
}
function AdminIndex() {
    var table2 = $("#hardwareRequestList").DataTable({
        "ajax": {
            "url": "/api/v2/hr/assigned2",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",

        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return '<span class="badge bg-primary">' + row.hardwareUserRequest.ticket + '</span>'
                }
            },
            {
                data: "dateAssigned",
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return row.hardwareUserRequest.fullName
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    if (row.hardwareUserRequest.isManual == 1) {
                        return 'Manual Request'
                    }
                    else
                        return 'User Request'
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return row.hardwareUserRequest.hardwareName
                }
            },

            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    if (row.hardwareUserRequest.status == "Open") {
                        return '<span class="badge shadow  bg-secondary">Open</span>'
                    }
                    else if (row.hardwareUserRequest.status == "In Progress") {
                        return '<span class="badge shadow  bg-info">In Progress</span>'
                    }
                    else if (row.hardwareUserRequest.status == "Pending Assigned Request") {
                        return '<span class="badge shadow  bg-info">In Progress</span>'
                    }
                    else if (row.hardwareUserRequest.status == "Manual") {
                        return '<span class="badge shadow  bg-info">In Progress</span>'
                    }
                    else if (row.hardwareUserRequest.status == "Resolved") {
                        return '<span class="badge shadow  bg-success">Resolved</span>'
                    }
                    else if (row.hardwareUserRequest.status == "Verified") {
                        return '<span class="badge shadow  bg-primary">Verified</span>'
                    }
                    else if (row.hardwareUserRequest.status == "Approved") {
                        return '<span class="badge shadow  bg-danger">Approved</span>'
                    }
                    else if (row.hardwareUserRequest.status == "Cancel") {
                        return '<span class="badge shadow  bg-danger">Cancel</span>'
                    }
                    return '<span class="badge shadow  bg-success">Resolved</span>'
                }
            },
            {
                data: null
            }
        ],
        columnDefs:
            [{
                targets: [-1], render: function (a, b, data, d) {
                    if (data.hardwareUserRequest.status == "Open") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>'
                    }
                    else if (data.hardwareUserRequest.status == "In Progress") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success btn-sm report me-2" data-id="' + data.id + '"><i class="bi bi-card-checklist"></i> Report </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Manual") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success btn-sm report me-2" data-id="' + data.id + '"><i class="bi bi-card-checklist"></i> Report </button>' +
                            '<button class="btn btn-outline-secondary btn-sm edit me-2" data-id="' + data.id + '"><i class="bi bi-pencil-square"></i> Edit </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Pending Assigned Request") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-danger btn-sm accept me-2" data-id="' + data.id + '"><i class="bi bi-check"></i> Accept </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Resolved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Verified") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i>  Transaction </button>' +
                            '<button class="btn btn-outline-dark  btn-sm print me-2" data-id="' + data.id + '"> <i class="bi bi-printer"></i> Print </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Approved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn btn-outline-dark btn-sm print me-2" data-id="' + data.id + '"> <i class="bi bi-printer"></i> Print </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Cancel") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }

                },
                orderable: false,
                width: "280px"
            }]
    });
    $('#hardwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);
                $('#viewRequest').find('input[name="fullName"]').val(data.hardwareUserRequest.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.hardwareUserRequest.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.hardwareUserRequest.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.hardwareUserRequest.divisionName);
                $('#viewRequest').find('input[name="hardwareName"]').val(data.hardwareUserRequest.hardwareName);
                $('#viewRequest').find('input[name="modelName"]').val(data.hardwareUserRequest.modelName);
                $('#viewRequest').find('input[name="uniTypes"]').val(data.hardwareUserRequest.uniTypes);
                $('#viewRequest').find('input[name="brandName"]').val(data.hardwareUserRequest.brandName);
                $('#viewRequest').find('input[name="FileName"]').val(data.hardwareUserRequest.documentLabel);
                $('#viewRequest').find('textarea[name="description"]').val(data.hardwareUserRequest.description);
                $('#techForm').find('input[name="hardwareName"]').val(data.hardwareName);
                $('#techForm').find('input[name="uniTypes"]').val(data.uniTypes);
                $('#techForm').find('input[name="brandName"]').val(data.brandName);
                $('#techForm').find('input[name="technicianName"]').val(data.technicianName);
                $('#techForm').find('input[name="modelName"]').val(data.modelName);
                $('#techForm').find('input[name="findingName"]').val(data.findingName);
                $('#techForm').find('input[name="possibleCause"]').val(data.possibleCause);
                $('#techForm').find('input[name="serialNumber"]').val(data.serialNumber);
                $('#techForm').find('input[name="controlNumber"]').val(data.controlNumber);
                $('#techForm').find('textarea[name="remarks"]').val(data.remarks);
                $('#techForm').find('input[name="dateStarted"]').val(data.dateStarted);
                $('#techForm').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#techForm').find('input[name="adminName"]').val(data.adminName);
                $('#techForm').find('input[name="superName"]').val(data.superName);
                $('#techForm').find('input[name="technicianReportId"]').val(data.id);
                if (data.hardwareUserRequest.status == "Open")
                    $('.update-image').prop('disabled', true)

                else if (data.hardwareUserRequest.status == "In Progress")
                    $('.update-image').prop('disabled', true)

                else if (data.hardwareUserRequest.status == "Accepts Request")
                    $('.update-image').prop('disabled', true)

                else if (data.hardwareUserRequest.status == "Resolved")
                    $('.update-image').prop('disabled', false)

                else if (data.hardwareUserRequest.status == "Verified")
                    $('.update-image').prop('disabled', true)

                else if (data.hardwareUserRequest.status == "Approved")
                    $('.update-image').prop('disabled', true)
                else if (data.hardwareUserRequest.status == "Cancel")
                    $('.update-image').prop('disabled', true)
                else
                    $('.update-image').prop('disabled', false)

                var dataId = $('#hardwareUserRequestId').attr('value');
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/userUploads/" + dataId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },

                    ]
                });




                var techId = $('input[name="technicianReportId"]').attr('value');
                var uploadTable = $('#TechUploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/techUploads/get/" + techId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                        {
                            data: null
                        }
                    ],
                    columnDefs:
                        [{
                            targets: [-1], render: function (a, b, data, d) {
                                if (data.technicianReport.adminName != null) {
                                    return '';
                                }
                                else if (data.technicianReport.admin == null) {
                                    return '<button type="button" class="btn btn-outline-danger btn-sm delete me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> delete </button>';
                                }
                            },
                            orderable: false,
                            width: "280px"
                        }]
                });

                $('#upload2').find('input[name=technicianReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=technicianReportId]').find('option[value=' + data.id + ']').remove();
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#TechUploadList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        bootbox.confirm({
            message: "Are you sure you want to delete this image?",
            centerVertical: true,

            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success btn-sm'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger btn-sm '
                }
            },
            callback: function (result) {
                if (result) {
                    $.ajax({

                        type: 'DELETE',
                        url: '/api/v2/deleteImage/' + id,
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        },
                        success: function (data) {

                            //show toastr after 3
                            setTimeout(function () {
                                toastr.success("Image Successfully Remove!");
                                // hide please wait modal
                            }, 2000);
                            setTimeout(function () {
                                location.reload();
                                $('#upload2')[0].reset();
                            }, 3000);
                        }
                    });
                }
            }
        });
    });
    $('#upload2').submit(function (e) {
        e.preventDefault();
        var formData = new FormData(this);
        $.ajax({
            url: '/api/tech/saveFile',
            type: 'POST',
            data: formData,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                $('#addimageModal').modal('hide');
                $('#hardwareDisplay').modal('hide');

                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("File Successfully Added!");
                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    location.reload();
                    $('#upload2')[0].reset();
                }, 3000);
            },
            cache: false,
            contentType: false,
            processData: false,
            error: function (data) {
                toastr.error("Error Updating File")
            }
        });

    });
    $('#hardwareRequestList').on('click', '.report', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#TechnicianForm').modal('show');
                $('#techForm2').find('input[name="technicianReportId"]').val(data.id);
                $('#techForm2').find('input[name="HardwareUserRequestId"]').val(data.hardwareUserRequest.id);
                $('#techForm2').find('select[name="hardwareId"]').val(data.hardwareUserRequest.hardwareId);
                $('#techForm2').find('select[name="unitTypeId"]').val(data.hardwareUserRequest.unitTypeId);
                $('#techForm2').find('input[name="brandName"]').val(data.hardwareUserRequest.brandName);
                $('#techForm2').find('input[name="modelName"]').val(data.hardwareUserRequest.modelName);
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#hardwareRequestList').on('click', '.transaction', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#ReportModal').modal('show');
                $('#transactional').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);


                var dataId = $('#transactional').find('input[name="hardwareUserRequestId"]').attr('value');
                var table = $('#techList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertask/getbyId/" + dataId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "hardwareUserRequestId",
                            render: function (data, type, row) {
                                return '<span class="badge shadow bg-primary">' + row.hardwareUserRequest.ticket+ '</span>'
                            }
                        },
                        {
                            data: "hardwareUserRequest.fullName"
                        },
                        {
                            data: "hardwareTaskId",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return '<span class="badge shadow bg-info">Requested</span>'
                                }
                                else if (data == 2) {
                                    return '<span class="badge shadow bg-primary">Assigned</span>'
                                }
                                else if (data == 3) {
                                    return '<span class="badge shadow bg-success">Reported</span>'
                                }
                                else if (data == 4) {
                                    return '<span class="badge shadow bg-primary">Verified</span>'
                                }
                                else if (data == 5) {
                                    return '<span class="badge shadow bg-primary">Approved</span>'
                                }
                            }
                        }
                    ],

                });

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/Findings',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=findingId]').append('<option value=""> Select Result</option>');
            $.each(data, function (index, value) {
                $('select[name=findingId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/hardware',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=hardwareId]').append('<option value=""> Select Hardware Service Category</option>');
            $.each(data, function (index, value) {
                $('select[name=hardwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/UnitType',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=unitTypeId]').append('<option value=""> Select UnitType</option>');
            $.each(data, function (index, value) {
                $('select[name=unitTypeId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    $('#saveReport').click(function (e) {
        e.preventDefault();

        var id = $('#techForm2').find('input[name="technicianReportId"]').val();
        var data = $('#techForm2').serialize();

        $.ajax({
            type: 'PUT',
            url: '/api/v2/hardwareRequest/techReport/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#techForm2').find('input[name="possibleCause"]').val("");
                $('#techForm2').find('input[name="serialNumber"]').val("");
                $('#techForm2').find('input[name="controlNumber"]').val("");
                $('#techForm2').find('textarea[name="remarks"]').val("");

                $('#TechnicianForm').modal('hide');
                //show please wait modal

                //show toastr after 3

                $('#pleasewait').modal('show');

                setTimeout(function () {
                    toastr.success("File Successfully Added!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    table2.ajax.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Fill up Remarks")
            }
        });
    });
    $('#saveReport').click(function (e) {
        e.preventDefault();
        var valdata = $('#techForm2').find('input[name="HardwareUserRequestId"]').val();
        var data = $('#techForm2').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/v3/hardwareRequest/techReport/' + valdata,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
            },
            //if failed
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
    $('#hardwareRequestList').on('click', '.print', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;

        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#PrintModal').modal('show');

                $('#print').find('input[name="id"]').val(data.id);
                $('#print').find('input[name="ticket"]').val(data.hardwareUserRequest.ticket);
                $('#print').find('input[name="fullName"]').val(data.hardwareUserRequest.fullName);
                $('#print').find('input[name="hardwareName"]').val(data.hardwareName);
                $('#print').find('input[name="description"]').val(data.hardwareUserRequest.description);
                $('#print').find('input[name="departmentName"]').val(data.hardwareUserRequest.departmentName);
                $('#print').find('input[name="divisionName"]').val(data.hardwareUserRequest.divisionName);
                $('#print').find('input[name="technicianName"]').val(data.technicianName);
                $('#print').find('input[name="findingName"]').val(data.findingName);
                $('#print').find('input[name="possibleCause"]').val(data.possibleCause);
                $('#print').find('input[name="remarks"]').val(data.remarks);
                $('#print').find('input[name="dateStarted"]').val(data.dateStarted);
                $('#print').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#print').find('input[name="adminName"]').val(data.adminName);
                $('#print').find('input[name="superName"]').val(data.superName);
                $('#print').find('input[name="serialNumber"]').val(data.serialNumber);
                $('#print').find('input[name="controlNumber"]').val(data.controlNumber);
                $('#print').find('input[name="superName"]').val(data.superName);
                $('#print').find('input[name="adminName"]').val(data.adminName);
            }
        })
    });
    $('#hardwareRequestList').on('click', '.accept', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#AcceptModal').modal('show');
                $('#accepts').find('input[name="id"]').val(data.id);
                $('#accepts').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);
                $('#accepts').find('input[name="technicianReportId"]').val(data.id);

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#hardwareRequestList').on('click', '.edit', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#editModal').modal('show');
                $('#manualRequest').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);
                $('#manualRequest').find('input[name="fullName"]').val(data.hardwareUserRequest.fullName);
                $('#manualRequest').find('input[name="email"]').val(data.hardwareUserRequest.email);
                $('#manualRequest').find('input[name="mobileNumber"]').val(data.hardwareUserRequest.mobileNumber);
                $('#manualRequest').find('select[name="departmentsId"]').val(data.hardwareUserRequest.departmentsId);
                $('#manualRequest').find('select[name="divisionsId"]').val(data.hardwareUserRequest.divisionsId);

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#BtnAccept').click(function (e) {
        e.preventDefault();

        var hardwareRequestId = $('#accepts').find('input[name="hardwareUserRequestId"]').val();
        var data = $('#accepts').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/v2/IsNew/UserRequest/' + hardwareRequestId,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                console.log(data.id);
                $('#pleasewait').modal('show');

                $('#AcceptModal').modal('hide');
                setTimeout(function () {
                    toastr.success("File Successfully Added!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    table2.ajax.reload();
                }, 3000);
            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
    $('#BtnAccept').click(function (e) {
        e.preventDefault();

        var id = $('#accepts').find('input[name="technicianReportId"]').val();
        var data = $('#accepts').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/started/UserRequest/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#AcceptModal').modal('hide');

            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/department',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            var html = '<option value="">Select Department</option>';
            $.each(data, function (i, item) {
                html += '<option value="' + item.id + '">' + item.name + '</option>';
            });
            $('select[name=departmentsId]').html(html);
            // render divisionsId select
            // console log on select change
            $('select[name=departmentsId]').on('change', function () {
                var depId = $('select[name=departmentsId]').val();
                $.ajax({
                    type: 'GET',
                    url: '/api/div/fetchbyid/' + depId,
                    headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                    },
                    success: function (data) {
                        var html = '<option value="0">Select Division</option>';
                        $.each(data, function (i, item) {
                            html += '<option value="' + item.id + '">' + item.name + '</option>';
                        });
                        //console.log(data);
                        $('select[name=divisionsId]').html(html);
                    }
                });
            });
        }
    });
    $('#saveReport').click(function (e) {
        e.preventDefault();
        var formData = new FormData(techForm2);
        $.ajax({
            url: '/api/tech/saveFile',
            type: 'POST',
            data: formData,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {

                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    location.reload();
                    $('#upload2')[0].reset();
                }, 3000);
            },
            cache: false,
            contentType: false,
            processData: false,
            error: function (data) {
                toastr.error("Error Updating File")
            }
        });

    });
    $.ajax({
        type: 'GET',
        url: '/api/User/division',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=divisionsId]').append('<option value=""> Select Division</option>');
            $.each(data, function (index, value) {
                $('select[name=divisionsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    $('#btnSubmit').click(function (e) {
        e.preventDefault();

        var hardwareRequestId = $('#manualRequest').find('input[name="hardwareUserRequestId"]').val();
        var data = $('#manualRequest').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/edit/manual/techReport/' + hardwareRequestId,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                console.log(data.id);
                $('#pleasewait').modal('show');

                $('#editModal').modal('hide');
                setTimeout(function () {
                    toastr.success("File Successfully Updated!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    table2.ajax.reload();
                }, 3000);
            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
}
function SoftwareRequestList() {
    var tables;
    tables = $("#softwareRequestList").DataTable({
        "ajax": {
            "url": "/api/sr/user",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        // "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "order": [[1, "desc"]],
        "autoWidth": false,
        "info": false,
        "language": false,
        "columns": [
            {
                data: "ticket",
                render: function (data, type, row) {
                    return '<span class="badge shadow  bg-primary">' + data + '</span>'
                }


            },
            { data: "dateAdded" },
            {
                data: "softwareName",
            },
            {
                data: "status",
                render: function (data, row) {
                    if (data == "Open") {
                        return '<span class="badge shadow bg-open  ">' + data + '</span>'
                    }
                    else if (data == "Return Request") {
                        return '<span class="badge shadow  bg-secondary">Open</span>'
                    }
                    else if (data == "Cancel") {
                        return '<span class="badge shadow  bg-danger">' + data + '</span>'
                    }
                    else if (data == "Pending Division Approval") {
                        return '<span class="badge shadow  bg-secondary">'+data+'</span>'
                    }
                    else if (data == "Update Request") {
                        return '<span class="badge shadow  bg-secondary">Open</span>'
                    }
                    else if (data == "In Progress") {
                        return '<span class="badge shadow  bg-info">' + data + '</span>'
                    }
                    else if (data == "Accepts Request") {
                        return '<span class="badge shadow  bg-info">In Progress</span>'
                    }
                    else if (data == "Verified") {
                        return '<span class="badge shadow  bg-primary">' + data + '</span>'
                    }
                    else if (data == "Manual") {
                        return '<span class="badge shadow  bg-open">Open</span>'
                    }
                    else if (data == "Resolved") {
                        return '<span class="badge shadow  bg-success">' + data + '</span>'
                    }
                    else if (data == "Approved") {
                        return '<span class="badge shadow  bg-warning">' + data + '</span>'
                    }
                }
            },
            {
                data: null,
            },
        ],
        columnDefs:
            [{
                targets: [-1], render: function (a, b, data, d) {
                    if (data.status == "Open") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.status == "Pending Division Approval") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-secondary btn-sm edit me-2" data-id="' + data.id + '"><i class="bi bi-person-check"></i> Edit</button>' +
                            '<button class="btn btn-outline-danger btn-sm cancel me-2" data-id="' + data.id + '"><i class="bi bi-x-circle"></i> Cancel </button>';
                    }
                    else if (data.status == "Return Request") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-secondary btn-sm edit-return me-2" data-id="' + data.id + '"><i class="bi bi-person-check"></i> Edit</button>' +
                            '<button class="btn btn-outline-danger btn-sm cancel me-2" data-id="' + data.id + '"><i class="bi bi-person-check"></i> Cancel </button>';
                    }
                    else if (data.status == "Manual") {
                        return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.status == "Update Request") {
                        return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.status == "Cancel") {
                        return '<button class="btn btn-outline-info  shadow btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }
                    else if (data.status == "In Progress") {
                        return '<button class="btn btn-outline-info   btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.status == "Verified") {
                        return '<button class="btn btn-outline-info   btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.status == "Accepts Request") {
                        return '<button class="btn btn-outline-info   btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary shadow btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.status == "Resolved") {
                        return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.status == "Approved") {
                        return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                },
                orderable: false,
                width: "230px"
            }]
    });

    setInterval (function () {
        tables.ajax.reload();
    }, 9000);


    $('#softwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/user/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="ticket"]').val(data.ticket);
                $('#viewRequest').find('input[name="dateAdded"]').val(data.dateAdded);
                $('#viewRequest').find('input[name="fullName"]').val(data.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.divisionName);
                $('#viewRequest').find('input[name="softwareName"]').val(data.softwareName);
                $('#viewRequest').find('input[name="informationName"]').val(data.informationName);
                $('#viewRequest').find('input[name="requestFor"]').val(data.requestFor);
                $('#viewRequest').find('input[name="FileName"]').val(data.documentLabel);
                $('#viewRequest').find('textarea[name="description"]').val(data.description);
                $('#viewRequest').find('input[name="softwareUserRequestId"]').val(data.id);

                $.ajax({
                    type: 'GET',
                    url: '/api/v2/Approver/getbyId/' + id,
                    success: function (data, row) {
                        $('#addImage').find('input[name="id"]').val(data.id);

                        if (data.status == "Open")
                            $('.update-image').prop('disabled', true)
                        else if (data.status == "Update Request")
                            $('.update-image').prop('disabled', false)
                        else if (data.status == "In Progress")
                            $('.update-image').prop('disabled', true)

                        else if (data.status == "Accepts Request")
                            $('.update-image').prop('disabled', true)

                        else if (data.status == "Resolved")
                            $('.update-image').prop('disabled', true)

                        else if (data.status == "Verified")
                            $('.update-image').prop('disabled', true)

                        else if (data.status == "Approved")
                            $('.update-image').prop('disabled', true)
                        else if (data.status == "Cancel")
                            $('.update-image').prop('disabled', true)
                        else
                            $('.update-image').prop('disabled', false)


                        var uploadTable = $('#UploadList').DataTable({
                            destroy: true,

                            ajax: {
                                url: "/api/v2/uploads/" + id,
                                dataSrc: '',
                                headers: {
                                    "Authorization": "Bearer " + localStorage.getItem('access_token')
                                }
                            },
                            searching: false,
                            ordering: false,
                            columns: [
                                {
                                    data: "dateAdded"
                                },
                                {
                                    data: "documentBlob",
                                    render: function (data, type, row, meta) {
                                        var fileType = row.fileName.split('.').pop();
                                        if (fileType == 'pdf') {
                                            return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                        } else if (fileType == 'doc' || fileType == 'docx') {
                                            return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                        } else if (fileType == 'xls' || fileType == 'xlsx') {
                                            return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                        } else if (fileType == 'ppt' || fileType == 'pptx') {
                                            return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                        } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                            return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                        } else {
                                            return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                        }
        
                                    },
                                    className: "text-center"
        
                                },
                                {
                                    // download link by using anchor link only
                                    data: "documentBlob",
                                    render: function (data, type, row) {
                                        var f = new Blob([s2ab(atob(data))], { type: "" });
                                        var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                        var newF = URL.createObjectURL(f);
                                        urls.push(newF);
                                        var fileType = row.fileName.split('.').pop();
        
                                        //    check file if is image type
                                        if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                            // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                            //     +
                                            return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                        }
                                        else {
                                            return ''
        
                                        }
                                    },
                                    className: "text-center"
                                },
                                {
                                    data: null,
                                }
                            ],
                            columnDefs:
                                [{
                                    targets: [-1], render: function (a, b, data, d) {
                                        if (data.softwareUserRequest.status == "Open") {
                                            return '';
                                        }
                                        else if (data.softwareUserRequest.status == "In Progress") {
                                            return ''
                                        }
                                        else if (data.softwareUserRequest.status == "Pending Division Approval") {
                                            return '<button type="button" class="btn btn-outline-danger btn-sm delete me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> delete </button>';
                                        }
                                        else if (data.softwareUserRequest.status == "Resolved") {
                                            return ''
                                        }
                                        else if (data.softwareUserRequest.status == "Manual") {
                                            return ''
                                        }
                                        else if (data.softwareUserRequest.status == "Verified") {
                                            return ''
                                        }
                                        else if (data.softwareUserRequest.status == "Approved") {
                                            return ''
                                        }
                                        else if (data.softwareUserRequest.status == "Cancel") {
                                            return ''
                                        }
                                        else if (data.softwareUserRequest.status == "Update Request") {
                                            return '<button type="button" class="btn btn-outline-danger btn-sm delete me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> delete </button>';
                                        }
                                    },
                                    orderable: false,
                                    width: "280px"
                                }]


                        });

                        $('#upload2').find('input[name=softwareUserRequestId]').val(data.id);
                        // refresh page on modal close
                        $('#viewmodal').on('hidden.bs.modal', function () {
                            // remove id on select
                            $('select[name=softwareUserRequestId]').find('option[value=' + data.id + ']').remove();
                        });
                    }

                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#UploadList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        bootbox.confirm({
            message: "Are you sure you want to delete this image?",
            centerVertical: true,
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success btn-sm'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger btn-sm '
                }
            },
            callback: function (result) {
                if (result) {
                    $.ajax({

                        type: 'DELETE',
                        url: '/api/sur/deleteImage/' + id,
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        },
                        success: function (data) {
                            $('#pleasewait').modal('show');

                            $('#viewmodal').modal('hide');
                            setTimeout(function () {
                                toastr.success("File Successfully Deleted!");
                                // hide please wait modal
                            }, 2000);
                            setTimeout(function () {
                                $('#pleasewait').modal('hide');
                                window.location.reload();
                            }, 3000);
                        }
                    });
                }
            }
        });
    });
    $('#upload2').submit(function (e) {
        e.preventDefault();
        var formData = new FormData(this);
        $.ajax({
            url: '/api/v4/saveFile',
            type: 'POST',
            data: formData,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                $('#addimageModal').modal('hide');

                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("File Successfully Added!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    window.location.reload();
                }, 3000);
            },
            cache: false,
            contentType: false,
            processData: false,
            error: function (data) {
                toastr.error("Error Updating File")
            }
        });

    });
    $('#softwareRequestList').on('click', '.edit', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/user/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#editRequest').modal('show');
                $('#EditRequest').find('input[name="id"]').val(data.id);
                $('#EditRequest').find('select[name="softwareId"]').val(data.softwareId);
                $('#EditRequest').find('select[name="informationSystemId"]').val(data.informationSystemId);
                $('#EditRequest').find('input[name="requestFor"]').val(data.requestFor);
                $('#EditRequest').find('input[name="documentLabel"]').val(data.documentLabel);
                $('#EditRequest').find('textarea[name="description"]').val(data.description);

            }
        })
    });
    //get Information Dropdown
    $.ajax({
        type: 'GET',
        url: '/api/info/System',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name = informationSystemId]').append('<option value=""> Select System</option>');
            $.each(data, function (index, value) {
                $('select[name=informationSystemId]').append('<option value="' + value.id + '">' + value.name + '</option>');

            })
        }
    });
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/software',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=softwareId]').append('<option value=""> Select Software</option>');
            $.each(data, function (index, value) {
                $('select[name=softwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    $('#softwareRequestList').on('click', '.cancel', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/user/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#CancelRequestModal').modal('show');
                $('#cancelRequest').find('input[name="id"]').val(data.id);

            }
        })
    });
    $('#UpdateRequest').click(function (e) {
        e.preventDefault();
        var id = $('#EditRequest').find('input[name="id"]').val();
        var data = $('#EditRequest').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/editRequest/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#editRequest').modal('hide');

                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("File Successfully Deleted!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    tables.ajax.reload();
                    $('#pleasewait').modal('hide');
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#cancel').click(function (e) {
        e.preventDefault();
        var id = $('#cancelRequest').find('input[name="id"]').val();
        var data = $('#cancelRequest').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/cancelRequest/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#CancelRequestModal').modal('hide');

                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("File Successfully Deleted!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    tables.ajax.reload();
                    $('#pleasewait').modal('hide');
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#softwareRequestList').on('click', '.edit-return', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/user/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#ReturneditRequest').modal('show');
                $('#return').find('input[name="id"]').val(data.id);
                $('#return').find('select[name="softwareId"]').val(data.softwareId);
                $('#return').find('select[name="informationSystemId"]').val(data.informationSystemId);
                $('#return').find('input[name="requestFor"]').val(data.requestFor);
                $('#return').find('input[name="documentLabel"]').val(data.documentLabel);
                $('#return').find('textarea[name="description"]').val(data.description);
            }
        })
        $('#ReturnRequest').click(function (e) {
            e.preventDefault();
            var id = $('#return').find('input[name="id"]').val();
            var data = $('#return').serialize();
            // alert(id);
            $.ajax({
                type: 'PUT',
                url: '/api/software/returnRequest/' + id,
                data: data,
                headers: {
                    'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                },
                success: function (data) {
                    $('#ReturneditRequest').modal('hide');

                    $('#pleasewait').modal('show');
                    //show toastr after 3
                    setTimeout(function () {
                        toastr.success("File Successfully Deleted!");
                        // hide please wait modal
                    }, 2000);
                    setTimeout(function () {
                        window.location.reload();
                        $('#pleasewait').modal('hide');
                    }, 3000);
                },
                //if failed
                error: function (data) {
                    toastr.error("Error Canceling a Request")
                }
            })
        });
    });
    $('#softwareRequestList').on('click', '.transac', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/user/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#transactionModal').modal('show');

                var refId = $('#softwareUserRequestId').val(data.id)
                var table = $('#progReport').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertask/sf/getbyId/" + id,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "softwareUserRequestId",
                            render: function(data, type, row) {
                                return '<span class="badge shadow bg-primary">' + row.softwareUserRequest.ticket +' </span>'
                            }
                        },
                        {
                            data: "softwareUserRequest.fullName"
                        },
                        {
                            data: "softwareTaskId",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return '<span class="badge shadow bg-secondary">Requested</span>'
                                }
                                else if (data == 2) {
                                    return '<span class="badge shadow bg-info">Division Approved</span>'
                                }
                                else if (data == 3) {
                                    return '<span class="badge shadow bg-warning">Assigned</span>'
                                }
                                else if (data == 4) {
                                    return '<span class="badge shadow bg-success">Resolved</span>'
                                }
                                else if (data == 5) {
                                    return '<span class="badge shadow bg-primary">Verified</span>'
                                }
                                else if (data == 6) {
                                    return '<span class="badge shadow bg-danger">Approved</span>'
                                }
                            }
                        },
                        {
                            data: null,

                        },
                    ],
                    columnDefs:
                        [{
                            targets: [-1], render: function (a, b, data, d) {
                                if (data.softwareTask.id == 1) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 2) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 3) {
                                    return '';

                                }
                                else if (data.softwareTask.id == 4) {
                                    return '<button class="btn btn-outline-primary btn-sm view me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                                else if (data.softwareTask.id == 5) {
                                    return '<button class="btn btn-outline-primary btn-sm view me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                                else if (data.softwareTask.id == 6) {
                                    return '<button class="btn btn-outline-primary btn-sm view me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                            },
                            orderable: false,
                            width: "240px"
                        }]

                });
            }
        })
    });
    $('#progReport').on('click', '.view', function () {
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/Task/sf/get/" + id,
            success: function (data) {
                $('#transactionReportModal').modal('show');
                $('#report2').find('input[name="softwareName"]').val(data.programmerReport.softwareName);
                $('#report2').find('input[name="informationName"]').val(data.programmerReport.informationName);
                $('#report2').find('input[name="requestFor"]').val(data.programmerReport.requestFor);
                $('#report2').find('input[name="documentLabel"]').val(data.programmerReport.documentLabel);
                $('#report2').find('textarea[name="remarks"]').val(data.programmerReport.remarks);
                $('#report2').find('input[name="resulotion"]').val(data.programmerReport.resulotion);
                $('#report2').find('input[name="dateAdded"]').val(data.programmerReport.dateAdded);
                $('#report2').find('input[name="dateAssigned"]').val(data.programmerReport.dateAssigned);
                $('#report2').find('input[name="dateEnded"]').val(data.programmerReport.dateEnded);
                $('#report2').find('input[name="dateVerified"]').val(data.programmerReport.dateVerified);
                $('#report2').find('input[name="dateApproved"]').val(data.programmerReport.dateApproved);
                $('#report2').find('input[name="adminName"]').val(data.programmerReport.adminName);
                $('#report2').find('input[name="superAdminName"]').val(data.programmerReport.superAdminName);
                $('#report2').find('input[name="programmerReportId"').val(data.programmerReport.id);
                $('#report2').find('textarea[name="remarksApproval"]').val(data.programmerReport.remarksApproval);

                var progId = $('input[name="programmerReportId"]').attr('value');

                var uploadTable2 = $('#UploadList3').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + progId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            data: "remarksUploads"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],
                });

                $('#upload2').find('input[name=technicianReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=technicianReportId]').find('option[value=' + data.id + ']').remove();
                });
            }
        });
    });
}
function NewSystemRequest2() {
    $("#softwareRequestList").DataTable({
        "ajax": {
            "url": "/api/SoftwareRequest/newSystem2/Get",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "order": [[1, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                "data": "softwareUserRequest.ticket",
                render: function (data, type, row) {
                    if (data == null) {
                        return '<span class="badge bg-danger">No Ticket</span>';
                    }
                    return `<span class="badge shadow bg-primary">${(data)}</span>`
                }

            },
            { "data": "softwareUserRequest.dateAdded" },
            { "data": "softwareUserRequest.fullName" },
            {
                "data": "softwareUserRequest.isManual",
                render: function (data) {
                    if (data == 0) {
                        return 'User Request'
                    }
                    else
                        return 'Manual Request'
                }
            },
            {
                "data": "softwareUserRequest.departmentName"
            },
            {
                "data": "softwareUserRequest.softwareName",
            },

            {
                "data": "progressStatus",
                render: function (data) {
                    if (data == null) {
                        return ''
                    }
                    else
                        return '<div class="progress shadow"><div class="shadow  progress-bar" role="progressbar" aria-valuenow="' + data + '" aria-valuemin="0" aria-valuemax="' + data + '" style="width: ' + data + '%;"><span>' + data + ' %</span></div></div>'

                }
            },
            {
                "data": "softwareUserRequest.status",
                render: function (data) {
                    if (data == "Open") {
                        return '<span class="badge shadow bg-secondary">' + data + '</span>'
                    }
                    else if (data == "In Progress") {
                        return '<span class="badge shadow bg-info">' + data + '</span>'
                    }
                    else if (data == "Resolved") {
                        return '<span class="badge shadow bg-success">' + data + '</span>'
                    }
                    else if (data == "Accepts Request") {
                        return '<span class="badge shadow bg-info">In Progress</span>'
                    }
                    else if (data == "Manual") {
                        return '<span class="badge shadow bg-info">In Progress</span>'
                    }
                    else if (data == "Verified") {

                        return '<span class="badge shadow bg-primary">' + data + '</span>'
                    }
                    else if (data == "Approved") {

                        return '<span class="badge shadow bg-danger">' + data + '</span>'
                    }
                    else if (data == "Cancel") {

                        return '<span class="badge shadow bg-danger">' + data + '</span>'
                    }
                }
            },
            {
                "data": null
            }
        ],
        columnDefs:
            [{
                targets: [-1], render: function (a, b, data, d) {
                    if (data.softwareUserRequest.status == 'Resolved') {
                        return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac6 me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                            //'<button class="btn mt-2 btn-outline-success btn-sm back me-2" data-id="' + data.id + '"><i class="bi bi-person-fill"></i> Return To Technician </button>' +
                            //'<button class="btn btn-outline-success btn-sm verify mt-2 me-2" data-id="' + data.id + '"><i class="bi bi-check2-square"></i> Verify </button>';
                    }
                    else if (data.softwareUserRequest.status == 'Verified') {
                        return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac6 me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.softwareUserRequest.status == 'In Progress') {
                        return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }
                    else
                        return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac6 me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';

                },
                orderable: false,
                width: "100px"
            }]
    });
    $('#softwareRequestList').on('click', '.transac6', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#transactionModal').modal('show');

                $('#newSystem2').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                var refId = $('#newSystem2').find('#softwareUserRequestId').attr('value');
                var table = $('#progReport2').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertask/sf/getbyId/" + refId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "softwareTaskId",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return '<span class="badge shadow bg-secondary">Requested</span>'
                                }
                                else if (data == 2) {
                                    return '<span class="badge shadow bg-info">Division Apperoved</span>'
                                }
                                else if (data == 3) {
                                    return '<span class="badge shadow bg-warning">Assigned</span>'
                                }
                                else if (data == 4) {
                                    return '<span class="badge shadow bg-success">Resolved</span>'
                                }
                                else if (data == 5) {
                                    return '<span class="badge shadow bg-primary">Verified</span>'
                                }
                                else if (data == 6) {
                                    return '<span class="badge shadow bg-danger">Approved</span>'
                                }
                            }
                        },
                        {
                            data: null,

                        },
                    ],
                    columnDefs:
                        [{
                            targets: [-1], render: function (a, b, data, d) {
                                if (data.softwareTask.id == 1) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 2) {
                                    return '<button class="btn btn-outline-primary btn-sm divApproved me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                                else if (data.softwareTask.id == 3) {
                                    return '';

                                }
                                else if (data.softwareTask.id == 4) {
                                    return '<button class="btn btn-outline-primary btn-sm view2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                                else if (data.softwareTask.id == 5) {
                                    return '<button class="btn btn-outline-primary btn-sm view2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                                else if (data.softwareTask.id == 6) {
                                    return '<button class="btn btn-outline-primary btn-sm view2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                            },
                            orderable: false,
                            width: "240px"
                        }]

                });
            }
        })
    });
    $('#progReport2').on('click', '.view2', function (e) {
        e.preventDefault();
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/Task/sf/get/" + id,
            success: function (data) {
                $('#transactionReportModal').modal('show');
                $('#report3').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#report3').find('input[name="informationName"]').val(data.softwareUserRequest.informationName);
                $('#report3').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#report3').find('input[name="documentLabel"]').val(data.softwareUserRequest.documentLabel);
                $('#report3').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#report3').find('input[name="resulotion"]').val(data.programmerReport.resulotion);
                $('#report3').find('input[name="dateAdded"]').val(data.programmerReport.dateAdded);
                $('#report3').find('input[name="dateAssigned"]').val(data.programmerReport.dateAssigned);
                $('#report3').find('input[name="dateEnded"]').val(data.programmerReport.dateEnded);
                $('#report3').find('input[name="dateVerified"]').val(data.programmerReport.dateVerified);
                $('#report3').find('textarea[name="remarks"]').val(data.programmerReport.remarks);
                $('#report3').find('input[name="dateApproved"]').val(data.programmerReport.dateApproved);
                $('#report3').find('input[name="adminName"]').val(data.programmerReport.adminName);
                $('#report3').find('input[name="superAdminName"]').val(data.programmerReport.superAdminName);
                $('#report3').find('input[name="programmerName"]').val(data.programmerReport.programmerName);

                $('#report3').find('input[name="programmerReportId"').val(data.programmerReport.id);

                var progId = $('#report3').find('input[name="programmerReportId"]').attr('value');
                var uploadTable2 = $('#UploadList3').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + progId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            data: "remarksUploads"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],
                });


                // refresh page on modal close
                $('#transactionReportModal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=programmerReportId]').find('option[value=' + data.id + ']').remove();
                });
            }
        });
    });
    $('#progReport2').on('click', '.divApproved', function (e) {
        e.preventDefault();
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/Task/sf/get/" + id,
            success: function (data) {
                $('#divApprover').modal('show');
                $('#approver').find('input[name="fullName"]').val(data.softwareAcceptsRequest.fullName);
                $('#approver').find('input[name="dateAdded"]').val(data.softwareAcceptsRequest.dateAdded);
                $('#approver').find('input[name="departmentName"]').val(data.softwareAcceptsRequest.departmentName);
                $('#approver').find('input[name="divisionName"]').val(data.softwareAcceptsRequest.divisionName);
                // refresh page on modal close
                $('#divApprover').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=programmerReportId]').find('option[value=' + data.id + ']').remove();
                });
            }
        });
    });
    $('#softwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="id"]').val(data.id);
                $('#viewRequest').find('input[name="fullName"]').val(data.softwareUserRequest.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.softwareUserRequest.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.softwareUserRequest.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.softwareUserRequest.divisionName);
                $('#viewRequest').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#viewRequest').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest').find('input[name="FileName"]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#viewRequest').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                $('#progform').find('input[name="softwareName"]').val(data.softwareName);
                $('#progform').find('input[name="informationName"]').val(data.informationName);
                $('#progform').find('input[name="requestFor"]').val(data.requestFor);
                $('#progform').find('input[name="documentLabel"]').val(data.documentLabel);
                $('#progform').find('textarea[name="description"]').val(data.description);
                $('#progform').find('input[name="resulotion"]').val(data.resulotion);
                $('#progform').find('textarea[name="remarks"]').val(data.remarks);
                $('#progform').find('input[name="programmerReportId"]').val(data.id);
                $('#progform').find('input[name="dateAdded"]').val(data.dateAdded);
                $('#progform').find('input[name="programmerName"]').val(data.programmerName);
                $('#progform').find('input[name="dateAssigned"]').val(data.dateAssigned);
                $('#progform').find('input[name="dateEnded"]').val(data.dateEnded);

                var sId = $('input[name="softwareUserRequestId"]').val();
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/uploads/" + sId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],

                });
                var techId = $('input[name="programmerReportId"]').attr('value');
                var uploadTable2 = $('#progUploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + techId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                        {
                            data: "remarksUploads"
                        }
                    ],
                });
                $('#upload2').find('input[name=programmerReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=softwareUserRequestId]').find('option[value=' + data.id + ']').remove();
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    //Software
    $('#softwareRequestList').on('click', '.verify', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#verifiedModal').modal('show');
                $('#verify').find('input[name="programmerReportId"]').val(data.id);
                $('#verify').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
            }
        })
        // alert(data);
    });
    $('#verified').click(function (e) {
        e.preventDefault();
        var id = $('#verify').find('input[name="softwareUserRequestId"]').val();
        var data = $('#verify').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/Verified/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#verifiedModal').modal('hide');

                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {
                //    toastr.success("File Successfully Deleted!");
                //    // hide please wait modal
                //}, 2000);
                //setTimeout(function () {
                //    tables.ajax.reload();
                //    $('#pleasewait').modal('hide');
                //}, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#verified').click(function (e) {
        e.preventDefault();
        var id = $('#verify').find('input[name="programmerReportId"]').val();
        var data = $('#verify').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/v5/Verifieds/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#verifiedModal').modal('hide');

                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {
                //    toastr.success("File Successfully Deleted!");
                //    // hide please wait modal
                //}, 2000);
                //setTimeout(function () {
                //    tables.ajax.reload();
                //    $('#pleasewait').modal('hide');
                //}, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#verified').click(function (e) {
        e.preventDefault();
        var data = $('#verify').serialize();
        $.ajax({
            url: '/api/verified/v2/save',
            type: 'POST',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                /*show please wait modal*/
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {

                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    location.reload();

                }, 3000);
            },
            error: function (data) {
                toastr.error("Error Updating File")
            }
        });
    });

    $('#softwareRequestList').on('click', '.back', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#BackModal').modal('show');
                $('#resolved').find('input[name="programmerReportId"]').val(data.id);
                $('#resolved').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);

            }
        })
        // alert(data);
    });
    $('#return').click(function (e) {
        e.preventDefault();
        var id = $('#resolved').find('input[name="softwareUserRequestId"]').val();
        var data = $('#resolved').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/AssignedAccepted/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#BackModal').modal('hide');

                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {
                //    toastr.success("File Successfully Deleted!");
                //    // hide please wait modal
                //}, 2000);
                //setTimeout(function () {
                //    tables.ajax.reload();
                //    $('#pleasewait').modal('hide');
                //}, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#return').click(function (e) {
        e.preventDefault();
        var id = $('#resolved').find('input[name="programmerReportId"]').val();
        var data = $('#resolved').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/return/NewSystem/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#BackModal').modal('hide');

                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {
                //    toastr.success("File Successfully Deleted!");
                //    // hide please wait modal
                //}, 2000);
                //setTimeout(function () {
                //    tables.ajax.reload();
                //    $('#pleasewait').modal('hide');
                //}, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });


    /*UserView*/
    $("#softwareRequestList2").DataTable({
        "ajax": {
            "url": "/api/SoftwareRequest/newSystem2/Get",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                "data": "softwareUserRequest.ticket",
                render: function (data, type, row) {
                    if (data == null) {
                        return '<span class="badge bg-danger">No Ticket</span>';
                    }
                    return `<span class="badge shadow bg-primary">${(data)}</span>`
                }

            },
            { "data": "softwareUserRequest.dateAdded" },
            { "data": "softwareUserRequest.fullName" },
            {
                "data": "softwareUserRequest.isManual",
                render: function (data) {
                    if (data == 0) {
                        return 'User Request'
                    }
                    else
                        return 'Manual Request'
                }
            },
            {
                "data": "softwareUserRequest.departmentName"
            },
            {
                "data": "softwareUserRequest.softwareName",
            },

            {
                "data": "progressStatus",
                render: function (data) {
                    if (data == null) {
                        return ''
                    }
                    else
                        return '<div class="progress shadow"><div class="shadow  progress-bar" role="progressbar" aria-valuenow="' + data + '" aria-valuemin="0" aria-valuemax="' + data + '" style="width: ' + data + '%;"><span>' + data + ' %</span></div></div>'

                }
            },
            {
                "data": "softwareUserRequest.status",
                render: function (data) {
                    if (data == "Open") {
                        return '<span class="badge shadow bg-secondary">' + data + '</span>'
                    }
                    else if (data == "In Progress") {
                        return '<span class="badge shadow bg-info">' + data + '</span>'
                    }
                    else if (data == "Resolved") {
                        return '<span class="badge shadow bg-success">' + data + '</span>'
                    }
                    else if (data == "Accepts Request") {
                        return '<span class="badge shadow bg-info">In Progress</span>'
                    }
                    else if (data == "Manual") {
                        return '<span class="badge shadow bg-info">In Progress</span>'
                    }
                    else if (data == "Verified") {

                        return '<span class="badge shadow bg-primary">' + data + '</span>'
                    }
                    else if (data == "Approved") {

                        return '<span class="badge shadow bg-danger">' + data + '</span>'
                    }
                    else if (data == "Cancel") {

                        return '<span class="badge shadow bg-danger">' + data + '</span>'
                    }
                }
            },
            {
                "data": null
            }
        ],
        columnDefs:
            [{
                targets: [-1], render: function (a, b, data, d) {
                    if (data.softwareUserRequest.status == 'Resolved') {
                        return '<button class="btn btn-outline-info shadow btn-sm info2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary shadow btn-sm transac2 me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.softwareUserRequest.status == 'Verified') {
                        return '<button class="btn btn-outline-info shadow btn-sm info2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary shadow btn-sm transac2 me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';

                    }
                    else if (data.softwareUserRequest.status == 'In Progress') {
                        return '<button class="btn btn-outline-info shadow btn-sm info2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary shadow btn-sm transac2 me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';

                    }
                    else
                        return '<button class="btn btn-outline-info shadow btn-sm info2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary shadow btn-sm transac2 me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';


                },
                orderable: false,
                width: "200px"
            }]
    });
    $('#softwareRequestList2').on('click', '.info2', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal2').modal('show');
                $('#viewRequest').find('input[name="id"]').val(data.id);
                $('#viewRequest').find('input[name="fullName"]').val(data.softwareUserRequest.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.softwareUserRequest.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.softwareUserRequest.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.softwareUserRequest.divisionName);
                $('#viewRequest').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#viewRequest').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest').find('input[name="FileName"]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#viewRequest').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                $('#progform').find('input[name="softwareName"]').val(data.softwareName);
                $('#progform').find('input[name="informationName"]').val(data.informationName);
                $('#progform').find('input[name="requestFor"]').val(data.requestFor);
                $('#progform').find('input[name="documentLabel"]').val(data.documentLabel);
                $('#progform').find('textarea[name="description"]').val(data.description);
                $('#progform').find('input[name="resulotion"]').val(data.resulotion);
                $('#progform').find('textarea[name="remarks"]').val(data.remarks);
                $('#progform').find('input[name="programmerReportId"]').val(data.id);
                $('#progform').find('input[name="dateAdded"]').val(data.dateAdded);
                $('#progform').find('input[name="programmerName"]').val(data.programmerName);
                $('#progform').find('input[name="dateAssigned"]').val(data.dateAssigned);
                $('#progform').find('input[name="dateEnded"]').val(data.dateEnded);

                var sId = $('input[name="softwareUserRequestId"]').val();
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/uploads/" + sId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],

                });
                var techId = $('input[name="programmerReportId"]').attr('value');
                var uploadTable2 = $('#progUploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + techId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                        {
                            data: "remarksUploads"
                        }
                    ],
                });
                $('#upload2').find('input[name=programmerReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=softwareUserRequestId]').find('option[value=' + data.id + ']').remove();
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#softwareRequestList2').on('click', '.transac2', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#transactionModal').modal('show');

                $('#newSystem2').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                var refId = $('#newSystem2').find('#softwareUserRequestId').attr('value');
                var table = $('#progReport2').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertask/sf/getbyId/" + refId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "softwareTaskId",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return '<span class="badge shadow bg-secondary">Requested</span>'
                                }
                                else if (data == 2) {
                                    return '<span class="badge shadow bg-warning">Division Approved</span>'
                                }
                                else if (data == 3) {
                                    return '<span class="badge shadow bg-info">Assigned</span>'
                                }
                                else if (data == 4) {
                                    return '<span class="badge shadow bg-success">Resolved</span>'
                                }
                                else if (data == 5) {
                                    return '<span class="badge shadow bg-primary">Verified</span>'
                                }
                                else if (data == 6) {
                                    return '<span class="badge shadow bg-danger">Approved</span>'
                                }
                            }
                        },
                        {
                            data: null,

                        },
                    ],
                    columnDefs:
                        [{
                            targets: [-1], render: function (a, b, data, d) {
                                if (data.softwareTask.id == 1) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 2) {
                                    return '<button class="btn btn-outline-primary btn-sm divApproved me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                                else if (data.softwareTask.id == 3) {
                                    return '';

                                }
                                else if (data.softwareTask.id == 4) {
                                    return '<button class="btn btn-outline-primary btn-sm view2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                                else if (data.softwareTask.id == 5) {
                                    return '<button class="btn btn-outline-primary btn-sm view2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                                else if (data.softwareTask.id == 6) {
                                    return '<button class="btn btn-outline-primary btn-sm view2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                            },
                            orderable: false,
                            width: "240px"
                        }]

                });
            }
        })
    });
    $('#progReport2').on('click', '.view2', function (e) {
        e.preventDefault();
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/Task/sf/get/" + id,
            success: function (data) {
                $('#transactionReportModal').modal('show');
                $('#report3').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#report3').find('input[name="informationName"]').val(data.softwareUserRequest.informationName);
                $('#report3').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#report3').find('input[name="documentLabel"]').val(data.softwareUserRequest.documentLabel);
                $('#report3').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#report3').find('input[name="resulotion"]').val(data.programmerReport.resulotion);
                $('#report3').find('input[name="dateAdded"]').val(data.programmerReport.dateAdded);
                $('#report3').find('input[name="dateAssigned"]').val(data.programmerReport.dateAssigned);
                $('#report3').find('input[name="dateEnded"]').val(data.programmerReport.dateEnded);
                $('#report3').find('input[name="dateVerified"]').val(data.programmerReport.dateVerified);
                $('#report3').find('textarea[name="remarks"]').val(data.programmerReport.remarks);
                $('#report3').find('input[name="dateApproved"]').val(data.programmerReport.dateApproved);
                $('#report3').find('input[name="adminName"]').val(data.programmerReport.adminName);
                $('#report3').find('input[name="superAdminName"]').val(data.programmerReport.superAdminName);
                $('#report3').find('input[name="programmerName"]').val(data.programmerReport.softwareTechnicianName);
                $('#report2').find('textarea[name="remarksApproval"]').val(data.programmerReport.remarksApproval);

                $('#report3').find('input[name="programmerReportId"').val(data.programmerReport.id);

                var progId = $('#report3').find('input[name="programmerReportId"]').attr('value');
                var uploadTable2 = $('#UploadList3').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + progId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            data: "remarksUploads"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],
                });


                // refresh page on modal close
                $('#transactionReportModal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=programmerReportId]').find('option[value=' + data.id + ']').remove();
                });
            }
        });
    });
    $('#progReport2').on('click', '.divApproved', function (e) {
        e.preventDefault();
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/Task/sf/get/" + id,
            success: function (data) {
                $('#divApprover').modal('show');
                $('#approver').find('input[name="fullName"]').val(data.softwareAcceptsRequest.fullName);
                $('#approver').find('input[name="dateAdded"]').val(data.softwareAcceptsRequest.dateAdded);
                $('#approver').find('input[name="departmentName"]').val(data.softwareAcceptsRequest.departmentName);
                $('#approver').find('input[name="divisionName"]').val(data.softwareAcceptsRequest.divisionName);
                // refresh page on modal close
                $('#divApprover').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=programmerReportId]').find('option[value=' + data.id + ']').remove();
                });
            }
        });
    });
    /*SuperAdmin*/
    $("#softwareRequestList3").DataTable({
        "ajax": {
            "url": "/api/SoftwareRequest/newSystem2/Get",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                "data": "softwareUserRequest.ticket",
                render: function (data, type, row) {
                    if (data == null) {
                        return '<span class="badge bg-danger">No Ticket</span>';
                    }
                    return `<span class="badge shadow bg-primary">${(data)}</span>`
                }

            },
            { "data": "softwareUserRequest.dateAdded" },
            { "data": "softwareUserRequest.fullName" },
            {
                "data": "softwareUserRequest.isManual",
                render: function (data) {
                    if (data == 0) {
                        return 'User Request'
                    }
                    else
                        return 'Manual Request'
                }
            },
            {
                "data": "softwareUserRequest.departmentName"
            },
            {
                "data": "softwareUserRequest.softwareName",
            },

            {
                "data": "progressStatus",
                render: function (data) {
                    if (data == null) {
                        return ''
                    }
                    else
                        return '<div class="progress shadow"><div class="shadow  progress-bar" role="progressbar" aria-valuenow="' + data + '" aria-valuemin="0" aria-valuemax="' + data + '" style="width: ' + data + '%;"><span>' + data + ' %</span></div></div>'

                }
            },
            {
                "data": "softwareUserRequest.status",
                render: function (data) {
                    if (data == "Open") {
                        return '<span class="badge shadow bg-secondary">' + data + '</span>'
                    }
                    else if (data == "In Progress") {
                        return '<span class="badge shadow bg-info">' + data + '</span>'
                    }
                    else if (data == "Resolved") {
                        return '<span class="badge shadow bg-success">' + data + '</span>'
                    }
                    else if (data == "Accepts Request") {
                        return '<span class="badge shadow bg-info">In Progress</span>'
                    }
                    else if (data == "Manual") {
                        return '<span class="badge shadow bg-info">In Progress</span>'
                    }
                    else if (data == "Verified") {

                        return '<span class="badge shadow bg-primary">' + data + '</span>'
                    }
                    else if (data == "Approved") {

                        return '<span class="badge shadow bg-danger">' + data + '</span>'
                    }
                    else if (data == "Cancel") {

                        return '<span class="badge shadow bg-danger">' + data + '</span>'
                    }
                }
            },
            {
                "data": null
            }
        ],
        columnDefs:
            [{
                targets: [-1], render: function (a, b, data, d) {
                    if (data.softwareUserRequest.status == 'Resolved') {
                        return '<button class="btn btn-outline-info shadow btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }
                    else if (data.softwareUserRequest.status == 'Verified') {
                        return '<button class="btn btn-outline-info shadow btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success shadow btn-sm approve3 me-2" data-id="' + data.id + '"><i class="bi bi-check2-square"></i> Approve </button>';

                    }
                    else if (data.softwareUserRequest.status == 'In Progress') {
                        return '<button class="btn btn-outline-info shadow btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }
                    else if (data.softwareUserRequest.status == 'Approved') {
                        return '<button class="btn btn-outline-info shadow btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' ;
                    }
                    else
                        return '<button class="btn btn-outline-info shadow btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';

                },
                orderable: false,
                width: "200px"
            }]
    });
    $('#softwareRequestList3').on('click', '.transac8', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#transactionModal10').modal('show');
                $('#newSystem2').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                var refId = $('#newSystem2').find('#softwareUserRequestId').attr('value');
                var table = $('#progReport10').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertask/sf/getbyId/" + refId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "softwareTaskId",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return '<span class="badge shadow bg-secondary">Requested</span>'
                                }
                                else if (data == 2) {
                                    return '<span class="badge shadow bg-info">Division Apperoved</span>'
                                }
                                else if (data == 3) {
                                    return '<span class="badge shadow bg-warning">Assigned</span>'
                                }
                                else if (data == 4) {
                                    return '<span class="badge shadow bg-success">Resolved</span>'
                                }
                                else if (data == 5) {
                                    return '<span class="badge shadow bg-primary">Verified</span>'
                                }
                                else if (data == 6) {
                                    return '<span class="badge shadow bg-danger">Approved</span>'
                                }
                            }
                        },
                        {
                            data: null,

                        },
                    ],
                    columnDefs:
                        [{
                            targets: [-1], render: function (a, b, data, d) {
                                if (data.softwareTask.id == 1) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 2) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 3) {
                                    return '';

                                }
                                else if (data.softwareTask.id == 4) {
                                    return '<button class="btn btn-outline-primary btn-sm view9 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                                else if (data.softwareTask.id == 5) {
                                    return '<button class="btn btn-outline-primary btn-sm view9 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                                else if (data.softwareTask.id == 6) {
                                    return '<button class="btn btn-outline-primary btn-sm view9 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                            },
                            orderable: false,
                            width: "240px"
                        }]

                });
            }
        })
    });
    $('#progReport10').on('click', '.view9', function (e) {
        e.preventDefault();
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/Task/sf/get/" + id,
            success: function (data) {
                $('#transactionReportModal10').modal('show');
                $('#report9').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#report9').find('input[name="informationName"]').val(data.softwareUserRequest.informationName);
                $('#report9').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#report9').find('input[name="documentLabel"]').val(data.softwareUserRequest.documentLabel);
                $('#report9').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#report9').find('input[name="resulotion"]').val(data.programmerReport.resulotion);
                $('#report9').find('input[name="dateAdded"]').val(data.programmerReport.dateAdded);
                $('#report9').find('input[name="dateAssigned"]').val(data.programmerReport.dateAssigned);
                $('#report9').find('input[name="dateEnded"]').val(data.programmerReport.dateEnded);
                $('#report9').find('input[name="dateVerified"]').val(data.programmerReport.dateVerified);
                $('#report9').find('textarea[name="remarks"]').val(data.programmerReport.remarks);
                $('#report9').find('input[name="dateApproved"]').val(data.programmerReport.dateApproved);
                $('#report9').find('input[name="adminName"]').val(data.programmerReport.adminName);
                $('#report9').find('input[name="superAdminName"]').val(data.programmerReport.superAdminName);
                $('#report9').find('input[name="programmerName"]').val(data.programmerReport.programmerName);

                $('#report9').find('input[name="programmerReportId"').val(data.programmerReport.id);

                var progId = $('#report9').find('input[name="programmerReportId"]').attr('value');
                var uploadTable2 = $('#UploadList5').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + progId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            data: "remarksUploads"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],
                });


                // refresh page on modal close
                $('#transactionReportModal10').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=programmerReportId]').find('option[value=' + data.id + ']').remove();
                });
            }
        });
    });


    $('#softwareRequestList3').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal5').modal('show');
                $('#viewRequest').find('input[name="id"]').val(data.id);
                $('#viewRequest').find('input[name="fullName"]').val(data.softwareUserRequest.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.softwareUserRequest.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.softwareUserRequest.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.softwareUserRequest.divisionName);
                $('#viewRequest').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#viewRequest').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest').find('input[name="FileName"]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#viewRequest').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                $('#progform').find('input[name="softwareName"]').val(data.softwareName);
                $('#progform').find('input[name="informationName"]').val(data.informationName);
                $('#progform').find('input[name="requestFor"]').val(data.requestFor);
                $('#progform').find('input[name="documentLabel"]').val(data.documentLabel);
                $('#progform').find('textarea[name="description"]').val(data.description);
                $('#progform').find('input[name="resulotion"]').val(data.resulotion);
                $('#progform').find('textarea[name="remarks"]').val(data.remarks);
                $('#progform').find('input[name="programmerReportId"]').val(data.id);
                $('#progform').find('input[name="dateAdded"]').val(data.dateAdded);
                $('#progform').find('input[name="programmerName"]').val(data.programmerName);
                $('#progform').find('input[name="dateAssigned"]').val(data.dateAssigned);
                $('#progform').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#progform').find('input[name="dateVerified"]').val(data.dateVerified);
                $('#progform').find('input[name="adminName"]').val(data.adminName);

                var sId = $('input[name="softwareUserRequestId"]').val();
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/uploads/" + sId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],

                });
                var techId = $('input[name="programmerReportId"]').attr('value');
                var uploadTable2 = $('#progUploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + techId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            data: "remarksUploads"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },

                    ],
                });
                $('#upload2').find('input[name=programmerReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=softwareUserRequestId]').find('option[value=' + data.id + ']').remove();
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#softwareRequestList3').on('click', '.approve3', function (e) {
        e.preventDefault();
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#approvedModal').modal('show');
                $('#approve').find('input[name="programmerReportId"]').val(data.id);
                $('#approve').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#btnapprovedModal').click(function (e) {
        e.preventDefault();
        var data = $('#approve').serialize();
        $.ajax({
            url: '/api/approved/v2/save',
            type: 'POST',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                //show please wait modal
                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {

                //    // hide please wait modal

                //}, 2000);
                //setTimeout(function () {
                //    location.reload();
                //    $('#upload2')[0].reset();
                //}, 3000);
            },
            error: function (data) {
                toastr.error("Error Updating File")
            }
        });
    });

    $('#btnapprovedModal').click(function (e) {
        e.preventDefault();
        var id = $('#approve').find('input[name="softwareUserRequestId"]').val();
        var data = $('#approve').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/Approved/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //$('#assignToMe').modal('hide');

                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {
                //    toastr.success("File Successfully assigned!");
                //    // hide please wait modal
                //}, 2000);
                //setTimeout(function () {
                //    window.location.href = "/SoftwareRequest/Index";
                //    $('#pleasewait').modal('hide');
                //}, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#btnapprovedModal').click(function (e) {
        e.preventDefault();
        var id = $('#approve').find('input[name="programmerReportId"]').val();
        var data = $('#approve').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/v5/Approved/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#approvedModal').modal('hide');

                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("File Successfully assigned!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                    $('#pleasewait').modal('hide');
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
}
function AcceptedSoftware() {
    var divisionTable;
  divisionTable = $("#softwareRequestList").DataTable({
        "ajax": {
            "url": "/api/v4/softwareRequest/Get",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        // "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        
        // "searching" : " true",
        // "searchDelay" : 1000,
        // order by desc dateuploaded
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [
            {
                data: "ticket",
                render: function (data) {
                    return '<span class="shadow badge bg-primary">' + data + '</span>'
                },
            },
            { data: "dateAdded" },
            { data: "fullName" },
            { data: "softwareName" },
            {
                data: "status", render: function (data, type, row) {
                    if (data == "Open") {
                        return '<span class="badge  bg-open">Open</span>'
                    }
                    else if (data == "Pending Division Approval") {
                        return '<span class="badge  bg-secondary">Returned Request</span>'
                    }
                    else if (data == "Manual") {
                        return '<span class="badge  bg-info">In Progress</span>'
                    }
                    else if (data == "In Progress") {
                        return '<span class="badge bg-info">In Progress</span>'
                    }
                    else if (data == "Resolved") {
                        return '<span class="badge bg-success">Resolved</span>'
                    }
                    else if (data == "Cancel") {
                        return '<span class="badge  bg-danger">Cancel</span>'
                    }
                    else if (data == "Verified") {
                        return '<span class="badge  bg-primary">' + data + '</span>'
                    }
                    else if (data == "Approved") {
                        return '<span class="badge  bg-primary">' + data + '</span>'
                    }
                    else
                        return '<span class="badge bg-secondary">Open</span>'
                }
            },
            {
                data: null,
            },
        ],
        columnDefs:
            [{
                targets: [-1], render: function (a, b, data, d) {
                    if (data.status == "Accept") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';


                    }
                    else if (data.status == "In Progress") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';


                    }
                    else if (data.status == "Open") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success btn-sm back " data-id="' + data.id + '"><i class="bi bi-check2"></i> Return To User </button>';

                    }
                    else if (data.status == "Manual") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.status == "Accepts Request") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';


                    }
                    else if (data.status == "Resolved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';


                    }
                    else if (data.status == "Verified") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';


                    }
                    else if (data.status == "Approved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';

                    }
                    else if (data.status == "Cancel") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }
                    else
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                },
                orderable: false,
                width: "210px"
            }]


    });
    setInterval (function () {
        divisionTable.ajax.reload();
    }, 10000);

    $('#softwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Approver/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="id"]').val(data.id);
                $('#viewRequest').find('input[name="ticket"]').val(data.ticket);
                $('#viewRequest').find('input[name="dateAdded"]').val(data.dateAdded);
                $('#viewRequest').find('input[name="fullName"]').val(data.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.divisionName);
                $('#viewRequest').find('input[name="softwareName"]').val(data.softwareName);
                $('#viewRequest').find('input[name="requestFor"]').val(data.requestFor);
                $('#viewRequest').find('input[name="informationName"]').val(data.informationName);

                $('#viewRequest').find('input[name="FileName"]').val(data.requestFor);
                $('#viewRequest').find('textarea[name="description"]').val(data.description);
                $.ajax({
                    type: 'GET',
                    url: '/api/v2/Approver/getbyId/' + id,
                    success: function (data, row) {
                        $('#addImage').find('input[name="id"]').val(data.id);

                        if (data.status == "Open")
                            $('.update-image').prop('disabled', false)

                        else if (data.status == "In Progress")
                            $('.update-image').prop('disabled', true)

                        else if (data.status == "Accepts Request")
                            $('.update-image').prop('disabled', true)

                        else if (data.status == "Resolved")
                            $('.update-image').prop('disabled', true)

                        else if (data.status == "Verified")
                            $('.update-image').prop('disabled', true)

                        else if (data.status == "Approved")
                            $('.update-image').prop('disabled', true)
                        else if (data.status == "Cancel")
                            $('.update-image').prop('disabled', true)
                        else
                            $('.update-image').prop('disabled', false)


                        var uploadTable = $('#UploadList').DataTable({
                            destroy: true,

                            ajax: {
                                url: "/api/v2/uploads/" + id,
                                dataSrc: '',
                                headers: {
                                    "Authorization": "Bearer " + localStorage.getItem('access_token')
                                }
                            },
                            searching: false,
                            ordering: false,
                            columns: [
                                {
                                    data: "dateAdded"
                                },
                                {
                                    data: "documentBlob",
                                    render: function (data, type, row, meta) {
                                        var fileType = row.fileName.split('.').pop();
                                        if (fileType == 'pdf') {
                                            return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                        } else if (fileType == 'doc' || fileType == 'docx') {
                                            return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                        } else if (fileType == 'xls' || fileType == 'xlsx') {
                                            return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                        } else if (fileType == 'ppt' || fileType == 'pptx') {
                                            return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                        } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                            return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                        } else {
                                            return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                        }
        
                                    },
                                    className: "text-center"
        
                                },
                                {
                                    // download link by using anchor link only
                                    data: "documentBlob",
                                    render: function (data, type, row) {
                                        var f = new Blob([s2ab(atob(data))], { type: "" });
                                        var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                        var newF = URL.createObjectURL(f);
                                        urls.push(newF);
                                        var fileType = row.fileName.split('.').pop();
        
                                        //    check file if is image type
                                        if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                            // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                            //     +
                                            return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                        }
                                        else {
                                            return ''
        
                                        }
                                    },
                                    className: "text-center"
                                },
                            ],

                        });

                        $('#upload2').find('input[name=hardwareUserRequestId]').val(data.id);
                        // refresh page on modal close
                        $('#viewmodal').on('hidden.bs.modal', function () {
                            // remove id on select
                            $('select[name=hardwareUserRequestId]').find('option[value=' + data.id + ']').remove();
                        });
                    }

                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#softwareRequestList').on('click', '.back', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Approver/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#backModal').modal('show');
                $('#accepts2').find('input[name="id"]').val(data.id);

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#BtnReturn').click(function (e) {
        e.preventDefault();

        var id = $('#accepts2').find('input[name="id"]').val();
        var data = $('#accepts2').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/acceptsReturn/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                console.log(data.id);
                $('#pleasewait').modal('show');
                toastr.success("File Successfully Added!");
                $('#backModal').modal('hide');
                setTimeout(function () {

                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    window.location.reload();
                }, 3000);
            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });


    $('#softwareRequestList').on('click', '.transac', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Approver/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#transactionModal').modal('show');

                var refId = $('#softwareUserRequestId').val(data.id)
                var table = $('#progReport').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertask/sf/getbyId/" + id,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "softwareTaskId",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return '<span class="badge shadow bg-secondary">Requested</span>'
                                }
                                else if (data == 2) {
                                    return '<span class="badge shadow bg-info">Division Approved</span>'
                                }
                                else if (data == 3) {
                                    return '<span class="badge shadow bg-warning">Assigned</span>'
                                }
                                else if (data == 4) {
                                    return '<span class="badge shadow bg-success">Resolved</span>'
                                }
                                else if (data == 5) {
                                    return '<span class="badge shadow bg-primary">Verified</span>'
                                }
                                else if (data == 6) {
                                    return '<span class="badge shadow bg-danger">Approved</span>'
                                }
                            }
                        },
                        {
                            data: null,

                        },
                    ],
                    columnDefs:
                        [{
                            targets: [-1], render: function (a, b, data, d) {
                                if (data.softwareTask.id == 1) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 2) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 3) {
                                    return '';

                                }
                                else if (data.softwareTask.id == 4) {
                                    return '<button class="btn btn-outline-primary btn-sm view me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                                else if (data.softwareTask.id == 5) {
                                    return '<button class="btn btn-outline-primary btn-sm view me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                                else if (data.softwareTask.id == 6) {
                                    return '<button class="btn btn-outline-primary btn-sm view me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                            },
                            orderable: false,
                            width: "240px"
                        }]

                });
            }
        })
    });
    $('#progReport').on('click', '.view', function () {
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/Task/sf/get/" + id,
            success: function (data) {
                $('#transactionReportModal').modal('show');
                $('#report2').find('input[name="softwareName"]').val(data.programmerReport.softwareName);
                $('#report2').find('input[name="informationName"]').val(data.programmerReport.informationName);
                $('#report2').find('input[name="requestFor"]').val(data.programmerReport.requestFor);
                $('#report2').find('input[name="documentLabel"]').val(data.programmerReport.documentLabel);
                $('#report2').find('textarea[name="remarks"]').val(data.programmerReport.remarks);
                $('#report2').find('input[name="resulotion"]').val(data.programmerReport.resulotion);
                $('#report2').find('input[name="dateAdded"]').val(data.programmerReport.dateAdded);
                $('#report2').find('input[name="dateAssigned"]').val(data.programmerReport.dateAssigned);
                $('#report2').find('input[name="dateEnded"]').val(data.programmerReport.dateEnded);
                $('#report2').find('input[name="dateVerified"]').val(data.programmerReport.dateVerified);
                $('#report2').find('input[name="dateApproved"]').val(data.programmerReport.dateApproved);
                $('#report2').find('input[name="adminName"]').val(data.programmerReport.adminName);
                $('#report2').find('input[name="superAdminName"]').val(data.programmerReport.superAdminName);
                $('#report2').find('input[name="programmerReportId"').val(data.programmerReport.id);
                $('#report2').find('textarea[name="remarksApproval"]').val(data.programmerReport.remarksApproval);

                var progId = $('input[name="programmerReportId"]').attr('value');

                var uploadTable2 = $('#UploadList3').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + progId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            data: "remarksUploads"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],
                });

                $('#upload2').find('input[name=technicianReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=technicianReportId]').find('option[value=' + data.id + ']').remove();
                });
            }
        });
    });
}
function AcceptlistSoftware() {
    var AcceptTable;
    AcceptTable =  $("#softwareRequestList").DataTable({
        "ajax": {
            "url": "/api/softwareRequest/Get",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        // "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        
        // "searching" : " true",
        // "searchDelay" : 1000,
        // order by desc dateuploaded
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [
            {
                data: "ticket",
                render: function (data) {
                    return '<span class="shadow badge bg-primary">' + data + '</span>'
                },
            },
            { data: "dateAdded" },
            { data: "fullName" },
            {
                data: "softwareId",
                render: function (data, type, row) {
                    return row.software.name;
                }
            },
            {
                data: "status",
                render: function (data, type, row) {
                    if (row.status == 'Open') {
                        return '<span class="badge  bg-open">' + data +'</span>'
                    }
                    else if (row.status == 'Pending Division Approval') {
                        return '<span class="badge  bg-secondary"> ' + data +'</span>'
                    }
                    else if (row.status == 'Accept') {
                        return '<span class="badge bg-warning">' +data+ '</span>'
                    }
                    else if (row.status == 'In Progress') {
                        return '<span class="badge bg-warning">' + data + '</span>'
                    }
                    else if (row.status == 'Manual') {
                        return '<span class="badge bg-warning">' + data + '</span>'
                    }
                    else if (row.status == 'Update Request') {
                        return '<span class="badge bg-warning">' + data + '</span>'
                    }
                    else if (row.status == 'Verified') {
                        return '<span class="badge bg-warning">' + data + '</span>'
                    }
                    else if (row.status == 'Approved') {
                        return '<span class="badge bg-warning">' + data + '</span>'
                    }
                    else if (row.status == 'Cancel') {
                        return '<span class="badge bg-warning">' + data + '</span>'
                    }
                    else
                        return '<span class="badge bg-danger">Open</span>'
                }
            },
            {
                data: null,
            },
        ],
        columnDefs:
            [{
                targets: [-1], render: function (a, b, data, d) {
                    if (data.status == "Pending Division Approval") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success btn-sm report me-2" data-id="' + data.id + '"><i class="bi bi-check2"></i> Approve </button>';
                    }
                    else if (data.status == "In Progress") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success btn-sm report me-2" data-id="' + data.id + '"><i class="bi bi-card-checklist"></i> Report </button>';
                    }
                    else if (data.status == "Manual") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-secondary btn-sm edit mt-2 me-2" data-id="' + data.id + '"><i class="bi bi-pencil-square"></i> Edit </button>';
                    }
                    else if (data.status == "") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-danger btn-sm accept me-2" data-id="' + data.id + '"><i class="bi bi-check"></i> Accept </button>';
                    }
                    else if (data.status == "Update Request") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success btn-sm return-approved me-2" data-id="' + data.id + '"><i class="bi bi-check2"></i> Approve </button>';
                    }
                    else if (data.status == "Resolved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.status == "Verified") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-dark  btn-sm print me-2" data-id="' + data.id + '"><i class="bi bi-gear"></i> Print </button>';
                    }
                    else if (data.status == "Approved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-dark btn-sm print me-2" data-id="' + data.id + '"><i class="bi bi-gear"></i> Print </button>';
                    }
                    else if (data.status == "Cancel") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }

                },
                orderable: false,
                width: "180px"
            }]
    });
    setInterval (function () {
        AcceptTable.ajax.reload();
    }, 10000);
    $('#softwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Approver/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="softwareUserRequestId"]').val(data.id);
                $('#viewRequest').find('input[name="ticket"]').val(data.ticket);
                $('#viewRequest').find('input[name="dateAdded"]').val(data.dateAdded);
                $('#viewRequest').find('input[name="fullName"]').val(data.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.divisionName);
                $('#viewRequest').find('input[name="softwareName"]').val(data.softwareName);
                $('#viewRequest').find('input[name="informationName"]').val(data.informationName);
                $('#viewRequest').find('input[name="requestFor"]').val(data.requestFor);
                $('#viewRequest').find('input[name="FileName"]').val(data.requestFor);
                $('#viewRequest').find('textarea[name="description"]').val(data.description);
                $.ajax({
                    type: 'GET',
                    url: '/api/v2/Approver/getbyId/' + id,
                    success: function (data, row) {
                        $('#addImage').find('input[name="id"]').val(data.id);

                        if (data.status == "Open")
                            $('.update-image').prop('disabled', false)

                        else if (data.status == "In Progress")
                            $('.update-image').prop('disabled', true)

                        else if (data.status == "Accepts Request")
                            $('.update-image').prop('disabled', true)

                        else if (data.status == "Resolved")
                            $('.update-image').prop('disabled', true)

                        else if (data.status == "Verified")
                            $('.update-image').prop('disabled', true)

                        else if (data.status == "Approved")
                            $('.update-image').prop('disabled', true)
                        else if (data.status == "Cancel")
                            $('.update-image').prop('disabled', true)
                        else
                            $('.update-image').prop('disabled', false)


                        var uploadTable = $('#UploadList').DataTable({
                            destroy: true,

                            ajax: {
                                url: "/api/v2/uploads/" + id,
                                dataSrc: '',
                                headers: {
                                    "Authorization": "Bearer " + localStorage.getItem('access_token')
                                }
                            },
                            searching: false,
                            ordering: false,
                            columns: [
                                {
                                    data: "dateAdded"
                                },
                                {
                                    data: "documentBlob",
                                    render: function (data, type, row, meta) {
                                        var fileType = row.fileName.split('.').pop();
                                        if (fileType == 'pdf') {
                                            return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                        } else if (fileType == 'doc' || fileType == 'docx') {
                                            return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                        } else if (fileType == 'xls' || fileType == 'xlsx') {
                                            return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                        } else if (fileType == 'ppt' || fileType == 'pptx') {
                                            return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                        } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                            return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                        } else {
                                            return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                        }

                                    },
                                    className: "text-center"

                                },
                                {
                                    // download link by using anchor link only
                                    data: "documentBlob",
                                    render: function (data, type, row) {
                                        var f = new Blob([s2ab(atob(data))], { type: "" });
                                        var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                        var newF = URL.createObjectURL(f);
                                        urls.push(newF);
                                        var fileType = row.fileName.split('.').pop();

                                        //    check file if is image type
                                        if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                            // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                            //     +
                                            return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                        }
                                        else {
                                            return ''

                                        }
                                    },
                                    className: "text-center"
                                },
                            ],

                        });

                        $('#upload2').find('input[name=softwareUserRequestId]').val(data.id);
                        // refresh page on modal close
                        $('#viewmodal').on('hidden.bs.modal', function () {
                            // remove id on select
                            $('select[name=softwareUserRequestId]').find('option[value=' + data.id + ']').remove();
                        });
                    }

                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $.ajax({
        type: 'GET',
        url: '/api/get/user/division',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {

            console.log(data);
        },

    });
    $('#softwareRequestList').on('click', '.report', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Approver/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#AcceptModal').modal('show');
                $('#accepts').find('input[name="softwareUserRequestId"]').val(data.id);

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#BtnAccept').click(function (e) {
        e.preventDefault();

        var valdata = $('#accepts').find('input[name="softwareUserRequestId"]').val();
        var data = $('#accepts').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/sofrware/approve/' + valdata,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
    $('#BtnAccept').click(function (e) {
        e.preventDefault();
        var data = $('#accepts').serialize();
        //alert(id);
        $.ajax({
            type: 'POST',
            url: '/api/accepts/save',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                console.log(data.id);
                $('#pleasewait').modal('show');
                toastr.success("File Successfully Added!");
                $('#AcceptModal').modal('hide');
                setTimeout(function () {

                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    window.location.reload();
                }, 3000);
            },
            //if faile
            error: function (data) {
                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
    $('#softwareRequestList').on('click', '.back', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Approver/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#backModal').modal('show');
                $('#accepts2').find('input[name="id"]').val(data.id);

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#BtnReturn').click(function (e) {
        e.preventDefault();

        var id = $('#accepts2').find('input[name="id"]').val();
        var data = $('#accepts2').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/acceptsReturn/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //console.log(data.id);
                //$('#pleasewait').modal('show');
                //toastr.success("File Successfully Added!");
                //$('#backModal').modal('hide');
                //setTimeout(function () {

                //    // hide please wait modal
                //}, 2000);
                //setTimeout(function () {
                //    $('#pleasewait').modal('hide');
                //    window.location.reload();
                //}, 3000);
            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
    $('#softwareRequestList').on('click', '.return-approved', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Approver/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#AcceptModal2').modal('show');
                $('#acceptsReturn').find('input[name="id"]').val(data.id);

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#BtnAccept2').click(function (e) {
        e.preventDefault();

        var id = $('#acceptsReturn').find('input[name="id"]').val();
        var data = $('#acceptsReturn').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/sofrware/ReturnApproved/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                console.log(data.id);
                $('#pleasewait').modal('show');
                toastr.success("File Successfully Added!");
                $('#AcceptModal2').modal('hide');
                setTimeout(function () {

                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    window.location.reload();
                }, 3000);
            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });


    $("#softwareRequestList2").DataTable({
        "ajax": {
            "url": "/api/softwareRequestDev/Get",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        //"fnInitComplete": function (oSettings, json) {
        //    // search after pressing enter
        //    $('#softwareRequestList_filter input').unbind();
        //    $('#softwareRequestList_filter input').bind('keyup', function (e) {
        //        if (e.keyCode == 13) {
        //            // trigger search
        //            $('#pleasewait').modal('show');
        //            setTimeout(function () {
        //                $('#pleasewait').modal('hide');
        //            }, 2500);
        //            $('#softwareRequestList').DataTable().search(this.value).draw();
        //        }
        //        // if search is empty, reset the filter
        //        if (this.value == "") {
        //            $('#softwareRequestList').DataTable().search("").draw();
        //        }
        //    }
        //    );
        //},
        // "searching" : " true",
        // "searchDelay" : 1000,
        // order by desc dateuploaded
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [
            {
                data: "ticket",
                render: function (data) {
                    return '<span class="shadow badge bg-primary">' + data + '</span>'
                },
            },
            { data: "dateAdded" },
            { data: "fullName" },
            {
                data: "softwareId",
                render: function (data, type, row) {
                    return row.software.name;
                }
            },
            {
                data: "statusId", render: function (data, type, row) {
                    if (data == 1) {
                        return '<span class="badge  bg-secondary">Open</span>'
                    }
                    else if (data == 2) {
                        return '<span class="badge  bg-success">Resolved</span>'
                    }
                    else if (data == 3) {
                        return '<span class="badge bg-warning">On hold</span>'
                    }
                    else if (data == 4) {
                        return '<span class="badge bg-info">In Progress</span>'
                    }
                    else if (data == 5) {
                        return '<span class="badge  bg-danger">Cancel Request</span>'
                    }
                    else
                        return '<span class="badge bg-secondary">Open</span>'
                }
            },
            {
                data: null,
            },
        ],
        columnDefs:
            [{
                targets: [-1], render: function (a, b, data, d) {
                    if (data.status == "Accept") {
                        return '<button class="btn btn-outline-info btn-sm info2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success btn-sm report2 me-2" data-id="' + data.id + '"><i class="bi bi-check2"></i> Approve </button>';
                    }
                    else if (data.status == "In Progress") {
                        return '<button class="btn btn-outline-info btn-sm info2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success btn-sm report2 me-2" data-id="' + data.id + '"><i class="bi bi-card-checklist"></i> Report </button>';
                    }
                    else if (data.status == "Manual") {
                        return '<button class="btn btn-outline-info btn-sm info2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-secondary btn-sm edit2 mt-2 me-2" data-id="' + data.id + '"><i class="bi bi-pencil-square"></i> Edit </button>';
                    }
                    else if (data.status == "Accepts Request") {
                        return '<button class="btn btn-outline-info btn-sm info2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-danger btn-sm accept2 me-2" data-id="' + data.id + '"><i class="bi bi-gear"></i> Accept </button>';
                    }
                    else if (data.status == "Update Request") {
                        return '<button class="btn btn-outline-info btn-sm info2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success btn-sm return-approved2 me-2" data-id="' + data.id + '"><i class="bi bi-check2"></i> Approve </button>';
                    }
                    else if (data.status == "Resolved") {
                        return '<button class="btn btn-outline-info btn-sm info2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction2 me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.status == "Verified") {
                        return '<button class="btn btn-outline-info btn-sm info2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-dark  btn-sm print2 me-2" data-id="' + data.id + '"><i class="bi bi-gear"></i> Print </button>';
                    }
                    else if (data.status == "Approved") {
                        return '<button class="btn btn-outline-info btn-sm info2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-dark btn-sm print2 me-2" data-id="' + data.id + '"><i class="bi bi-gear"></i> Print </button>';
                    }
                    else if (data.status == "Cancel") {
                        return '<button class="btn btn-outline-info btn-sm info2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }

                },
                orderable: false,
                width: "180px"
            }]
    });
    $('#softwareRequestList2').on('click', '.info2', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Approver/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal2').modal('show');
                $('#viewRequest2').find('input[name="softwareUserRequestId"]').val(data.id);
                $('#viewRequest2').find('input[name="fullName"]').val(data.fullName);
                $('#viewRequest2').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#viewRequest2').find('input[name="departmentName"]').val(data.departmentName);
                $('#viewRequest2').find('input[name="divisionName"]').val(data.divisionName);
                $('#viewRequest2').find('input[name="softwareName"]').val(data.softwareName);
                $('#viewRequest2').find('input[name="informationName"]').val(data.informationName);
                $('#viewRequest2').find('input[name="requestFor"]').val(data.requestFor);
                $('#viewRequest2').find('input[name="FileName"]').val(data.requestFor);
                $('#viewRequest2').find('textarea[name="description"]').val(data.description);
                $.ajax({
                    type: 'GET',
                    url: '/api/v2/Approver/getbyId/' + id,
                    success: function (data, row) {
                        $('#addImage').find('input[name="id"]').val(data.id);

                        if (data.status == "Open")
                            $('.update-image').prop('disabled', false)

                        else if (data.status == "In Progress")
                            $('.update-image').prop('disabled', true)

                        else if (data.status == "Accepts Request")
                            $('.update-image').prop('disabled', true)

                        else if (data.status == "Resolved")
                            $('.update-image').prop('disabled', true)

                        else if (data.status == "Verified")
                            $('.update-image').prop('disabled', true)

                        else if (data.status == "Approved")
                            $('.update-image').prop('disabled', true)
                        else if (data.status == "Cancel")
                            $('.update-image').prop('disabled', true)
                        else
                            $('.update-image').prop('disabled', false)


                        var uploadTable = $('#UploadList2').DataTable({
                            destroy: true,

                            ajax: {
                                url: "/api/v2/uploads/" + id,
                                dataSrc: '',
                                headers: {
                                    "Authorization": "Bearer " + localStorage.getItem('access_token')
                                }
                            },
                            searching: false,
                            ordering: false,
                            columns: [
                                {
                                    data: "dateAdded"
                                },
                                {
                                    data: "documentBlob",
                                    render: function (data, type, row, meta) {
                                        var fileType = row.imagePath.split('.').pop();
                                        if (fileType == 'pdf') {
                                            return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                        } else if (fileType == 'doc' || fileType == 'docx') {
                                            return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                        } else if (fileType == 'xls' || fileType == 'xlsx') {
                                            return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                        } else if (fileType == 'ppt' || fileType == 'pptx') {
                                            return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                        } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                            return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                        } else {
                                            return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                        }
                                    },
                                    className: "text-center"

                                },
                                {
                                    // download link by using anchor link only
                                    data: "documentBlob",
                                    render: function (data, type, row) {
                                        var f = new Blob([s2ab(atob(data))], { type: "" });
                                        var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                        var newF = URL.createObjectURL(f);
                                        urls.push(newF);
                                        var fileType = row.imagePath.split('.').pop();

                                        //    check file if is image type
                                        if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                            // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                            //     +
                                            return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                        }
                                        else {
                                            return ''

                                        }
                                    },
                                    className: "text-center"
                                },
                            ],

                        });

                        $('#upload2').find('input[name=softwareUserRequestId]').val(data.id);
                        // refresh page on modal close
                        $('#viewmodal').on('hidden.bs.modal', function () {
                            // remove id on select
                            $('select[name=softwareUserRequestId]').find('option[value=' + data.id + ']').remove();
                        });
                    }

                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $.ajax({
        type: 'GET',
        url: '/api/get/user/division',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {

            console.log(data);
        },

    });
    $('#softwareRequestList2').on('click', '.report2', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Approver/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#AcceptModal2').modal('show');
                $('#accepts4').find('input[name="softwareUserRequestId"]').val(data.id);

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#BtnAccept3').click(function (e) {
        e.preventDefault();

        var valdata = $('#accepts4').find('input[name="softwareUserRequestId"]').val();
        var data = $('#accepts4').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/sofrware/approve/' + valdata,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
    $('#BtnAccept3').click(function (e) {
        e.preventDefault();
        var data = $('#accepts4').serialize();
        //alert(id);
        $.ajax({
            type: 'POST',
            url: '/api/accepts/save',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                console.log(data.id);
                $('#pleasewait').modal('show');
                toastr.success("File Successfully Added!");
                $('#AcceptModal2').modal('hide');
                setTimeout(function () {

                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    window.location.reload();
                }, 3000);
            },
            //if faile
            error: function (data) {
                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
    $('#softwareRequestList2').on('click', '.back2', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Approver/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#backModal').modal('show');
                $('#accepts2').find('input[name="id"]').val(data.id);

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#BtnReturn3').click(function (e) {
        e.preventDefault();

        var id = $('#accepts4').find('input[name="id"]').val();
        var data = $('#accepts4').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/acceptsReturn/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //console.log(data.id);
                //$('#pleasewait').modal('show');
                //toastr.success("File Successfully Added!");
                //$('#backModal').modal('hide');
                //setTimeout(function () {

                //    // hide please wait modal
                //}, 2000);
                //setTimeout(function () {
                //    $('#pleasewait').modal('hide');
                //    window.location.reload();
                //}, 3000);
            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
    $('#softwareRequestList').on('click', '.return-approved', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Approver/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#AcceptModal2').modal('show');
                $('#acceptsReturn').find('input[name="id"]').val(data.id);

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#BtnAccept5').click(function (e) {
        e.preventDefault();

        var id = $('#acceptsReturn').find('input[name="id"]').val();
        var data = $('#acceptsReturn').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/sofrware/ReturnApproved/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                console.log(data.id);
                $('#pleasewait').modal('show');
                toastr.success("File Successfully Added!");
                $('#AcceptModal2').modal('hide');
                setTimeout(function () {

                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    window.location.reload();
                }, 3000);
            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
}
function SoftwareList() {
    $('#proglistCount').DataTable({
        ajax: {
            url: '/api/sf/bymonth',
            dataSrc: "",
            headers: {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            }
        },
        autoWidth: false,
        columns: [
            {
                data: 'name',
                render: function (data, type, row) {
                    if (data == null) {
                        return '--'
                    }
                    return `${(data)}`
                }

            },

            {
                // display count
                data: 'year',
            },
            {
                data: 'month',
                render: function (data, row) {
                    if (data == 1) {
                        return 'January'
                    }
                    else if (data == 2) {
                        return 'February '
                    }
                    else if (data == 3) {
                        return 'March'
                    }
                    else if (data == 4) {
                        return 'April'
                    }
                    else if (data == 5) {
                        return 'May '
                    }
                    else if (data == 6) {
                        return 'June '
                    }
                    else if (data == 7) {
                        return 'July '
                    }
                    else if (data == 8) {
                        return 'August '
                    }
                    else if (data == 9) {
                        return 'September '
                    }
                    else if (data == 10) {
                        return 'October '
                    }
                    else if (data == 11) {
                        return 'November '
                    }
                    else if (data == 12) {
                        return 'December '
                    }
                    else
                        return ''
                }
            },
            {
                data: "count",
            },
        ]
    });

    $('#sftsystemList').DataTable({
        ajax: {
            url: '/api/sftSystem/count',
            dataSrc: "",
            headers: {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            }
        },
        autoWidth: false,
        columns: [
            {
                data: 'name',
                render: function (data, type, row) {
                    if (data == null) {
                        return '--'
                    }
                    return `${(data)}`
                }

            },

            {
                // display count
                data: 'year',
            },
            {
                data: 'month',
                render: function (data, row) {
                    if (data == 1) {
                        return 'January'
                    }
                    else if (data == 2) {
                        return 'February '
                    }
                    else if (data == 3) {
                        return 'March'
                    }
                    else if (data == 4) {
                        return 'April'
                    }
                    else if (data == 5) {
                        return 'May '
                    }
                    else if (data == 6) {
                        return 'June '
                    }
                    else if (data == 7) {
                        return 'July '
                    }
                    else if (data == 8) {
                        return 'August '
                    }
                    else if (data == 9) {
                        return 'September '
                    }
                    else if (data == 10) {
                        return 'October '
                    }
                    else if (data == 11) {
                        return 'November '
                    }
                    else if (data == 12) {
                        return 'December '
                    }
                    else
                        return ''
                }
            },
            {
                data: "count",
            },
        ]
    });

    $('#sftListCount').DataTable({
        ajax: {
            url: '/api/sftService/count',
            dataSrc: "",
            headers: {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            }
        },
        autoWidth: false,
        columns: [
            {
                data: 'name',
                render: function (data, type, row) {
                    if (data == null) {
                        return '--'
                    }
                    return `${(data)}`
                }

            },

            {
                // display count
                data: 'year',
            },
            {
                data: 'month',
                render: function (data, row) {
                    if (data == 1) {
                        return 'January'
                    }
                    else if (data == 2) {
                        return 'February '
                    }
                    else if (data == 3) {
                        return 'March'
                    }
                    else if (data == 4) {
                        return 'April'
                    }
                    else if (data == 5) {
                        return 'May '
                    }
                    else if (data == 6) {
                        return 'June '
                    }
                    else if (data == 7) {
                        return 'July '
                    }
                    else if (data == 8) {
                        return 'August '
                    }
                    else if (data == 9) {
                        return 'September '
                    }
                    else if (data == 10) {
                        return 'October '
                    }
                    else if (data == 11) {
                        return 'November '
                    }
                    else if (data == 12) {
                        return 'December '
                    }
                    else
                        return ''
                }
            },
            {
                data: "count",
            },
        ]
    });
}
function HardwareList() {
    $('#techlistCount').DataTable({
        ajax: {
            url: '/api/v2/hrdTech/count',
            dataSrc: "",
            headers: {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            }
        },
        autoWidth: false,
        columns: [
            {
                data: 'name',
                render: function (data, type, row) {
                    if (data == null) {
                        return '--'
                    }
                    return `${(data)}`
                }


            },

            {
                // display count
                data: 'year',
            },
            {
                data: 'month',
                render: function (data, row) {
                    if (data == 1) {
                        return 'January'
                    }
                    else if (data == 2) {
                        return 'February'
                    }
                    else if (data == 3) {
                        return 'March'
                    }
                    else if (data == 4) {
                        return 'April'
                    }
                    else if (data == 5) {
                        return 'May '
                    }
                    else if (data == 6) {
                        return 'June '
                    }
                    else if (data == 7) {
                        return 'July '
                    }
                    else if (data == 8) {
                        return 'August '
                    }
                    else if (data == 9) {
                        return 'September '
                    }
                    else if (data == 10) {
                        return 'October '
                    }
                    else if (data == 11) {
                        return 'November '
                    }
                    else if (data == 12) {
                        return 'December '
                    }
                    else
                        return ''
                }
            },
            {
                data: "count",
            },
        ]
    });

    $('#hrdListCount').DataTable({
        ajax: {
            url: '/api/v2/hrd/count',
            dataSrc: "",
            headers: {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            }
        },
        autoWidth: false,
        columns: [
            {
                data: 'name',
                render: function (data, type, row) {
                    if (data == null) {
                        return '--'
                    }
                    return `${(data)}`
                }

            },

            {
                // display count
                data: 'year',
            },
            {
                data: 'month',
                render: function (data, row) {
                    if (data == 1) {
                        return 'January'
                    }
                    else if (data == 2) {
                        return 'February'
                    }
                    else if (data == 3) {
                        return 'March'
                    }
                    else if (data == 4) {
                        return 'April'
                    }
                    else if (data == 5) {
                        return 'May '
                    }
                    else if (data == 6) {
                        return 'June '
                    }
                    else if (data == 7) {
                        return 'July '
                    }
                    else if (data == 8) {
                        return 'August '
                    }
                    else if (data == 9) {
                        return 'September '
                    }
                    else if (data == 10) {
                        return 'October '
                    }
                    else if (data == 11) {
                        return 'November '
                    }
                    else if (data == 12) {
                        return 'December '
                    }
                    else
                        return ''
                }
            },
            {
                data: "count",
            },
        ]
    });

    $('#hrdCatCount').DataTable({
        ajax: {
            url: '/api/v2/hrdServices/count',
            dataSrc: "",
            headers: {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            }
        },
        autoWidth: false,
        columns: [
            {
                data: 'name',
                render: function (data, type, row) {
                    if (data == null) {
                        return '--'
                    }
                    return `${(data)}`
                }

            },

            {
                // display count
                data: 'year',
            },
            {
                data: 'month',
                render: function (data, row) {
                    if (data == 1) {
                        return 'January'
                    }
                    else if (data == 2) {
                        return 'February'
                    }
                    else if (data == 3) {
                        return 'March'
                    }
                    else if (data == 4) {
                        return 'April'
                    }
                    else if (data == 5) {
                        return 'May '
                    }
                    else if (data == 6) {
                        return 'June '
                    }
                    else if (data == 7) {
                        return 'July '
                    }
                    else if (data == 8) {
                        return 'August '
                    }
                    else if (data == 9) {
                        return 'September '
                    }
                    else if (data == 10) {
                        return 'October '
                    }
                    else if (data == 11) {
                        return 'November '
                    }
                    else if (data == 12) {
                        return 'December '
                    }
                    else
                        return ''
                }
            },
            {
                data: "count",
            },
        ]
    });
}
function HardwareAllRequest() {
    var table2 = $("#hardwareRequestList").DataTable({
        "ajax": {
            "url": "/api/v3/all/hardReq",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        // "searching" : " true",
        // "searchDelay" : 1000,
        // order by desc dateuploaded
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"
        },
        "autoWidth": false,
        "columns": [
            {
                data: "hardwareUserRequest.ticket",
                render: function (data) {
                    return '<span class="shadow badge bg-primary">' + data + '</span>'
                },
            },
            {
                data: "hardwareUserRequest.dateAdded"
            },
            {
                data: "hardwareUserRequest.fullName"
            },
            {
                data: "hardwareName"
            },
            {
                data: "hardwareUserRequest.status",
                render: function (data, type, row) {
                    if (data == "Open") {
                        return '<span class="shadow badge bg-secondary">' + data + '</span>'
                    }
                    else if (data == "In Progress") {
                        return '<span class="shadow badge bg-info">' + data + '</span>'
                    }
                    else if (data == "Accepts Request") {
                        return '<span class="shadow badge bg-info">In Progress</span>'
                    }
                    else if (data == "Manual") {
                        return '<span class="shadow badge bg-info">In Progress</span>'
                    }
                    else if (data == "Resolved") {
                        return '<span class="shadow badge bg-success">' + data + '</span>'
                    }
                    else if (data == "Verified") {
                        return '<span class="shadow badge bg-success">Resolved</span>'
                    }
                    else if (data == "Approved") {
                        return '<span class="shadow badge bg-success">Resolved</span>'
                    }
                    else if (data == "Cancel") {
                        return '<span class="shadow badge bg-danger">' + data + '</span>'
                    }
                }
            },
            {
                data:"technicianName"   
            },
            {
                data: null
            }
        ],
        columnDefs:
            [{
                targets: [-1], render: function (a, b, data, d) {
                    if (data.hardwareUserRequest.status == "Open") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm edit me-2" data-id="' + data.id + '"><i class="bi bi-pencil-square"></i> Edit </button>';
                    }
                    else if (data.hardwareUserRequest.status == "In Progress") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm edit me-2" data-id="' + data.id + '"><i class="bi bi-pencil-square"></i> Edit </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Accepts Request") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm edit me-2" data-id="' + data.id + '"><i class="bi bi-pencil-square"></i> Edit </button>' +
                            '<button class="btn btn-outline-danger btn-sm cancel me-2" data-id="' + data.id + '"><i class="bi bi-trash"></i> Cancel </button>';
;
                    }
                    else if (data.hardwareUserRequest.status == "Manual") {
                        return '.<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm edit me-2" data-id="' + data.id + '"><i class="bi bi-pencil-square"></i> Edit </button>' +
                            '<button class="btn btn-outline-danger btn-sm cancel me-2" data-id="' + data.id + '"><i class="bi bi-trash"></i> Cancel </button>';
;
                    }
                    else if (data.hardwareUserRequest.status == "Resolved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm edit me-2" data-id="' + data.id + '"><i class="bi bi-pencil-square"></i> Edit </button>' +
                            '<button class="btn btn-outline-danger btn-sm cancel me-2" data-id="' + data.id + '"><i class="bi bi-trash"></i> Cancel </button>';
;

                    }
                    else if (data.hardwareUserRequest.status == "Verified") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm edit me-2" data-id="' + data.id + '"><i class="bi bi-pencil-square"></i> Edit </button>';

                    }
                    else if (data.hardwareUserRequest.status == "Approved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm edit me-2" data-id="' + data.id + '"><i class="bi bi-trash3"></i> Edit </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Cancel") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm edit me-2" data-id="' + data.id + '"><i class="bi bi-pencil-square"></i> Edit </button>';
                    }
                },
                orderable: false,
                width: "240px"
            }]
    });


    $('#hardwareRequestList').on('click', '.edit', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#editRequestModal').modal('show');
                $('#EditRequest').find('input[name="id"]').val(data.id);
                $('#EditRequest').find('select[name="hardwareId"]').val(data.hardwareId);
                $('#EditRequest').find('select[name="unitTypeId"]').val(data.unitTypeId); 
                $('#EditRequest').find('input[name="modelName"]').val(data.modelName);
                $('#EditRequest').find('input[name="dateAdded"]').val(data.dateStarted);
                $('#EditRequest').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#EditRequest').find('input[name="brandName"]').val(data.brandName);
                $('#EditRequest').find('input[name="FileName"]').val(data.documentLabel);
                $('#EditRequest').find('textarea[name="remarks"]').val(data.remarks);
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#hardwareRequestList').on('click', '.cancel', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#cancelModal').modal('show');
                $('#cancelReq').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });

    $('#cancelled').click(function (e) {
        e.preventDefault();
        var id = $('#cancelReq').find('input[name="hardwareUserRequestId"]').val();
        var data = $('#cancelReq').serialize();
        $.ajax({
            type: 'PUT',
            url: '/api/hardwareRequest/CancelRequest/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                console.log(data.id);
                $('#cancelModal').modal('hide');

                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success(" Successfully Update Request!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    table2.ajax.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/UnitType',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=unitTypeId]').append('<option value=""> Select UnitType</option>');
            $.each(data, function (index, value) {
                $('select[name=unitTypeId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/hardware',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=hardwareId]').append('<option value=""> Select Hardware Service Category</option>');
            $.each(data, function (index, value) {
                $('select[name=hardwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    $('#UpdateRequest').click(function (e) {
        e.preventDefault();

        var id = $('#EditRequest').find('input[name="id"]').val();
        var data = {
            brandName: $('#EditRequest').find('input[name=brandName]').val(),
            hardwareId: $('#EditRequest').find('select[name=hardwareId]').val(),
            modelName: $('#EditRequest').find('input[name=modelName]').val(),
            unitTypeId: $('#EditRequest').find('select[name=unitTypeId]').val(),
            hardwareId: $('#EditRequest').find('select[name=hardwareId]').val(),
            dateStarted: $('#EditRequest').find('input[name="dateAdded"]').val(),
            dateEnded: $('#EditRequest').find('input[name="dateEnded"]').val(),
            remarks: $('#EditRequest').find('textarea[name="remarks"]').val(),
        }
        $.ajax({
            type: 'PUT',
            url: '/api/dev/hardwaretech/Edit/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                console.log(data.id);
                $('#editRequestModal').modal('hide');

                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success(" Successfully Update Request!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    table2.ajax.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                
                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
    $('#hardwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);
                $('#viewRequest').find('input[name="fullName"]').val(data.hardwareUserRequest.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.hardwareUserRequest.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.hardwareUserRequest.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.hardwareUserRequest.divisionName);
                $('#viewRequest').find('input[name="hardwareName"]').val(data.hardwareUserRequest.hardwareName);
                $('#viewRequest').find('input[name="modelName"]').val(data.hardwareUserRequest.modelName);
                $('#viewRequest').find('input[name="uniTypes"]').val(data.hardwareUserRequest.uniTypes);
                $('#viewRequest').find('input[name="brandName"]').val(data.hardwareUserRequest.brandName);
                $('#viewRequest').find('input[name="FileName"]').val(data.hardwareUserRequest.documentLabel);
                $('#viewRequest').find('textarea[name="description"]').val(data.hardwareUserRequest.description);

                var dataId = $('#hardwareUserRequestId').attr('value');
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/userUploads/" + dataId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },

                    ]
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#hardwareRequestList').on('click', '.report', function () {
        var id = $(this).attr('data-id');
        var url = '/api/userRequest/getbyId/' + id;

        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#ReportModal').modal('show');
                $('#transactional').find('input[name="hardwareUserRequestId"]').val(data.id);


                var dataId = $('#transactional').find('input[name="hardwareUserRequestId"]').attr('value');
                var table = $('#techList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertask/getbyId/" + dataId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "hardwareTaskId",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return '<span class="badge shadow bg-info">Requested</span>'
                                }
                                else if (data == 2) {
                                    return '<span class="badge shadow bg-primary">Assigned</span>'
                                }
                                else if (data == 3) {
                                    return '<span class="badge shadow bg-success">Reported</span>'
                                }
                                else if (data == 4) {
                                    return '<span class="badge shadow bg-primary">Verified</span>'
                                }
                                else if (data == 5) {
                                    return '<span class="badge shadow bg-primary">Approved</span>'
                                }
                            }
                        },
                        {
                            data: "state"
                        }

                    ],

                });

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
}
function HardwareApprovalList() {
    var table2 = $("#hardwareRequestList").DataTable({
        "ajax": {
            "url": "/api/Approve/Get",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        // "searching" : " true",
        // "searchDelay" : 1000,
        // order by desc dateuploaded
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"
        },
        "autoWidth": false,
        "columns": [
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return '<span class="badge shadow bg-primary">' + row.hardwareUserRequest.ticket + '</span>'
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return row.hardwareUserRequest.dateAdded
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return row.hardwareUserRequest.fullName
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return '<span class="badge shadow bg-success">' + row.hardwareUserRequest.status + '</span>'
                }
            },
            {
                data: "nameApproval",
                render: function (data) {
                    if (data == null) {
                        return ''
                    }
                    else
                        return data
                }

            },
            {
                data: "dateApprove"
            },
            {
                data: null
            }
        ],
        columnDefs:
            [{
                targets: [-1], render: function (a, b, data, d) {
                    if (data.hardwareUserRequest.status == "Open") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success btn-sm assign me-2" data-id="' + data.id + '"><i class="bi bi-person-check"></i> Assign Technician </button>'
                    }
                    else if (data.hardwareUserRequest.status == "In Progress") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Resolved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Verified") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn btn-outline-danger btn-sm approve me-2" data-id="' + data.id + '"><i class="bi bi-gear"></i> Approve </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Approved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                },
                orderable: false,
                width: "200px"
            }]
    });

    $('#hardwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v4/approved/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);
                $('#viewRequest').find('input[name="ticket"]').val(data.hardwareUserRequest.ticket);
                $('#viewRequest').find('input[name="dateAdded"]').val(data.hardwareUserRequest.dateAdded);

                $('#viewRequest').find('input[name="fullName"]').val(data.hardwareUserRequest.fullName);

                $('#viewRequest').find('input[name="mobileNumber"]').val(data.hardwareUserRequest.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.hardwareUserRequest.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.hardwareUserRequest.divisionName);
                $('#viewRequest').find('input[name="hardwareName"]').val(data.hardwareUserRequest.hardwareName);
                $('#viewRequest').find('input[name="modelName"]').val(data.hardwareUserRequest.modelName);
                $('#viewRequest').find('input[name="uniTypes"]').val(data.hardwareUserRequest.uniTypes);
                $('#viewRequest').find('input[name="brandName"]').val(data.hardwareUserRequest.brandName);
                $('#viewRequest').find('input[name="FileName"]').val(data.hardwareUserRequest.documentLabel);
                $('#viewRequest').find('textarea[name="description"]').val(data.hardwareUserRequest.description);
                $('#techForm').find('input[name="hardwareName"]').val(data.technicianReport.hardwareName);
                $('#techForm').find('input[name="uniTypes"]').val(data.technicianReport.uniTypes);
                $('#techForm').find('input[name="brandName"]').val(data.technicianReport.brandName);
                $('#techForm').find('input[name="modelName"]').val(data.technicianReport.modelName);
                $('#techForm').find('input[name="findingName"]').val(data.technicianReport.findingName);
                $('#techForm').find('input[name="possibleCause"]').val(data.technicianReport.possibleCause);
                $('#techForm').find('input[name="serialNumber"]').val(data.technicianReport.serialNumber);
                $('#techForm').find('input[name="controlNumber"]').val(data.technicianReport.controlNumber);
                $('#techForm').find('input[name="technicianName"]').val(data.technicianReport.technicianName);
                $('#techForm').find('input[name="dateAssigned"]').val(data.technicianReport.dateAssigned);

                $('#techForm').find('input[name="dateStarted"]').val(data.technicianReport.dateStarted);
                $('#techForm').find('input[name="dateEnded"]').val(data.technicianReport.dateEnded);
                $('#techForm').find('input[name="name"]').val(data.hardwareVerify.name);
                $('#techForm').find('input[name="dateVerified"]').val(data.hardwareVerify.dateVerified);

                $('#techForm').find('input[name="nameApproval"]').val(data.nameApproval);
                $('#techForm').find('input[name="dateApprove"]').val(data.dateApprove);

                $('#techForm').find('textarea[name="remarks"]').val(data.technicianReport.remarks);
                $('#techForm').find('textarea[name="remarksApproval"]').val(data.remarksApproval);

                $('#techForm').find('input[name="technicianReportId"]').val(data.technicianReport.id);


                var dataId = $('input[name="hardwareUserRequestId"]').attr('value');
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/userUploads/" + dataId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },
                        
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },

                    ]
                });

                var techId = $('input[name="technicianReportId"]').attr('value');
                var uploadTable = $('#TechUploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/techUploads/get/" + techId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"
                        
                        },
                        
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],
                });

                $('#upload2').find('input[name=technicianReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=technicianReportId]').find('option[value=' + data.id + ']').remove();
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#hardwareRequestList').on('click', '.transaction', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v4/approved/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#ReportModal').modal('show');
                $('#transactional').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);


                var dataId = $('#transactional').find('input[name="hardwareUserRequestId"]').attr('value');
                var table = $('#techList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertask/getbyId/" + dataId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "hardwareUserRequestId",
                            render: function (data, type, row) {
                                return '<span class="badge shadow bg-primary">' + row.hardwareUserRequest.ticket + '</span>'
                            }
                        },
                        {
                            data: "hardwareUserRequest.fullName"
                        },
                        {
                            data: "hardwareTaskId",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return '<span class="badge shadow bg-secondary">Requested</span>'
                                }
                                else if (data == 2) {
                                    return '<span class="badge shadow bg-info">Assigned</span>'
                                }
                                else if (data == 3) {
                                    return '<span class="badge shadow bg-success">Reported</span>'
                                }
                                else if (data == 4) {
                                    return '<span class="badge shadow bg-primary">Verified</span>'
                                }
                                else if (data == 5) {
                                    return '<span class="badge shadow bg-danger">Approved</span>'
                                }
                            }
                        },
                    ],

                });

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#techList').on('click', '.transac', function () {
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/techAssign/get/" + id,
            success: function (data) {
                $('#ReportModal').modal('hide');
                $('#transactionModal').modal('show');
                $('#techForm3').find('input[name="hardwareName"]').val(data.technicianReport.hardwareName);
                $('#techForm3').find('input[name="uniTypes"]').val(data.technicianReport.uniTypes);
                $('#techForm3').find('input[name="brandName"]').val(data.technicianReport.brandName);
                $('#techForm3').find('input[name="modelName"]').val(data.technicianReport.modelName);
                $('#techForm3').find('input[name="findingName"]').val(data.technicianReport.findingName);
                $('#techForm3').find('input[name="possibleCause"]').val(data.technicianReport.possibleCause);
                $('#techForm3').find('input[name="serialNumber"]').val(data.technicianReport.serialNumber);
                $('#techForm3').find('input[name="controlNumber"]').val(data.technicianReport.controlNumber);
                $('#techForm3').find('textarea[name="remarks"]').val(data.technicianReport.remarks);
                $('#techForm3').find('input[name="technicianName"]').val(data.technicianReport.technicianName);
                $('#techForm3').find('input[name="dateStarted"]').val(data.technicianReport.dateStarted);
                $('#techForm3').find('input[name="dateEnded"]').val(data.technicianReport.dateEnded);
                $('#techForm3').find('input[name="adminName"]').val(data.technicianReport.adminName);
                $('#techForm3').find('input[name="superName"]').val(data.technicianReport.superName);
                $('#techForm3').find('input[name="technicianReport"]').val(data.technicianReport.id);
                $('#techForm3').find('input[name="dateAssigned"]').val(data.technicianReport.dateAssigned);
                $('#techForm3').find('input[name="dateVerified"]').val(data.hardwareVerify.dateVerified);
                $('#techForm3').find('input[name="name"]').val(data.hardwareVerify.name);
                $('#techForm3').find('input[name="nameApproval"]').val(data.hardwareApproval.nameApproval);
                $('#techForm3').find('input[name="DateApprove"]').val(data.hardwareApproval.DateApprove);
                $('#techForm3').find('input[name="technicianReport"]').val(data.hardwareApproval.id);
            }
        });
    });

    $('#hardwareRequestList').on('click', '.approve', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v4/Verified/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#ApproveModal').modal('show');
                $('#saveapproval').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);
                $('#saveapproval').find('input[name="technicianReportId"]').val(data.technicianReport.id);
                $('#saveapproval').find('input[name="hardwareVerifyId"]').val(data.id);
                $('#saveapproval').find('input[name="fullName"]').val(data.hardwareUserRequest.fullName);
                $('#saveapproval').find('input[name="mobileNumber"]').val(data.hardwareUserRequest.mobileNumber);
                $('#saveapproval').find('input[name="departmentName"]').val(data.hardwareUserRequest.departmentName);
                $('#saveapproval').find('input[name="divisionName"]').val(data.hardwareUserRequest.divisionName);
                $('#saveapproval').find('input[name="hardwareName"]').val(data.hardwareUserRequest.hardwareName);
                $('#saveapproval').find('input[name="modelName"]').val(data.hardwareUserRequest.modelName);
                $('#saveapproval').find('input[name="uniTypes"]').val(data.hardwareUserRequest.uniTypes);
                $('#saveapproval').find('input[name="brandName"]').val(data.hardwareUserRequest.brandName);
                $('#saveapproval').find('input[name="FileName"]').val(data.hardwareUserRequest.documentLabel);
                $('#saveapproval').find('textarea[name="description"]').val(data.hardwareUserRequest.description);
                $('#saveapproval').find('input[name="hardwareName"]').val(data.technicianReport.hardwareName);
                $('#saveapproval').find('input[name="uniTypes"]').val(data.technicianReport.uniTypes);
                $('#saveapproval').find('input[name="brandName"]').val(data.technicianReport.brandName);
                $('#saveapproval').find('input[name="modelName"]').val(data.technicianReport.modelName);
                $('#saveapproval').find('input[name="findingName"]').val(data.technicianReport.findingName);
                $('#saveapproval').find('input[name="possibleCause"]').val(data.technicianReport.possibleCause);
                $('#saveapproval').find('input[name="serialNumber"]').val(data.technicianReport.serialNumber);
                $('#saveapproval').find('input[name="controlNumber"]').val(data.technicianReport.controlNumber);
                $('#saveapproval').find('input[name="technicianName"]').val(data.technicianReport.technicianName);
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });


    $('#approvedSave').click(function (e) {
        e.preventDefault();
        var data = $('#saveapproval').serialize();
        console.log(data)

        $.ajax({
            type: 'POST',
            url: '/api/approve/save',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#ApproveModal').modal('hide');
                toastr.success(" Successfully Assigned The Request!");
                $('#saveapproval').find('textarea[name="remarksApproval"]').val("");
            },
            //if failed
            error: function (data) {
                console.log(data);
                toastr.error("Fill up alll forms / Invalid")
            }
        });

    });

    $('#approvedSave').click(function (e) {
        e.preventDefault();

        var id = $('#saveapproval').find('input[name="hardwareUserRequestId"]').val();
        var data = $('#saveapproval').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/update/approved/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
}
function HardwareApproving() {
    var table2 = $("#hardwareRequestList").DataTable({
        "ajax": {
            "url": "/api/v3/verified",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"
        },
        "autoWidth": false,
        "columns": [
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return '<span class="badge shadow bg-primary">' + row.hardwareUserRequest.ticket + '</span>'
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return row.hardwareUserRequest.dateAdded
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return row.hardwareUserRequest.fullName
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return '<span class="badge shadow bg-primary">' + row.hardwareUserRequest.status + '</span>'
                }
            },
            {
                data: "name",
                render: function (data) {
                    if (data == null) {
                        return ''
                    }
                    else
                        return data
                }

            },
            {
                data: "dateVerified"
            },
            {
                data: null
            }
        ],
        columnDefs:
            [{
                targets: [-1], render: function (a, b, data, d) {
                    if (data.hardwareUserRequest.status == "Open") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success btn-sm assign me-2" data-id="' + data.id + '"><i class="bi bi-person-check"></i> Assign Technician </button>'
                    }
                    else if (data.hardwareUserRequest.status == "In Progress") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Resolved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn btn-outline-success btn-sm verify me-2" data-id="' + data.id + '"><i class="bi bi-gear"></i> Verify </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Verified") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn btn-outline-success btn-sm approve me-2" data-id="' + data.id + '"><i class="bi bi-check2-square"></i>  Approve </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Approved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                },
                orderable: false,
                width: "290px"
            }]
    });

    $('#hardwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v4/Verified/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);
                $('#viewRequest').find('input[name="ticket"]').val(data.hardwareUserRequest.ticket);
                $('#viewRequest').find('input[name="dateAdded"]').val(data.hardwareUserRequest.dateAdded);

                $('#viewRequest').find('input[name="fullName"]').val(data.hardwareUserRequest.fullName);

                $('#viewRequest').find('input[name="mobileNumber"]').val(data.hardwareUserRequest.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.hardwareUserRequest.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.hardwareUserRequest.divisionName);
                $('#viewRequest').find('input[name="hardwareName"]').val(data.hardwareUserRequest.hardwareName);
                $('#viewRequest').find('input[name="modelName"]').val(data.hardwareUserRequest.modelName);
                $('#viewRequest').find('input[name="uniTypes"]').val(data.hardwareUserRequest.uniTypes);
                $('#viewRequest').find('input[name="brandName"]').val(data.hardwareUserRequest.brandName);
                $('#viewRequest').find('input[name="FileName"]').val(data.hardwareUserRequest.documentLabel);
                $('#viewRequest').find('textarea[name="description"]').val(data.hardwareUserRequest.description);
                $('#techForm').find('input[name="hardwareName"]').val(data.technicianReport.hardwareName);
                $('#techForm').find('input[name="uniTypes"]').val(data.technicianReport.uniTypes);
                $('#techForm').find('input[name="brandName"]').val(data.technicianReport.brandName);
                $('#techForm').find('input[name="modelName"]').val(data.technicianReport.modelName);
                $('#techForm').find('input[name="findingName"]').val(data.technicianReport.findingName);
                $('#techForm').find('input[name="possibleCause"]').val(data.technicianReport.possibleCause);
                $('#techForm').find('input[name="serialNumber"]').val(data.technicianReport.serialNumber);
                $('#techForm').find('input[name="controlNumber"]').val(data.technicianReport.controlNumber);
                $('#techForm').find('input[name="technicianName"]').val(data.technicianReport.technicianName);
                $('#techForm').find('input[name="dateStarted"]').val(data.technicianReport.dateStarted);
                $('#techForm').find('input[name="dateAssigned"]').val(data.technicianReport.dateAssigned);

                $('#techForm').find('input[name="dateEnded"]').val(data.technicianReport.dateEnded);
                $('#techForm').find('input[name="adminName"]').val(data.technicianReport.adminName);
                $('#techForm').find('input[name="superName"]').val(data.technicianReport.superName);
                $('#techForm').find('textarea[name="remarks"]').val(data.technicianReport.remarks);
                $('#techForm').find('input[name="dateVerified"]').val(data.dateVerified);
                $('#techForm').find('input[name="name"]').val(data.name);

                $('#techForm').find('input[name="technicianReportId"]').val(data.technicianReport.id);
                if (data.hardwareUserRequest.status == "Open")
                    $('.update-image').prop('disabled', true)

                else if (data.hardwareUserRequest.status == "In Progress")
                    $('.update-image').prop('disabled', true)

                else if (data.hardwareUserRequest.status == "Accepts Request")
                    $('.update-image').prop('disabled', true)

                else if (data.hardwareUserRequest.status == "Resolved")
                    $('.update-image').prop('disabled', false)

                else if (data.hardwareUserRequest.status == "Verified")
                    $('.update-image').prop('disabled', true)

                else if (data.hardwareUserRequest.status == "Approved")
                    $('.update-image').prop('disabled', true)
                else if (data.hardwareUserRequest.status == "Cancel")
                    $('.update-image').prop('disabled', true)
                else
                    $('.update-image').prop('disabled', false)
                var dataId = $('input[name="hardwareUserRequestId"]').attr('value');
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/userUploads/" + dataId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },

                    ]
                });

                var techId = $('input[name="technicianReportId"]').attr('value');
                var uploadTable = $('#TechUploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/techUploads/get/" + techId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },

                    ],
                });

                $('#upload2').find('input[name=technicianReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=technicianReportId]').find('option[value=' + data.id + ']').remove();
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#hardwareRequestList').on('click', '.transaction', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v4/Verified/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#ReportModal').modal('show');
                $('#transactional').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);


                var dataId = $('#transactional').find('input[name="hardwareUserRequestId"]').attr('value');
                var table = $('#techList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertask/getbyId/" + dataId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "hardwareUserRequestId",
                            render: function (data, type, row) {
                                return '<span class="badge shadow bg-primary">' + row.hardwareUserRequest.ticket + '</span>'
                            }
                        },
                        {
                            data: "hardwareUserRequestId",
                            render: function (data, type, row) {
                                return row.hardwareUserRequest.fullName 
                            }
                        },
                        {
                            data: "hardwareTaskId",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return '<span class="badge shadow bg-secondary">Requested</span>'
                                }
                                else if (data == 2) {
                                    return '<span class="badge shadow bg-info">Assigned</span>'
                                }
                                else if (data == 3) {
                                    return '<span class="badge shadow bg-success">Reported</span>'
                                }
                                else if (data == 4) {
                                    return '<span class="badge shadow bg-primary">Verified</span>'
                                }
                                else if (data == 5) {
                                    return '<span class="badge shadow bg-warning">Approved</span>'
                                }
                            }
                        },
                    ],
                });

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });

    $('#hardwareRequestList').on('click', '.approve', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v4/Verified/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#ApproveModal').modal('show');
                $('#saveapproval').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);
                $('#saveapproval').find('input[name="technicianReportId"]').val(data.technicianReport.id);
                $('#saveapproval').find('input[name="hardwareVerifyId"]').val(data.id);
                $('#saveapproval').find('input[name="fullName"]').val(data.hardwareUserRequest.fullName);
                $('#saveapproval').find('input[name="mobileNumber"]').val(data.hardwareUserRequest.mobileNumber);
                $('#saveapproval').find('input[name="departmentName"]').val(data.hardwareUserRequest.departmentName);
                $('#saveapproval').find('input[name="divisionName"]').val(data.hardwareUserRequest.divisionName);
                $('#saveapproval').find('input[name="hardwareName"]').val(data.hardwareUserRequest.hardwareName);
                $('#saveapproval').find('input[name="modelName"]').val(data.hardwareUserRequest.modelName);
                $('#saveapproval').find('input[name="uniTypes"]').val(data.hardwareUserRequest.uniTypes);
                $('#saveapproval').find('input[name="brandName"]').val(data.hardwareUserRequest.brandName);
                $('#saveapproval').find('input[name="FileName"]').val(data.hardwareUserRequest.documentLabel);
                $('#saveapproval').find('textarea[name="description"]').val(data.hardwareUserRequest.description);
                $('#saveapproval').find('input[name="hardwareName"]').val(data.technicianReport.hardwareName);
                $('#saveapproval').find('input[name="uniTypes"]').val(data.technicianReport.uniTypes);
                $('#saveapproval').find('input[name="brandName"]').val(data.technicianReport.brandName);
                $('#saveapproval').find('input[name="modelName"]').val(data.technicianReport.modelName);
                $('#saveapproval').find('input[name="findingName"]').val(data.technicianReport.findingName);
                $('#saveapproval').find('input[name="possibleCause"]').val(data.technicianReport.possibleCause);
                $('#saveapproval').find('input[name="serialNumber"]').val(data.technicianReport.serialNumber);
                $('#saveapproval').find('input[name="controlNumber"]').val(data.technicianReport.controlNumber);
                $('#saveapproval').find('input[name="technicianName"]').val(data.technicianReport.technicianName);
                $('#saveapproval').find('input[name="dateAssigned"]').val(data.technicianReport.dateAssigned);
                $('#saveapproval').find('input[name="dateStarted"]').val(data.technicianReport.dateStarted);
                $('#saveapproval').find('input[name="dateEnded"]').val(data.technicianReport.dateEnded);
                $('#saveapproval').find('input[name="dateVerified"]').val(data.dateVerified);
                $('#saveapproval').find('input[name="name"]').val(data.name);

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });


    $('#approvedSave').click(function (e) {
        e.preventDefault();
        var data = $('#saveapproval').serialize();
        console.log(data)

        $.ajax({
            type: 'POST',
            url: '/api/approve/save',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#pleasewait').modal('show');

                $('#ApproveModal').modal('hide');
                setTimeout(function () {
                    toastr.success(" Successfully Approved a Request!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    table2.ajax.reload();
                }, 3000);
                $('#saveapproval').find('textarea[name="remarksApproval"]').val("");

            },
            //if failed
            error: function (data) {
                console.log(data);
                toastr.error("Fill up alll forms / Invalid")
            }
        });

    });

    $('#approvedSave').click(function (e) {
        e.preventDefault();

        var id = $('#saveapproval').find('input[name="hardwareUserRequestId"]').val();
        var data = $('#saveapproval').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/update/approved/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
}
function HardwareIndex() {
    var table2 = $("#hardwareRequestList").DataTable({
        "ajax": {
            "url": "/api/v2/hr/assigned",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        //"fnInitComplete": function () {
        //    this.api()
        //        .columns([4])
        //        .every(function () {
        //            var column = this;

        //            // Create select element and listener
        //            var select = $('<select class="form-control"><option value="">Show All</option></select>')
        //                .appendTo($(column.header()).empty())
        //                .on('change', function () {
        //                    var val = DataTable.util.escapeRegex($(this).val());
        //                    $('#pleasewait').modal('show');
        //                    setTimeout(function () {
        //                        $('#pleasewait').modal('hide');
        //                    }, 700);
        //                    $('#hardwareRequestList').DataTable().search(this.value).draw();
        //                });

        //            // Add list of options
        //            column
        //                .data()
        //                .unique()
        //                .sort()
        //                .each(function (d, j) {
        //                    select.append('<option value="' + d + '">' + d + '</option>');
        //                });
        //        });

        //},
        "ordering": "true",
        "paging": "true",
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return '<span class="badge shadow bg-primary">' + row.hardwareUserRequest.ticket + '</span>'
                }
            },
            {
                data: "dateAssigned",
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return row.hardwareUserRequest.fullName
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    if (row.hardwareUserRequest.isManual == 1) {
                        return 'Manual Request'
                    }
                    else
                        return 'User Request'
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return row.hardwareUserRequest.hardwareName
                }
            },

            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    if (row.hardwareUserRequest.status == "Open") {
                        return '<span class="badge shadow  bg-secondary">Open</span>'
                    }
                    else if (row.hardwareUserRequest.status == "In Progress") {
                        return '<span class="badge shadow  bg-info">In Progress</span>'
                    }
                    else if (row.hardwareUserRequest.status == "Pending Assigned Request") {
                        return '<span class="badge shadow  bg-info">In Progress</span>'
                    }
                    else if (row.hardwareUserRequest.status == "Manual") {
                        return '<span class="badge shadow  bg-info">In Progress</span>'
                    }
                    else if (row.hardwareUserRequest.status == "Resolved") {
                        return '<span class="badge shadow  bg-success">Resolved</span>'
                    }
                    else if (row.hardwareUserRequest.status == "Verified") {
                        return '<span class="badge shadow  bg-primary">Verified</span>'
                    }
                    else if (row.hardwareUserRequest.status == "Approved") {
                        return '<span class="badge shadow  bg-danger">Approved</span>'
                    }
                    else if (row.hardwareUserRequest.status == "Cancel") {
                        return '<span class="badge shadow  bg-danger">Cancel</span>'
                    }
                    return '<span class="badge shadow  bg-success">Resolved</span>'
                }
            },
            {
                data: null
            }
        ],
        columnDefs:
            [{
                targets: [-1], render: function (a, b, data, d) {
                    if (data.hardwareUserRequest.status == "Open") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>'
                    }
                    else if (data.hardwareUserRequest.status == "In Progress") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn btn-outline-success btn-sm report me-2" data-id="' + data.id + '"><i class="bi bi-card-checklist"></i> Report </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Manual") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn btn-outline-success btn-sm report-manual me-2" data-id="' + data.id + '"><i class="bi bi-card-checklist"></i></i> Report </button>' +
                            '<button class="btn btn-outline-secondary btn-sm edit mt-2 me-2" data-id="' + data.id + '"><i class="bi bi-pencil-square"></i> Edit </button>' ;
                    }
                    else if (data.hardwareUserRequest.status == "Pending Assigned Request") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-danger btn-sm accept me-2" data-id="' + data.id + '"><i class="bi bi-check2"></i> Accept </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Resolved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Verified") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn btn-outline-dark  btn-sm print me-2" data-id="' + data.id + '"><i class="bi bi-printer"></i> Print </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Approved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn btn-outline-dark btn-sm print me-2" data-id="' + data.id + '"><i class="bi bi-printer"></i> Print </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Cancel") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }

                },
                orderable: false,
                width: "280px"
            }]
    });


    $('#hardwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);
                $('#viewRequest').find('input[name="fullName"]').val(data.hardwareUserRequest.fullName);
                $('#viewRequest').find('input[name="ticket"]').val(data.hardwareUserRequest.ticket);
                $('#viewRequest').find('input[name="dateAdded"]').val(data.hardwareUserRequest.dateAdded);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.hardwareUserRequest.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.hardwareUserRequest.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.hardwareUserRequest.divisionName);
                $('#viewRequest').find('input[name="hardwareName"]').val(data.hardwareUserRequest.hardwareName);
                $('#viewRequest').find('input[name="modelName"]').val(data.hardwareUserRequest.modelName);
                $('#viewRequest').find('input[name="uniTypes"]').val(data.hardwareUserRequest.uniTypes);
                $('#viewRequest').find('input[name="brandName"]').val(data.hardwareUserRequest.brandName);
                $('#viewRequest').find('input[name="FileName"]').val(data.hardwareUserRequest.documentLabel);
                $('#viewRequest').find('textarea[name="description"]').val(data.hardwareUserRequest.description);
                $('#techForm').find('input[name="hardwareName"]').val(data.hardwareName);
                $('#techForm').find('input[name="uniTypes"]').val(data.uniTypes);
                $('#techForm').find('input[name="brandName"]').val(data.brandName);
                $('#techForm').find('input[name="technicianName"]').val(data.technicianName);
                $('#techForm').find('input[name="modelName"]').val(data.modelName);
                $('#techForm').find('input[name="findingName"]').val(data.findingName);
                $('#techForm').find('input[name="possibleCause"]').val(data.possibleCause);
                $('#techForm').find('input[name="serialNumber"]').val(data.serialNumber);
                $('#techForm').find('input[name="controlNumber"]').val(data.controlNumber);
                $('#techForm').find('textarea[name="remarks"]').val(data.remarks);
                $('#techForm').find('input[name="dateStarted"]').val(data.dateStarted);
                $('#techForm').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#techForm').find('input[name="adminName"]').val(data.adminName);
                $('#techForm').find('input[name="dateAssigned"]').val(data.dateAssigned);
                $('#techForm').find('input[name="superName"]').val(data.superName);
                $('#techForm').find('input[name="technicianReportId"]').val(data.id);
                if (data.hardwareUserRequest.status == "Open")
                    $('.update-image').prop('disabled', true)

                else if (data.hardwareUserRequest.status == "In Progress")
                    $('.update-image').prop('disabled', true)

                else if (data.hardwareUserRequest.status == "Accepts Request")
                    $('.update-image').prop('disabled', true)

                else if (data.hardwareUserRequest.status == "Resolved")
                    $('.update-image').prop('disabled', false)
                else if (data.hardwareUserRequest.status == "Manual")
                    $('.update-image').prop('disabled', true)
                else if (data.hardwareUserRequest.status == "Verified")
                    $('.update-image').prop('disabled', true)

                else if (data.hardwareUserRequest.status == "Approved")
                    $('.update-image').prop('disabled', true)
                else if (data.hardwareUserRequest.status == "Cancel")

                    $('.update-image').prop('disabled', true)
                else
                    $('.update-image').prop('disabled', false)

                var dataId = $('#hardwareUserRequestId').attr('value');
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/userUploads/" + dataId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },

                    ]
                });




                var techId = $('input[name="technicianReportId"]').attr('value');
                var uploadTable = $('#TechUploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/techUploads/get/" + techId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                        {
                            data: null
                        }
                    ],
                    columnDefs:
                        [{
                            targets: [-1], render: function (a, b, data, d) {
                                if (data.technicianReport.technicianAdminId != null) {
                                    return ' ';
                                }
                                else if (data.technicianReport.technicianAdminId == null) {
                                    return '<button type="button" class="btn btn-outline-danger btn-sm delete me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> delete </button>';
                                }
                            },
                            orderable: false,
                            width: "280px"
                        }]
                });

                $('#upload2').find('input[name=technicianReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=technicianReportId]').find('option[value=' + data.id + ']').remove();
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });

    $('#TechUploadList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        bootbox.confirm({
            message: "Are you sure you want to delete this image?",
            centerVertical: true,

            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success btn-sm'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger btn-sm '
                }
            },
            callback: function (result) {
                if (result) {
                    $.ajax({

                        type: 'DELETE',
                        url: '/api/v2/deleteImage/' + id,
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        },
                        success: function (data) {

                            //show toastr after 3
                            setTimeout(function () {
                                toastr.success("Image Successfully Remove!");
                                // hide please wait modal
                            }, 2000);
                            setTimeout(function () {
                                location.reload();
                                $('#upload2')[0].reset();
                            }, 3000);
                        }
                    });
                }
            }
        });
    });

    $('#upload2').submit(function (e) {
        e.preventDefault();
        var formData = new FormData(this);
        $.ajax({
            url: '/api/tech/saveFile',
            type: 'POST',
            data: formData,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                $('#addimageModal').modal('hide');
                $('#hardwareDisplay').modal('hide');

                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("File Successfully Added!");
                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    location.reload();
                    $('#upload2')[0].reset();
                }, 3000);
            },
            cache: false,
            contentType: false,
            processData: false,
            error: function (data) {
                toastr.error("Error Updating File")
            }
        });

    });

    $('#hardwareRequestList').on('click', '.report', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#TechnicianForm').modal('show');
                $('#techForm2').find('input[name="technicianReportId"]').val(data.id);
                $('#techForm2').find('input[name="HardwareUserRequestId"]').val(data.hardwareUserRequest.id);
                $('#techForm2').find('select[name="hardwareId"]').val(data.hardwareUserRequest.hardwareId);
                $('#techForm2').find('select[name="unitTypeId"]').val(data.hardwareUserRequest.unitTypeId);
                $('#techForm2').find('input[name="brandName"]').val(data.hardwareUserRequest.brandName);
                $('#techForm2').find('input[name="modelName"]').val(data.hardwareUserRequest.modelName);
                $('#techForm2').find('input[name="mobileNumber"]').val(data.hardwareUserRequest.mobileNumber);

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#hardwareRequestList').on('click', '.report-manual', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#reportManualModal').modal('show');
                $('#reportmanual').find('input[name="technicianReportId"]').val(data.id);
                $('#reportmanual').find('input[name="HardwareUserRequestId"]').val(data.hardwareUserRequest.id);
                $('#reportmanual').find('select[name="hardwareId"]').val(data.hardwareUserRequest.hardwareId);
                $('#reportmanual').find('select[name="unitTypeId"]').val(data.hardwareUserRequest.unitTypeId);
                $('#reportmanual').find('input[name="brandName"]').val(data.hardwareUserRequest.brandName);
                $('#reportmanual').find('input[name="modelName"]').val(data.hardwareUserRequest.modelName);
                $('#reportmanual').find('input[name="mobileNumber"]').val(data.hardwareUserRequest.mobileNumber);

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });

    $('#hardwareRequestList').on('click', '.transaction', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#ReportModal').modal('show');
                $('#transactional').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);


                var dataId = $('#transactional').find('input[name="hardwareUserRequestId"]').attr('value');
                var table = $('#techList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertask/getbyId/" + dataId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "hardwareUserRequest.ticket",
                            render: function (data, type, row) {
                                return '<span class="badge shadow bg-primary"> '  + data +' </span>'
                            }
                        },
                        {
                            data: "hardwareUserRequest.fullName"
                        },
                        {
                            data: "hardwareTaskId",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return '<span class="badge shadow bg-secondary">Requested</span>'
                                }
                                else if (data == 2) {
                                    return '<span class="badge shadow bg-info">Assigned</span>'
                                }
                                else if (data == 3) {
                                    return '<span class="badge shadow bg-success">Reported</span>'
                                }
                                else if (data == 4) {
                                    return '<span class="badge shadow bg-primary">Verified</span>'
                                }
                                else if (data == 5) {
                                    return '<span class="badge shadow bg-danger">Approved</span>'
                                }
                            }
                        },
                    ],
                });

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });

    $('#techList').on('click', '.transac', function () {
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/techAssign/get/" + id,
            success: function (data) {
                $('#ReportModal').modal('hide');
                $('#transactionModal').modal('show');
                $('#techForm3').find('input[name="hardwareName"]').val(data.technicianReport.hardwareName);
                $('#techForm3').find('input[name="uniTypes"]').val(data.technicianReport.uniTypes);
                $('#techForm3').find('input[name="brandName"]').val(data.technicianReport.brandName);
                $('#techForm3').find('input[name="modelName"]').val(data.technicianReport.modelName);
                $('#techForm3').find('input[name="findingName"]').val(data.technicianReport.findingName);
                $('#techForm3').find('input[name="possibleCause"]').val(data.technicianReport.possibleCause);
                $('#techForm3').find('input[name="serialNumber"]').val(data.technicianReport.serialNumber);
                $('#techForm3').find('input[name="controlNumber"]').val(data.technicianReport.controlNumber);
                $('#techForm3').find('textarea[name="remarks"]').val(data.technicianReport.remarks);
                $('#techForm3').find('input[name="technicianName"]').val(data.technicianReport.technicianName);
                $('#techForm3').find('input[name="dateStarted"]').val(data.technicianReport.dateStarted);
                $('#techForm3').find('input[name="dateEnded"]').val(data.technicianReport.dateEnded);
                $('#techForm3').find('input[name="adminName"]').val(data.technicianReport.adminName);
                $('#techForm3').find('input[name="superName"]').val(data.technicianReport.superName);
                $('#techForm3').find('input[name="technicianReport"]').val(data.technicianReport.id);
                $('#techForm3').find('input[name="dateAssigned"]').val(data.technicianReport.dateAssigned);
                $('#techForm3').find('input[name="dateVerified"]').val(data.hardwareVerify.dateVerified);
                $('#techForm3').find('input[name="name"]').val(data.hardwareVerify.name);
                $('#techForm3').find('input[name="nameApproval"]').val(data.hardwareApproval.nameApproval);
                $('#techForm3').find('input[name="dateApprove"]').val(data.hardwareApproval.dateApprove);
                $('#techForm3').find('input[name="technicianReport"]').val(data.hardwareApproval.id);
                $('#techForm3').find('textarea[name="remarksApproval"]').val(data.hardwareApproval.remarksApproval);
            }
        });
    });

    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/Findings',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=findingId]').append('<option value=""> Select Result</option>');
            $.each(data, function (index, value) {
                $('select[name=findingId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/hardware',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=hardwareId]').append('<option value=""> Select Hardware Service Category</option>');
            $.each(data, function (index, value) {
                $('select[name=hardwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/UnitType',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=unitTypeId]').append('<option value=""> Select UnitType</option>');
            $.each(data, function (index, value) {
                $('select[name=unitTypeId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });

    $('#saveManualReport').click(function (e) {
        e.preventDefault();

        var id = $('#reportmanual').find('input[name="technicianReportId"]').val();
        var data = $('#reportmanual').serialize();

        $.ajax({
            type: 'PUT',
            url: '/api/hardwareRequestv2/techReport/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#reportmanual').find('input[name="possibleCause"]').val("");
                $('#reportmanual').find('input[name="serialNumber"]').val("");
                $('#reportmanual').find('input[name="controlNumber"]').val("");
                $('#reportmanual').find('textarea[name="remarks"]').val("");

                $('#saveManualReport').modal('hide');
                //show please wait modal

                //show toastr after 3

                //$('#pleasewait').modal('show');

                //setTimeout(function () {
                //    toastr.success("File Successfully Added!");
                //    // hide please wait modal
                //}, 2000);
                //setTimeout(function () {
                //    $('#pleasewait').modal('hide');
                //    window.location.reload();
                //}, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Fill up Remarks")
            }
        });

        var valdata = $('#reportmanual').find('input[name="HardwareUserRequestId"]').val();
        var data = $('#reportmanual').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/manual/UpdateStatus/' + valdata,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#reportManualModal').modal('hide');
            },
            //if failed
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })

    });
    $('#saveManualReport').click(function (e) {
        e.preventDefault();
        var formData = new FormData(reportmanual);
        $.ajax({
            url: '/api/tech/saveFile',
            type: 'POST',
            data: formData,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#reportManualModal').modal('hide');
              /*  show please wait modal*/
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {

             // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    location.reload();
                }, 3000);
            },
            cache: false,
            contentType: false,
            processData: false,
            error: function (data) {
                toastr.error("Error Updating File")
            }
        });

    });

    $('#saveReport').click(function (e) {
        e.preventDefault();

        var id = $('#techForm2').find('input[name="technicianReportId"]').val();
        var data = $('#techForm2').serialize();

        $.ajax({
            type: 'PUT',
            url: '/api/hardwareRequest/techReport/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#techForm2').find('input[name="possibleCause"]').val("");
                $('#techForm2').find('input[name="serialNumber"]').val("");
                $('#techForm2').find('input[name="controlNumber"]').val("");
                $('#techForm2').find('textarea[name="remarks"]').val("");

                $('#TechnicianForm').modal('hide');
                //show please wait modal

                //show toastr after 3

                $('#pleasewait').modal('show');

                setTimeout(function () {
                    toastr.success("File Successfully Added!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Fill up Remarks")
            }
        });
    });

    $('#saveReport').click(function (e) {
        e.preventDefault();
        var valdata = $('#techForm2').find('input[name="HardwareUserRequestId"]').val();
        var data = $('#techForm2').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/User/UpdateStatus/' + valdata,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
            },
            //if failed
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });

    $('#hardwareRequestList').on('click', '.print', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;

        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#PrintModal').modal('show');

                $('#print').find('input[name="id"]').val(data.id);
                $('#print').find('input[name="ticket"]').val(data.hardwareUserRequest.ticket);
                $('#print').find('input[name="fullName"]').val(data.hardwareUserRequest.fullName);
                $('#print').find('input[name="hardwareName"]').val(data.hardwareName);
                $('#print').find('input[name="description"]').val(data.hardwareUserRequest.description);
                $('#print').find('input[name="departmentName"]').val(data.hardwareUserRequest.departmentName);
                $('#print').find('input[name="divisionName"]').val(data.hardwareUserRequest.divisionName);
                $('#print').find('input[name="technicianName"]').val(data.technicianName);
                $('#print').find('input[name="findingName"]').val(data.findingName);
                $('#print').find('input[name="possibleCause"]').val(data.possibleCause);
                $('#print').find('input[name="remarks"]').val(data.remarks);
                $('#print').find('input[name="dateStarted"]').val(data.dateStarted);
                $('#print').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#print').find('input[name="adminName"]').val(data.adminName);
                $('#print').find('input[name="superName"]').val(data.superName);
                $('#print').find('input[name="serialNumber"]').val(data.serialNumber);
                $('#print').find('input[name="controlNumber"]').val(data.controlNumber);
                $('#print').find('input[name="superName"]').val(data.superName);
                $('#print').find('input[name="adminName"]').val(data.adminName);
            }
        })
    });

    $('#hardwareRequestList').on('click', '.accept', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#AcceptModal').modal('show');
                $('#accepts').find('input[name="id"]').val(data.id);
                $('#accepts').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);
                $('#accepts').find('input[name="technicianReportId"]').val(data.id);

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#hardwareRequestList').on('click', '.edit', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#editModal').modal('show');
                $('#manualRequest').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);
                $('#manualRequest').find('input[name="firstName"]').val(data.hardwareUserRequest.firstName);
                $('#manualRequest').find('input[name="middleName"]').val(data.hardwareUserRequest.middleName);
                $('#manualRequest').find('input[name="lastName"]').val(data.hardwareUserRequest.lastName);
                $('#manualRequest').find('input[name="email"]').val(data.hardwareUserRequest.email);
                $('#manualRequest').find('input[name="mobileNumber"]').val(data.hardwareUserRequest.mobileNumber);
                $('#manualRequest').find('select[name="departmentsId"]').val(data.hardwareUserRequest.departmentsId);
                $('#manualRequest').find('select[name="divisionsId"]').val(data.hardwareUserRequest.divisionsId);
                $('#manualRequest').find('select[name="hardwareId"]').val(data.hardwareUserRequest.hardwareId);
                $('#manualRequest').find('select[name="unitTypeId"]').val(data.hardwareUserRequest.unitTypeId);
                $('#manualRequest').find('input[name="modelName"]').val(data.hardwareUserRequest.modelName);
                $('#manualRequest').find('input[name="brandName"]').val(data.hardwareUserRequest.brandName);
                $('#manualRequest').find('input[name="FileName"]').val(data.hardwareUserRequest.documentLabel);
                $('#manualRequest').find('textarea[name="description"]').val(data.hardwareUserRequest.description);
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#BtnAccept').click(function (e) {
        e.preventDefault();

        var hardwareRequestId = $('#accepts').find('input[name="hardwareUserRequestId"]').val();
        var data = $('#accepts').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/v2/IsNew/UserRequest/' + hardwareRequestId,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                console.log(data.id);
                $('#pleasewait').modal('show');

                $('#AcceptModal').modal('hide');
                setTimeout(function () {
                    toastr.success("File Successfully Added!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    table2.ajax.reload();
                }, 3000);
            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });

    $('#BtnAccept').click(function (e) {
        e.preventDefault();

        var id = $('#accepts').find('input[name="technicianReportId"]').val();
        var data = $('#accepts').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/started/UserRequest/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#AcceptModal').modal('hide');

            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/department',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            var html = '<option value="">Select Department</option>';
            $.each(data, function (i, item) {
                html += '<option value="' + item.id + '">' + item.name + '</option>';
            });
            $('select[name=departmentsId]').html(html);
            // render divisionsId select
            // console log on select change
            $('select[name=departmentsId]').on('change', function () {
                var depId = $('select[name=departmentsId]').val();
                $.ajax({
                    type: 'GET',
                    url: '/api/div/fetchbyid/' + depId,
                    headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                    },
                    success: function (data) {
                        var html = '<option value="0">Select Division</option>';
                        $.each(data, function (i, item) {
                            html += '<option value="' + item.id + '">' + item.name + '</option>';
                        });
                        //console.log(data);
                        $('select[name=divisionsId]').html(html);
                    }
                });
            });
        }
    });

    $('#saveReport').click(function (e) {
        e.preventDefault();
        var formData = new FormData(techForm2);
        $.ajax({
            url: '/api/tech/saveFile',
            type: 'POST',
            data: formData,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                //show please wait modal
                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {

                //    // hide please wait modal

                //}, 2000);
                //setTimeout(function () {
                //    location.reload();
                //    $('#upload2')[0].reset();
                //}, 3000);
            },
            cache: false,
            contentType: false,
            processData: false,
            error: function (data) {
                toastr.error("Error Updating File")
            }
        });

    });
    $.ajax({
        type: 'GET',
        url: '/api/User/division',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=divisionsId]').append('<option value=""> Select Division</option>');
            $.each(data, function (index, value) {
                $('select[name=divisionsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });

    $('#btnSubmit').click(function (e) {
        e.preventDefault();

        var hardwareRequestId = $('#manualRequest').find('input[name="hardwareUserRequestId"]').val();


        var firstName = $('#manualRequest').find('input[name="firstName"]').val();
        var middleName = $('#manualRequest').find('input[name="middleName"]').val();
        var lastName = $('#manualRequest').find('input[name="lastName"]').val();
        var email = $('#manualRequest').find('input[name="email"]').val();
        var mobileNumber = $('#manualRequest').find('input[name="mobileNumber"]').val();
        var departmentsId = $('#manualRequest').find('select[name="departmentsId"]').val();
        var divisionsId = $('#manualRequest').find('select[name="divisionsId"]').val();
        var hardwareId = $('#manualRequest').find('select[name="hardwareId"]').val();
        var modelName = $('#manualRequest').find('input[name="modelName"]').val();
        var unitTypeId = $('#manualRequest').find('select[name="unitTypeId"]').val();
        var brandName = $('#manualRequest').find('input[name="brandName"]').val();
        var documentLabel = $('#manualRequest').find('input[name="FileName"]').val();
        var description = $('#manualRequest').find('textarea[name="description"]').val();

        var data = {
            firstName: firstName,
            middleName: middleName,
            lastName: lastName,
            mobileNumber: mobileNumber,
            email:email,
            departmentsId: departmentsId,
            divisionsId: divisionsId,
            hardwareId: hardwareId,
            modelName: modelName,
            unitTypeId: unitTypeId,
            brandName: brandName,
            documentLabel: documentLabel,
            description: description
        };
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/edit/manual/techReport/' + hardwareRequestId,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                console.log(data.id);
                $('#pleasewait').modal('show');

                $('#editModal').modal('hide');
                setTimeout(function () {
                    toastr.success("File Successfully Updated!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    table2.ajax.reload();
                }, 3000);
            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
}
function HardwareOpenList() {
    var table2 = $("#hardwareRequestList").DataTable({
        "ajax": {
            "url": "/api/v4/all/hardReq",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        // "searching" : " true",
        // "searchDelay" : 1000,
        // order by desc dateuploaded
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"
        },
        "autoWidth": false,
        "columns": [
            {
                data: "ticket",
                render: function (data) {
                    return '<span class="shadow badge bg-info">' + data + '</span>'
                },
            },
            {
                data: "dateAdded"
            },
            {
                data: "fullName",

            },
            {
                data: "hardwareName"
            },
            {
                data: "status",
                render: function (data, type, row) {
                    if (data == "Open") {
                        return '<span class="shadow badge bg-secondary">' + data + '</span>'
                    }
                    else if (data == "In Progress") {
                        return '<span class="shadow badge bg-info">' + data + '</span>'
                    }
                    else if (data == "Resolved") {
                        return '<span class="shadow badge bg-success">' + data + '</span>'
                    }
                    else if (data == "Cancel") {
                        return '<span class="shadow badge bg-cancel">' + data + '</span>'
                    }
                }
            },
            {
                data: null
            }
        ],
        columnDefs:
            [{
                targets: [-1], render: function (a, b, data, d) {
                    if (data.status == "Open") {
                        return '<button class="btn btn-outline-primary btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }
                    else if (data.status == "In Progress") {
                        return '<button class="btn btn-outline-primary btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-gear"></i> Transaction </button>';
                    }
                    else if (data.status == "Resolved") {
                        return '<button class="btn btn-outline-primary btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>'

                    }
                    else if (data.status == "Verified") {
                        return '<button class="btn btn-outline-primary btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }
                    else if (data.status == "Approved") {
                        return '<button class="btn btn-outline-primary btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }
                },
                orderable: false,
                width: "100px",
            }]
    });

    $('#hardwareRequestList').on('click', '.transaction', function () {
        var id = $(this).attr('data-id');
        var url = '/api/userRequest/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#ReportModal').modal('show');
                $('#transactional').find('input[name="hardwareUserRequestId"]').val(data.id);
                var dataId = $('#transactional').find('input[name="hardwareUserRequestId"]').attr('value');
                var table = $('#techList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertask/getbyId/" + dataId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "hardwareTaskId",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return '<span class="badge shadow bg-info">Requested</span>'
                                }
                                else if (data == 2) {
                                    return '<span class="badge shadow bg-primary">Assigned</span>'
                                }
                                else if (data == 3) {
                                    return '<span class="badge shadow bg-success">Reported</span>'
                                }
                                else if (data == 4) {
                                    return '<span class="badge shadow bg-primary">Verified</span>'
                                }
                                else if (data == 5) {
                                    return '<span class="badge shadow bg-primary">Approved</span>'
                                }
                            }
                        },
                    ],
                });

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });

    $('#hardwareRequestList').on('click', '.assign', function () {
        var id = $(this).attr('data-id');
        var url = '/api/userRequest/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#TechnicianModal').modal('show');
                $('#assignTech').find('input[name="hardwareUserRequestId"]').val(data.id);
            }
        })
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/Technician',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=hardwareTechnicianId]').append('<option value=""> Select Technician</option>');
            $.each(data, function (index, value) {
                $('select[name=hardwareTechnicianId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });

    $('#updateTechnician').click(function (e) {
        e.preventDefault();
        var data = $('#assignTech').serialize();
        console.log(data)
        var id = $('#assignTech').find('input[name="id"]').val();
        var hardwareUserRequestId = $('#assignTech').find('input[name="hardwareUserRequestId"]').val();

        $.ajax({
            type: 'POST',
            url: '/api/v2/AssignTome/save',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#assignToMe').modal('hide');
                toastr.success(" Successfully Assigned The Request!");

            },
            //if failed
            error: function (data) {

                toastr.error("Fill up alll forms / Invalid")
            }
        });

    });
    $('#updateTechnician').click(function (e) {
        e.preventDefault();

        var id = $('#assignTech').find('input[name="hardwareUserRequestId"]').val();
        var data = $('#assignTech').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/accept/UserRequest/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
    $('#hardwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/userRequest/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="fullName"]').val(data.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.divisionName);
                $('#viewRequest').find('input[name="hardwareName"]').val(data.hardwareName);
                $('#viewRequest').find('input[name="modelName"]').val(data.modelName);
                $('#viewRequest').find('input[name="uniTypes"]').val(data.uniTypes);
                $('#viewRequest').find('input[name="brandName"]').val(data.brandName);
                $('#viewRequest').find('input[name="FileName"]').val(data.documentLabel);
                $('#viewRequest').find('textarea[name="description"]').val(data.description);

                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/userUploads/" + id,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },

                    ]
                });

            }
        })
    });


}
function HardwareProgress() {
    var table2 = $("#hardwareRequestList").DataTable({
        "ajax": {
            "url": "/api/v5/all/hardReq",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"
        },
        "autoWidth": false,
        "columns": [
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return '<span class="badge shadow bg-primary">' + row.hardwareUserRequest.ticket + '</span>'
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return row.hardwareUserRequest.dateAdded
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return row.hardwareUserRequest.fullName
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return row.hardwareUserRequest.hardwareName
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    if (row.hardwareUserRequest.status == "Accepts Request") {
                        return '<span class="shadow badge bg-info">In Progress</span>'
                    }
                    return '<span class="badge shadow bg-info">In Progress</span>'
                }
            },
            {
                data: "technicianName",
            },
            {
                data: "dateAssigned",
                render: function (data, type, row) {
                    if (data == null) {
                        return ' ';
                    }
                    else
                        return data;
                }
            },
            {
                data: null
            }
        ],
        columnDefs:
            [{
                targets: [-1], render: function (a, b, data, d) {
                    if (data.hardwareUserRequest.status == "Open") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success btn-sm assign me-2" data-id="' + data.id + '"><i class="bi bi-person-check"></i> Assign Technician </button>'
                    }
                    else if (data.hardwareUserRequest.status == "In Progress") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Accepts Request") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Manual") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';

                    }
                    else if (data.hardwareUserRequest.status == "Resolved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>'

                    }
                    else if (data.hardwareUserRequest.status == "Verified") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Approved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }
                },
                orderable: false,
                width: "100px"
            }]
    });
    $('#hardwareRequestList').on('click', '.transaction', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#ReportModal').modal('show');
                $('#transactional').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);


                var dataId = $('#transactional').find('input[name="hardwareUserRequestId"]').attr('value');
                var table = $('#techList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertask/getbyId/" + dataId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "hardwareTaskId",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return '<span class="badge shadow bg-info">Requested</span>'
                                }
                                else if (data == 2) {
                                    return '<span class="badge shadow bg-primary">Assigned</span>'
                                }
                                else if (data == 3) {
                                    return '<span class="badge shadow bg-success">Reported</span>'
                                }
                                else if (data == 4) {
                                    return '<span class="badge shadow bg-primary">Verified</span>'
                                }
                                else if (data == 5) {
                                    return '<span class="badge shadow bg-primary">Approved</span>'
                                }
                            }
                        },
                        {
                            data: "state"
                        }

                        //{
                        //    data: null,
                        //    //render: function (data) {
                        //    //    return '<button class="btn btn-outline-primary btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                        //    //},
                        //    //"orderable": false,
                        //},
                    ],
                    //columnDefs:
                    //    [{
                    //        targets: [-1], render: function (a, b, data, d) {
                    //            if (data.hardwareTaskId == 1) {
                    //                return ''
                    //            }
                    //             if (data.hardwareTaskId ==  2 ) {
                    //                return  '';
                    //            }
                    //            else if (data.status == "Resolved") {
                    //                return '<button class="btn btn-outline-primary btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';

                    //            }
                    //            else if (data.status == "Cancel") {
                    //                return '<button class="btn btn-outline-primary btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    //            }

                    //        },
                    //        orderable: false,
                    //        width: "240px"
                    //    }]

                });

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#hardwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);
                $('#viewRequest').find('input[name="fullName"]').val(data.hardwareUserRequest.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.hardwareUserRequest.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.hardwareUserRequest.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.hardwareUserRequest.divisionName);
                $('#viewRequest').find('input[name="hardwareName"]').val(data.hardwareUserRequest.hardwareName);
                $('#viewRequest').find('input[name="modelName"]').val(data.hardwareUserRequest.modelName);
                $('#viewRequest').find('input[name="uniTypes"]').val(data.hardwareUserRequest.uniTypes);
                $('#viewRequest').find('input[name="brandName"]').val(data.hardwareUserRequest.brandName);
                $('#viewRequest').find('input[name="FileName"]').val(data.hardwareUserRequest.documentLabel);
                $('#viewRequest').find('textarea[name="description"]').val(data.hardwareUserRequest.description);
                $('#techForm').find('input[name="technicianName"]').val(data.technicianName);
                $('#techForm').find('input[name="hardwareName"]').val(data.hardwareName);
                $('#techForm').find('input[name="uniTypes"]').val(data.uniTypes);
                $('#techForm').find('input[name="brandName"]').val(data.brandName);
                $('#techForm').find('input[name="modelName"]').val(data.modelName);
                $('#techForm').find('input[name="findingName"]').val(data.findingName);
                $('#techForm').find('input[name="possibleCause"]').val(data.possibleCause);
                $('#techForm').find('input[name="serialNumber"]').val(data.serialNumber);
                $('#techForm').find('input[name="controlNumber"]').val(data.controlNumber);
                $('#techForm').find('textarea[name="remarks"]').val(data.remarks);
                $('#techForm').find('input[name="dateStarted"]').val(data.dateStarted);
                $('#techForm').find('input[name="dateEnded"]').val(data.dateEnded);

                var dataId = $('input[name="hardwareUserRequestId"]').attr('value');
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/userUploads/" + dataId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },

                    ]
                });


            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });

    $('#hardwareRequestList').on('click', '.re-assign', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#TechnicianModal').modal('show');
                $('#assignTech').find('input[name="id"]').val(data.id);
                $('#assignTech').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);


            }
        })
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/Technician',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=hardwareTechnicianId]').append('<option value=""> Select Technician</option>');
            $.each(data, function (index, value) {
                $('select[name=hardwareTechnicianId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    $('#updateTechnician').click(function (e) {
        e.preventDefault();

        var id = $('#assignTech').find('input[name="id"]').val();
        var data = $('#assignTech').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/admin/Re-assign/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#pleasewait').modal('show');

                $('#TechnicianModal').modal('hide');
                setTimeout(function () {
                    toastr.success("File Successfully updated!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    table2.ajax.reload();
                }, 3000);
            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
}
function HardwareProgressList() {
    var table2 = $("#hardwareRequestList").DataTable({
        "ajax": {
            "url": "/api/v5/all/hardReq",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        //"fnInitComplete": function () {
        //    this.api()
        //        .columns([4])
        //        .every(function () {
        //            var column = this;

        //            // Create select element and listener
        //            var select = $('<select class="form-control"><option value="">Show All</option></select>')
        //                .appendTo($(column.header()).empty())
        //                .on('change', function () {
        //                    var val = DataTable.util.escapeRegex($(this).val());
        //                    $('#pleasewait').modal('show');
        //                    setTimeout(function () {
        //                        $('#pleasewait').modal('hide');
        //                    }, 700);
        //                    $('#hardwareRequestList').DataTable().search(this.value).draw();
        //                });



        //            // Add list of options
        //            column
        //                .data()
        //                .unique()
        //                .sort()
        //                .each(function (d, j) {
        //                    select.append('<option value="' + d + '">' + d + '</option>');
        //                });
        //        }); 

        //},
        "ordering": "true",
        "paging": "true",
         "searching" : " true",
         "searchDelay" : 1000,
        // order by desc dateuploaded
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"
        },
        "autoWidth": false,
        "columns": [
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return '<span class="badge shadow bg-primary">' + row.hardwareUserRequest.ticket + '</span>'
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return row.hardwareUserRequest.dateAdded
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return row.hardwareUserRequest.fullName
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return row.hardwareUserRequest.hardwareName
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    if (row.hardwareUserRequest.status == "Accepts Request") {
                        return '<span class="shadow badge bg-info">In Progress</span>'
                    }
                    return '<span class="badge shadow bg-info">In Progress</span>'
                }
            },
            {
                data: "technicianName",
            },
            {
                data: null
            }
        ],
        columnDefs:
            [{
                targets: [-1], render: function (a, b, data, d) {
                    if (data.hardwareUserRequest.status == "Open") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success btn-sm assign me-2" data-id="' + data.id + '"><i class="bi bi-person-check"></i> Assign Technician </button>'
                    }
                    else if (data.hardwareUserRequest.status == "In Progress") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn ms-1  mt-1 btn-outline-success btn-sm re-assign me-2" data-id="' + data.id + '"><i class="bi bi-person-fill"></i> Re-assign Technician </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Accepts Request") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn ms-1 mt-2 btn-outline-success btn-sm re-assign me-2" data-id="' + data.id + '"><i class="bi bi-person-fill"></i> Re-assign Technician </button>';
                        ;
                    }
                    else if (data.hardwareUserRequest.status == "Manual") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn ms-1 mt-2 btn-outline-success btn-sm re-assign me-2" data-id="' + data.id + '"><i class="bi bi-person-fill"></i> Re-assign Technician </button>';

                    }
                    else if (data.hardwareUserRequest.status == "Resolved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>'

                    }
                    else if (data.hardwareUserRequest.status == "Verified") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Approved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }
                },
                orderable: false,
                width: "200px"
            }]
    });
    $('.hardwareTechnician').select2({
        theme: 'bootstrap-5',
        dropdownParent: $('#TechnicianModal .modal-content')
    });
    $('#hardwareRequestList').on('click', '.transaction', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#ReportModal').modal('show');
                $('#transactional').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);


                var dataId = $('#transactional').find('input[name="hardwareUserRequestId"]').attr('value');
                var table = $('#techList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertask/getbyId/" + dataId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "hardwareUserRequestId",
                            render: function (data, type, row) {
                                return '<span class="badge shadow bg-primary">'+ row.hardwareUserRequest.ticket +'</span>'
                            }
                        },
                        {
                            data: "hardwareUserRequest.fullName"
                        },
                        {
                            data: "hardwareTaskId",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return '<span class="badge shadow bg-info">Requested</span>'
                                }
                                else if (data == 2) {
                                    return '<span class="badge shadow bg-primary">Assigned</span>'
                                }
                                else if (data == 3) {
                                    return '<span class="badge shadow bg-success">Reported</span>'
                                }
                                else if (data == 4) {
                                    return '<span class="badge shadow bg-primary">Verified</span>'
                                }
                                else if (data == 5) {
                                    return '<span class="badge shadow bg-primary">Approved</span>'
                                }
                            }
                        },
                    ],
                });

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#hardwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);
                $('#viewRequest').find('input[name="ticket"]').val(data.hardwareUserRequest.ticket);

                $('#viewRequest').find('input[name="dateAdded"]').val(data.hardwareUserRequest.dateAdded);

                $('#viewRequest').find('input[name="fullName"]').val(data.hardwareUserRequest.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.hardwareUserRequest.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.hardwareUserRequest.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.hardwareUserRequest.divisionName);
                $('#viewRequest').find('input[name="hardwareName"]').val(data.hardwareUserRequest.hardwareName);
                $('#viewRequest').find('input[name="modelName"]').val(data.hardwareUserRequest.modelName);
                $('#viewRequest').find('input[name="uniTypes"]').val(data.hardwareUserRequest.uniTypes);
                $('#viewRequest').find('input[name="brandName"]').val(data.hardwareUserRequest.brandName);
                $('#viewRequest').find('input[name="FileName"]').val(data.hardwareUserRequest.documentLabel);
                $('#viewRequest').find('textarea[name="description"]').val(data.hardwareUserRequest.description);
                $('#techForm').find('input[name="technicianName"]').val(data.technicianName);
                $('#techForm').find('input[name="hardwareName"]').val(data.hardwareName);
                $('#techForm').find('input[name="uniTypes"]').val(data.uniTypes);
                $('#techForm').find('input[name="brandName"]').val(data.brandName);
                $('#techForm').find('input[name="modelName"]').val(data.modelName);
                $('#techForm').find('input[name="findingName"]').val(data.findingName);
                $('#techForm').find('input[name="possibleCause"]').val(data.possibleCause);
                $('#techForm').find('input[name="serialNumber"]').val(data.serialNumber);
                $('#techForm').find('input[name="controlNumber"]').val(data.controlNumber);
                $('#techForm').find('textarea[name="remarks"]').val(data.remarks);
                $('#techForm').find('input[name="dateStarted"]').val(data.dateStarted);
                $('#techForm').find('input[name="dateEnded"]').val(data.dateEnded);

                var dataId = $('input[name="hardwareUserRequestId"]').attr('value');
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/userUploads/" + dataId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },

                    ]
                });


            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });

    $('#hardwareRequestList').on('click', '.re-assign', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#TechnicianModal').modal('show');
                $('#assignTech').find('input[name="id"]').val(data.id);
                $('#assignTech').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);


            }
        })
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/Technician',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=hardwareTechnicianId]').append('<option value=""> Select Technician</option>');
            $.each(data, function (index, value) {
                $('select[name=hardwareTechnicianId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    $('#updateTechnician').click(function (e) {
        e.preventDefault();

        var id = $('#assignTech').find('input[name="id"]').val();
        var data = $('#assignTech').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/admin/Re-assign/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#pleasewait').modal('show');

                $('#TechnicianModal').modal('hide');
                setTimeout(function () {
                    toastr.success("File Successfully updated!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    table2.ajax.reload();
                }, 3000);
            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
}
function HardwareResolved() {
    var table2 = $("#hardwareRequestList").DataTable({
        "ajax": {
            "url": "/api/v2/resolved",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        // "searching" : " true",
        // "searchDelay" : 1000,
        // order by desc dateuploaded
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"
        },
        "autoWidth": false,
        "columns": [
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return '<span class="badge shadow bg-info">' + row.hardwareUserRequest.ticket + '</span>'
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return row.hardwareUserRequest.dateAdded
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return row.hardwareUserRequest.fullName
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return row.hardwareUserRequest.hardwareName
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return '<span class="badge shadow bg-success">' + row.hardwareUserRequest.status + '</span>'
                }
            },
            {
                data: "technicianName",
            },
            {
                data: null
            }
        ],
        columnDefs:
            [{
                targets: [-1], render: function (a, b, data, d) {
                    if (data.hardwareUserRequest.status == "Open") {
                        return '<button class="btn btn-outline-primary btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success btn-sm assign me-2" data-id="' + data.id + '"><i class="bi bi-person-check"></i> Assign Technician </button>'
                    }
                    else if (data.hardwareUserRequest.status == "In Progress") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-gear"></i> Transaction </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Resolved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';

                    }
                    else if (data.hardwareUserRequest.status == "Verified") {
                        return '<button class="btn btn-outline-primary btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Approved") {
                        return '<button class="btn btn-outline-primary btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }
                },
                orderable: false,
                width: "200px"
            }]
    });

    $('#hardwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);
                $('#viewRequest').find('input[name="fullName"]').val(data.hardwareUserRequest.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.hardwareUserRequest.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.hardwareUserRequest.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.hardwareUserRequest.divisionName);
                $('#viewRequest').find('input[name="hardwareName"]').val(data.hardwareUserRequest.hardwareName);
                $('#viewRequest').find('input[name="modelName"]').val(data.hardwareUserRequest.modelName);
                $('#viewRequest').find('input[name="uniTypes"]').val(data.hardwareUserRequest.uniTypes);
                $('#viewRequest').find('input[name="brandName"]').val(data.hardwareUserRequest.brandName);
                $('#viewRequest').find('input[name="FileName"]').val(data.hardwareUserRequest.documentLabel);
                $('#viewRequest').find('textarea[name="description"]').val(data.hardwareUserRequest.description);
                $('#techForm').find('input[name="technicianName"]').val(data.technicianName);

                $('#techForm').find('input[name="hardwareName"]').val(data.hardwareName);
                $('#techForm').find('input[name="uniTypes"]').val(data.uniTypes);
                $('#techForm').find('input[name="brandName"]').val(data.brandName);
                $('#techForm').find('input[name="modelName"]').val(data.modelName);
                $('#techForm').find('input[name="findingName"]').val(data.findingName);
                $('#techForm').find('input[name="possibleCause"]').val(data.possibleCause);
                $('#techForm').find('input[name="serialNumber"]').val(data.serialNumber);
                $('#techForm').find('input[name="controlNumber"]').val(data.controlNumber);
                $('#techForm').find('textarea[name="remarks"]').val(data.remarks);
                $('#techForm').find('input[name="dateStarted"]').val(data.dateStarted);

                $('#techForm').find('input[name="dateAssigned"]').val(data.dateAssigned);
                $('#techForm').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#techForm').find('input[name="adminName"]').val(data.adminName);
                $('#techForm').find('input[name="superName"]').val(data.superName);
                $('#techForm').find('input[name="technicianReportId"]').val(data.id);

                if (data.hardwareUserRequest.status == "Open")
                    $('.update-image').prop('disabled', true)

                else if (data.hardwareUserRequest.status == "In Progress")
                    $('.update-image').prop('disabled', true)

                else if (data.hardwareUserRequest.status == "Accepts Request")
                    $('.update-image').prop('disabled', true)

                else if (data.hardwareUserRequest.status == "Resolved")
                    $('.update-image').prop('disabled', false)

                else if (data.hardwareUserRequest.status == "Verified")
                    $('.update-image').prop('disabled', true)

                else if (data.hardwareUserRequest.status == "Approved")
                    $('.update-image').prop('disabled', true)
                else if (data.hardwareUserRequest.status == "Cancel")
                    $('.update-image').prop('disabled', true)
                else
                    $('.update-image').prop('disabled', false)
                var dataId = $('input[name="hardwareUserRequestId"]').attr('value');
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/userUploads/" + dataId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },

                    ]
                });

                var techId = $('input[name="technicianReportId"]').attr('value');
                var uploadTable = $('#TechUploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/techUploads/get/" + techId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ]
                });

                $('#upload2').find('input[name=technicianReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=technicianReportId]').find('option[value=' + data.id + ']').remove();
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });

    $('#hardwareRequestList').on('click', '.transaction', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#ReportModal').modal('show');
                $('#transactional').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);


                var dataId = $('#transactional').find('input[name="hardwareUserRequestId"]').attr('value');
                var table = $('#techList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertask/getbyId/" + dataId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "hardwareUserRequestId",
                            render: function (data, type, row) {
                                return  '<span class="badge shadow bg-primary">' + row.hardwareUserRequest.ticket +'</span>'
                            }
                        },
                        {
                            data: "hardwareUserRequest.fullName"
                        },
                        {
                            data: "hardwareTaskId",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return '<span class="badge shadow bg-secondary">Requested</span>'
                                }
                                else if (data == 2) {
                                    return '<span class="badge shadow bg-info">Assigned</span>'
                                }
                                else if (data == 3) {
                                    return '<span class="badge shadow bg-success">Reported</span>'
                                }
                                else if (data == 4) {
                                    return '<span class="badge shadow bg-primary">Verified</span>'
                                }
                                else if (data == 5) {
                                    return '<span class="badge shadow bg-warning">Approved</span>'
                                }
                            }
                        },
                    ],
                });

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#hardwareRequestList').on('click', '.verify', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#verifiedModal').modal('show');
                $('#verify').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);
                $('#verify').find('input[name="technicianReportId"]').val(data.id);
            }
        })
    });

    $('#verified').click(function (e) {
        e.preventDefault();
        var data = $('#verify').serialize();
        console.log(data)
        var id = $('#verify').find('input[name="technicianReportId"]').val();
        var hardwareUserRequestId = $('#verify').find('input[name="hardwareUserRequestId"]').val();

        $.ajax({
            type: 'POST',
            url: '/api/verified/save',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#pleasewait').modal('show');
                $('#verifiedModal').modal('hide');
                setTimeout(function () {
                    toastr.success(" Successfully Verified The Request!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                console.log(data);
                toastr.error("Fill up alll forms / Invalid")
            }
        });

    });

    $('#verified').click(function (e) {
        e.preventDefault();

        var id = $('#verify').find('input[name="hardwareUserRequestId"]').val();
        var data = $('#verify').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/v2/status/UserRequest/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });

    $('#verified').click(function (e) {
        e.preventDefault();

        var id = $('#verify').find('input[name="technicianReportId"]').val();
        var data = $('#verify').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/verified/UserRequest/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
}
function HardwareResolvedList() {
    var table2 = $("#hardwareRequestList").DataTable({
        "ajax": {
            "url": "/api/v2/resolved",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"
        },
        "autoWidth": false,
        "columns": [
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return '<span class="badge shadow bg-primary">' + row.hardwareUserRequest.ticket + '</span>'
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return row.hardwareUserRequest.dateAdded
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return row.hardwareUserRequest.fullName
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    if (row.hardwareUserRequest.isManual == 1) {
                        return 'Manul Request';
                    }
                    else
                        return 'User Request';

                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return row.hardwareUserRequest.hardwareName
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return '<span class="badge shadow bg-success">' + row.hardwareUserRequest.status + '</span>'
                }
            },
            {
                data: "technicianName",
            },
            {
                data: null
            }
        ],
        columnDefs:
            [{
                targets: [-1], render: function (a, b, data, d) {
                    if (data.hardwareUserRequest.status == "Open") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success btn-sm assign me-2" data-id="' + data.id + '"><i class="bi bi-person-check"></i> Assign Technician </button>'
                    }
                    else if (data.hardwareUserRequest.status == "In Progress") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Resolved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn ms-1 btn-outline-primary btn-sm back me-2" data-id="' + data.id + '"><i class="bi bi-person-fill"></i> Return To Technician </button>' +
                            '<button class="btn btn-outline-success btn-sm verify mt-2 me-2" data-id="' + data.id + '"><i class="bi bi-check2-square"></i> Verify </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Verified") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Approved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }
                },
                orderable: false,
                width: "280px"
            }]
    });

    $('#hardwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);
                $('#viewRequest').find('input[name="fullName"]').val(data.hardwareUserRequest.fullName);
                $('#viewRequest').find('input[name="ticket"]').val(data.hardwareUserRequest.ticket);
                $('#viewRequest').find('input[name="dateAdded"]').val(data.hardwareUserRequest.dateAdded);

                $('#techForm').find('input[name="dateAssigned"]').val(data.dateAssigned);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.hardwareUserRequest.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.hardwareUserRequest.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.hardwareUserRequest.divisionName);
                $('#viewRequest').find('input[name="hardwareName"]').val(data.hardwareUserRequest.hardwareName);
                $('#viewRequest').find('input[name="modelName"]').val(data.hardwareUserRequest.modelName);
                $('#viewRequest').find('input[name="uniTypes"]').val(data.hardwareUserRequest.uniTypes);
                $('#viewRequest').find('input[name="brandName"]').val(data.hardwareUserRequest.brandName);
                $('#viewRequest').find('input[name="FileName"]').val(data.hardwareUserRequest.documentLabel);
                $('#viewRequest').find('textarea[name="description"]').val(data.hardwareUserRequest.description);
                $('#techForm').find('input[name="hardwareName"]').val(data.hardwareName);
                $('#techForm').find('input[name="uniTypes"]').val(data.uniTypes);
                $('#techForm').find('input[name="brandName"]').val(data.brandName);
                $('#techForm').find('input[name="technicianName"]').val(data.technicianName);
                $('#techForm').find('input[name="modelName"]').val(data.modelName);
                $('#techForm').find('input[name="findingName"]').val(data.findingName);
                $('#techForm').find('input[name="possibleCause"]').val(data.possibleCause);
                $('#techForm').find('input[name="serialNumber"]').val(data.serialNumber);
                $('#techForm').find('input[name="controlNumber"]').val(data.controlNumber);
                $('#techForm').find('textarea[name="remarks"]').val(data.remarks);
                $('#techForm').find('input[name="dateStarted"]').val(data.dateStarted);
                $('#techForm').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#techForm').find('input[name="adminName"]').val(data.adminName);
                $('#techForm').find('input[name="superName"]').val(data.superName);
                $('#techForm').find('input[name="technicianReportId"]').val(data.id);
                if (data.hardwareUserRequest.status == "Open")
                    $('.update-image').prop('disabled', true)

                else if (data.hardwareUserRequest.status == "In Progress")
                    $('.update-image').prop('disabled', true)

                else if (data.hardwareUserRequest.status == "Accepts Request")
                    $('.update-image').prop('disabled', true)

                else if (data.hardwareUserRequest.status == "Resolved")
                    $('.update-image').prop('disabled', false)

                else if (data.hardwareUserRequest.status == "Verified")
                    $('.update-image').prop('disabled', true)

                else if (data.hardwareUserRequest.status == "Approved")
                    $('.update-image').prop('disabled', true)
                else if (data.hardwareUserRequest.status == "Cancel")
                    $('.update-image').prop('disabled', true)
                else
                    $('.update-image').prop('disabled', false)

                var dataId = $('#hardwareUserRequestId').attr('value');
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/userUploads/" + dataId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },

                    ]
                });




                var techId = $('input[name="technicianReportId"]').attr('value');
                var uploadTable = $('#TechUploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/techUploads/get/" + techId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                       
                    ],
                   
                });

                $('#upload2').find('input[name=technicianReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=technicianReportId]').find('option[value=' + data.id + ']').remove();
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });

    $('#hardwareRequestList').on('click', '.transaction', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#ReportModal').modal('show');
                $('#transactional').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);


                var dataId = $('#transactional').find('input[name="hardwareUserRequestId"]').attr('value');
                var table = $('#techList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertask/getbyId/" + dataId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "hardwareTaskId",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return '<span class="badge shadow bg-info">Requested</span>'
                                }
                                else if (data == 2) {
                                    return '<span class="badge shadow bg-primary">Assigned</span>'
                                }
                                else if (data == 3) {
                                    return '<span class="badge shadow bg-success">Reported</span>'
                                }
                                else if (data == 4) {
                                    return '<span class="badge shadow bg-primary">Verified</span>'
                                }
                                else if (data == 5) {
                                    return '<span class="badge shadow bg-primary">Approved</span>'
                                }
                            }
                        },
                        
                    ],

                });

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#hardwareRequestList').on('click', '.verify', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#verifiedModal').modal('show');
                $('#verify').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);
                $('#verify').find('input[name="technicianReportId"]').val(data.id);
            }
        })
    });

    $('#verified').click(function (e) {
        e.preventDefault();
        var data = $('#verify').serialize();
        console.log(data)
        var id = $('#verify').find('input[name="technicianReportId"]').val();
        var hardwareUserRequestId = $('#verify').find('input[name="hardwareUserRequestId"]').val();

        $.ajax({
            type: 'POST',
            url: '/api/verified/save',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#verifiedModal').modal('hide');
                $('#pleasewait').modal('show');
                setTimeout(function () {
                    toastr.success("File Successfully Verified!");
                    // hide please wait modal
                }, 1000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    window.location.reload();
                }, 1000);
            },
            //if failed
            error: function (data) {
                console.log(data);
                toastr.error("Fill up alll forms / Invalid")
            }
        });

    });

    $('#verified').click(function (e) {
        e.preventDefault();

        var id = $('#verify').find('input[name="hardwareUserRequestId"]').val();
        var data = $('#verify').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/v2/status/UserRequest/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });

    $('#verified').click(function (e) {
        e.preventDefault();

        var id = $('#verify').find('input[name="technicianReportId"]').val();
        var data = $('#verify').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/verified/UserRequest/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });

    $('#hardwareRequestList').on('click', '.back', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#BackModal').modal('show');
                $('#resolved').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);
                $('#resolved').find('input[name="technicianReportId"]').val(data.id);
            }
        })
    });

    $('#return').click(function (e) {
        e.preventDefault();

        var id = $('#resolved').find('input[name="hardwareUserRequestId"]').val();
        var data = $('#resolved').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/v4/hardwareRequest/techReport/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#BackModal').modal('hide');
                $('#pleasewait').modal('show');
                setTimeout(function () {
                    toastr.success("File Successfully Verified!");
                    // hide please wait modal
                }, 1000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    window.location.reload();
                }, 1000);
            },
            //if faile
            error: function (data) {
                console.log(data.id);
            }
        })
    });

    $('#return').click(function (e) {
        e.preventDefault();

        var valdata = $('#resolved').find('input[name="technicianReportId"]').val();
        var data = $('#resolved').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/v5/hardwareRequest/techReport/' + valdata,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
            },
            //if faile
            error: function (data) {
                console.log(data.id);
            }
        })
    });
}
function UserRequestList() {
    var table2 = $("#hardwareRequestList").DataTable({
        "ajax": {
            "url": "/api/v2/all/hardReq",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "fnInitComplete": function () {
            this.api()
                .columns([4])
                .every(function () {
                    var column = this;

                    // Create select element and listener
                    var select = $('<select class="form-control"><option value="">Show All</option></select>')
                        .appendTo($(column.header()).empty())
                        .on('change', function () {
                            var val = DataTable.util.escapeRegex($(this).val());
                            $('#pleasewait').modal('show');
                            setTimeout(function () {
                                $('#pleasewait').modal('hide');
                            }, 700);
                            $('#hardwareRequestList').DataTable().search(this.value).draw();
                        });

                    // Add list of options
                    column
                        .data()
                        .unique()
                        .sort()
                        .each(function (d, j) {
                            select.append('<option value="' + d + '">' + d + '</option>');
                        });
                });

        },
         "searching" : " true",
         "searchDelay" : 1000,
        // order by desc dateuploaded
        "order": [[1, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [
            {
                data: null,
                render: function (data) {
                    return '<span class="shadow badge bg-primary">' + data.ticket + '</span>'
                }
            },
            {
                data: "dateAdded",
            },
            {
                data: "fullName",
            },
            {
                data: "hardwareName",
            },
            {
                data: "status",
                render: function (data, type, row) {
                    if (row.status == "Open") {
                        return '<span class="badge shadow  bg-secondary">Open</span>'
                    }
                    else if (row.status == "In Progress") {
                        return '<span class="badge shadow  bg-info">In Progress</span>'
                    }
                    else if (row.status == "Accepts Request") {
                        return '<span class="badge shadow  bg-info">In Progress</span>'
                    }
                    else if (row.status == "Resolved") {
                        return '<span class="badge shadow  bg-success">Resolved</span>'
                    }
                    else if (row.status == "Verified") {
                        return '<span class="badge shadow  bg-primary">Verified</span>'
                    }
                    else if (row.status == "Cancel") {
                        return '<span class="badge shadow  bg-danger">Cancel</span>'
                    }
                    return '<span class="badge shadow  bg-success">Resolved</span>'
                }
            },
            {
                data: null
            }
        ],
        "columnDefs": [{
            targets: [-1], render: function (a, b, data, d) {
                if (data.status == "Open") {
                    return '<button class="btn btn-outline-primary btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                        '<button class="btn btn-outline-success btn-sm assign me-2" data-id="' + data.id + '"><i class="bi bi-person-check"></i> Assign To me</button>'
                }
                else if (data.status == "In Progress") {
                    return '<button class="btn btn-outline-primary btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.status == "Resolved") {
                    return '<button class="btn btn-outline-primary btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.status == "Verified") {
                    return '<button class="btn btn-outline-primary btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.status == "Approved") {
                    return '<button class="btn btn-outline-primary btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.status == "Cancel") {
                    return '<button class="btn btn-outline-primary btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else
                    return '<button class="btn btn-outline-primary btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
            },
            orderable: false,
            width: "220px"
        }]
    });


    $('#hardwareRequestList').on('click', '.assign', function () {
        var id = $(this).attr('data-id');
        var url = '/api/userRequest/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#assignToMe').modal('show');
                $('#assignTomeform').find('input[name="hardwareUserRequestId"]').val(data.id);
            }
        })
    });

    $('#assignBtn').click(function (e) {
        e.preventDefault();
        var data = $('#assignTomeform').serialize();
        //console.log(data)
        //var id = $('#assignTech').find('input[name="id"]').val();
        //var hardwareUserRequestId = $('#assignTech').find('input[name="hardwareUserRequestId"]').val();

        $.ajax({
            type: 'POST',
            url: '/api/AssignTome/hardware/save',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                $('#assignToMe').modal('hide');
                $('#pleasewait').modal('show');

                setTimeout(function () {
                    toastr.success("File Successfully Assigned!");
                    // hide please wait modal
                }, 2000);
                $('#pleasewait').modal('hide');

                setTimeout(function () {
                    window.location.href = "/HardwareRequest/Index";
                }, 3000);
            },
            //if failed
            error: function (data) {

                toastr.error("Fill up alll forms / Invalid")
            }
        });

    });
    $('#assignBtn').click(function (e) {
        e.preventDefault();

        var id = $('#assignTomeform').find('input[name="hardwareUserRequestId"]').val();
        var data = $('#assignTomeform').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/IsNew/UserRequest/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
            },
            //if failed
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });


    $('#hardwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/userRequest/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="ticket"]').val(data.ticket);
                $('#viewRequest').find('input[name="dateAdded"]').val(data.dateAdded);
                $('#viewRequest').find('input[name="fullName"]').val(data.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.divisionName);
                $('#viewRequest').find('input[name="hardwareName"]').val(data.hardwareName);
                $('#viewRequest').find('input[name="modelName"]').val(data.modelName);
                $('#viewRequest').find('input[name="uniTypes"]').val(data.uniTypes);
                $('#viewRequest').find('input[name="brandName"]').val(data.brandName);
                $('#viewRequest').find('input[name="FileName"]').val(data.documentLabel);
                $('#viewRequest').find('textarea[name="description"]').val(data.description);

                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,

                    ajax: {
                        url: "/api/v2/userUploads/" + id,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },

                    ]
                });

            }
        })
    });

}
function HardwareVerifiedList() {
    var table2 = $("#hardwareRequestList").DataTable({
        "ajax": {
            "url": "/api/v2/verified",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"
        },
        "autoWidth": false,
        "columns": [
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return '<span class="badge shadow bg-info">' + row.hardwareUserRequest.ticket + '</span>'
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return row.hardwareUserRequest.dateAdded
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return row.hardwareUserRequest.fullName
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    return row.hardwareUserRequest.hardwareName
                }
            },
            {
                data: "hardwareUserRequestId",
                render: function (data, type, row) {
                    if (row.hardwareUserRequest.status == "Open") {
                        return '<span class="shadow badge bg-secondary"> Open</span>'
                    }
                    else if (row.hardwareUserRequest.status == "In Progress") {
                        return '<span class="shadow badge bg-info"> In Progress</span>'
                    }
                    else if (row.hardwareUserRequest.status == "Resolved") {
                        return '<span class="shadow badge bg-success"> Resolves</span>'
                    }
                    else if (row.hardwareUserRequest.status == "Verified") {
                        return '<span class="shadow badge bg-primary"> Verified</span>'
                    }
                    else if (row.hardwareUserRequest.status == "Approved") {
                        return '<span class="shadow badge bg-success"> Approved</span>'
                    }
                    else if (row.hardwareUserRequest.status == "Cancel") {
                        return '<span class="shadow badge bg-secondary"> Open</span>'
                    }
                }
            },
            {
                data: "technicianName",
            },
            {
                data: null
            }
        ],
        columnDefs:
            [{
                targets: [-1], render: function (a, b, data, d) {
                    if (data.hardwareUserRequest.status == "Open") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success btn-sm assign me-2" data-id="' + data.id + '"><i class="bi bi-person-check"></i> Assign Technician </button>'
                    }
                    else if (data.hardwareUserRequest.status == "In Progress") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-gear"></i> Transaction </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Resolved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn btn-outline-success btn-sm verify me-2" data-id="' + data.id + '"><i class="bi bi-gear"></i> Verify </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Verified") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn btn-outline-dark btn-sm print me-2" data-id="' + data.id + '"><i class="bi bi-printer"></i> Print </button>';
                    }
                    else if (data.hardwareUserRequest.status == "Approved") {
                        return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                },
                orderable: false,
                width: "290px"
            }]
    });
    $('#hardwareRequestList').on('click', '.print', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;

        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#PrintModal').modal('show');

                $('#print').find('input[name="id"]').val(data.id);
                $('#print').find('input[name="ticket"]').val(data.hardwareUserRequest.ticket);
                $('#print').find('input[name="fullName"]').val(data.hardwareUserRequest.fullName);
                $('#print').find('input[name="hardwareName"]').val(data.hardwareName);
                $('#print').find('input[name="description"]').val(data.hardwareUserRequest.description);
                $('#print').find('input[name="departmentName"]').val(data.hardwareUserRequest.departmentName);
                $('#print').find('input[name="divisionName"]').val(data.hardwareUserRequest.divisionName);
                $('#print').find('input[name="technicianName"]').val(data.technicianName);
                $('#print').find('input[name="findingName"]').val(data.findingName);
                $('#print').find('input[name="possibleCause"]').val(data.possibleCause);
                $('#print').find('input[name="remarks"]').val(data.remarks);
                $('#print').find('input[name="dateStarted"]').val(data.dateStarted);
                $('#print').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#print').find('input[name="adminName"]').val(data.adminName);
                $('#print').find('input[name="superName"]').val(data.superName);
                $('#print').find('input[name="serialNumber"]').val(data.serialNumber);
                $('#print').find('input[name="controlNumber"]').val(data.controlNumber);
                $('#print').find('input[name="superName"]').val(data.superName);
                $('#print').find('input[name="adminName"]').val(data.adminName);
            }
        })
    });
    $('#hardwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);
                $('#viewRequest').find('input[name="fullName"]').val(data.hardwareUserRequest.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.hardwareUserRequest.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.hardwareUserRequest.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.hardwareUserRequest.divisionName);
                $('#viewRequest').find('input[name="hardwareName"]').val(data.hardwareUserRequest.hardwareName);
                $('#viewRequest').find('input[name="modelName"]').val(data.hardwareUserRequest.modelName);
                $('#viewRequest').find('input[name="uniTypes"]').val(data.hardwareUserRequest.uniTypes);
                $('#viewRequest').find('input[name="brandName"]').val(data.hardwareUserRequest.brandName);
                $('#viewRequest').find('input[name="FileName"]').val(data.hardwareUserRequest.documentLabel);
                $('#viewRequest').find('textarea[name="description"]').val(data.hardwareUserRequest.description);
                $('#techForm').find('input[name="hardwareName"]').val(data.hardwareName);
                $('#techForm').find('input[name="technicianName"]').val(data.technicianName);
                $('#techForm').find('input[name="uniTypes"]').val(data.uniTypes);
                $('#techForm').find('input[name="brandName"]').val(data.brandName);
                $('#techForm').find('input[name="modelName"]').val(data.modelName);
                $('#techForm').find('input[name="findingName"]').val(data.findingName);
                $('#techForm').find('input[name="possibleCause"]').val(data.possibleCause);
                $('#techForm').find('input[name="serialNumber"]').val(data.serialNumber);
                $('#techForm').find('input[name="controlNumber"]').val(data.controlNumber);
                $('#techForm').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#techForm').find('input[name="dateStarted"]').val(data.dateStarted);
                $('#techForm').find('textarea[name="remarks"]').val(data.remarks);
                $('#techForm').find('input[name="technicianReportId"]').val(data.id);
                if (data.hardwareUserRequest.status == "Open")
                    $('.update-image').prop('disabled', true)

                else if (data.hardwareUserRequest.status == "In Progress")
                    $('.update-image').prop('disabled', true)

                else if (data.hardwareUserRequest.status == "Accepts Request")
                    $('.update-image').prop('disabled', true)

                else if (data.hardwareUserRequest.status == "Resolved")
                    $('.update-image').prop('disabled', false)

                else if (data.hardwareUserRequest.status == "Verified")
                    $('.update-image').prop('disabled', true)

                else if (data.hardwareUserRequest.status == "Approved")
                    $('.update-image').prop('disabled', true)
                else if (data.hardwareUserRequest.status == "Cancel")
                    $('.update-image').prop('disabled', true)
                else
                    $('.update-image').prop('disabled', false)

                var dataId = $('#hardwareUserRequestId').attr('value');
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/userUploads/" + dataId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },

                    ]
                });
                var dataId = $('input[name="hardwareUserRequestId"]').attr('value');
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/userUploads/" + dataId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },

                    ]
                });

                var techId = $('input[name="technicianReportId"]').attr('value');
                var uploadTable = $('#TechUploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/techUploads/get/" + techId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],
                });

                $('#upload2').find('input[name=technicianReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=technicianReportId]').find('option[value=' + data.id + ']').remove();
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#hardwareRequestList').on('click', '.transaction', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#ReportModal').modal('show');
                $('#transactional').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);


                var dataId = $('#transactional').find('input[name="hardwareUserRequestId"]').attr('value');
                var table = $('#techList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertask/getbyId/" + dataId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "hardwareTaskId",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return '<span class="badge shadow bg-secondary">Requested</span>'
                                }
                                else if (data == 2) {
                                    return '<span class="badge shadow bg-info">Assigned</span>'
                                }
                                else if (data == 3) {
                                    return '<span class="badge shadow bg-success">Reported</span>'
                                }
                                else if (data == 4) {
                                    return '<span class="badge shadow bg-primary">Verified</span>'
                                }
                                else if (data == 5) {
                                    return '<span class="badge shadow bg-danger">Approved</span>'
                                }
                            }
                        },
                    ],

                });

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });

    $('#techList').on('click', '.transac', function () {
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/techAssign/get/" + id,
            success: function (data) {
                $('#ReportModal').modal('hide');
                $('#transactionModal').modal('show');
                $('#techForm3').find('input[name="hardwareName"]').val(data.technicianReport.hardwareName);
                $('#techForm3').find('input[name="uniTypes"]').val(data.technicianReport.uniTypes);
                $('#techForm3').find('input[name="brandName"]').val(data.technicianReport.brandName);
                $('#techForm3').find('input[name="modelName"]').val(data.technicianReport.modelName);
                $('#techForm3').find('input[name="findingName"]').val(data.technicianReport.findingName);
                $('#techForm3').find('input[name="possibleCause"]').val(data.technicianReport.possibleCause);
                $('#techForm3').find('input[name="serialNumber"]').val(data.technicianReport.serialNumber);
                $('#techForm3').find('input[name="controlNumber"]').val(data.technicianReport.controlNumber);
                $('#techForm3').find('textarea[name="remarks"]').val(data.technicianReport.remarks);
                $('#techForm3').find('input[name="technicianName"]').val(data.technicianReport.technicianName);
                $('#techForm3').find('input[name="dateStarted"]').val(data.technicianReport.dateStarted);
                $('#techForm3').find('input[name="dateEnded"]').val(data.technicianReport.dateEnded);
                $('#techForm3').find('input[name="adminName"]').val(data.technicianReport.adminName);
                $('#techForm3').find('input[name="superName"]').val(data.technicianReport.superName);
                $('#techForm3').find('input[name="technicianReport"]').val(data.technicianReport.id);
                $('#techForm3').find('input[name="dateAssigned"]').val(data.technicianReport.dateAssigned);
                $('#techForm3').find('input[name="dateVerified"]').val(data.hardwareVerify.dateVerified);
                $('#techForm3').find('input[name="name"]').val(data.hardwareVerify.name);
                $('#techForm3').find('input[name="nameApproval"]').val(data.hardwareApproval.nameApproval);
                $('#techForm3').find('input[name="dateApprove"]').val(data.hardwareApproval.dateApprove);
                $('#techForm3').find('input[name="remarksApproval"]').val(data.hardwareApproval.remarksApproval);
                $('#techForm3').find('input[name="technicianReport"]').val(data.hardwareApproval.id);
            }
        });
    });

    $('#hardwareRequestList').on('click', '.verify', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Tech/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#verifiedModal').modal('show');
                $('#verify').find('input[name="hardwareUserRequestId"]').val(data.hardwareUserRequest.id);
                $('#verify').find('input[name="id"]').val(data.id);
            }
        })
    });

    $('#verified').click(function (e) {
        e.preventDefault();
        var data = $('#verify').serialize();
        console.log(data)
        var id = $('#verify').find('input[name="id"]').val();
        var hardwareUserRequestId = $('#verify').find('input[name="hardwareUserRequestId"]').val();
        $.ajax({
            type: 'POST',
            url: '/api/verified/save',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#assignToMe').modal('hide');
                toastr.success(" Successfully Assigned The Request!");

            },
            //if failed
            error: function (data) {
                console.log(data);
                toastr.error("Fill up alll forms / Invalid")
            }
        });

    });

    $('#verified').click(function (e) {
        e.preventDefault();

        var id = $('#verify').find('input[name="hardwareUserRequestId"]').val();
        var data = $('#verify').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/v2/status/UserRequest/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
}
function SoftwareAdminv2() {

    var NewAdminReqtables;
    NewAdminReqtables = $("#softwareRequestList").DataTable({
        "ajax": {
            "url": "/api/SoftwareRequest/v2/Get",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        // "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "order": [[1, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                "data": "softwareUserRequest.ticket",
                render: function (data, row) {
                    return '<span class="badge shadow bg-primary" >' + data + '</span>'
                }
            },
            { "data": "softwareUserRequest.dateAdded" },
            { "data": "softwareUserRequest.fullName" },
            {
                "data": "softwareUserRequest.softwareName",
            },
            {
                "data": "softwareUserRequestId",
                render: function (data, type, row) {
                    if (row.softwareUserRequest.status == "Open") {
                        return '<span class="badge shadow  bg-open" > Open</span>'
                    }
                    else
                        return '<span class="badge shadow  bg-secondary">Open</span>'
                }
            },
            {
                data: null,
            },

        ],
        "columnDefs": [{
            targets: [-1], render: function (a, b, data, d) {
                if (data.softwareUserRequest.status == "Open") {
                    return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                        '<button class="btn btn-outline-success  btn-sm assign me-2" data-id="' + data.id + '"><i class="bi bi-people-fill"></i> Assign Technician</button>' +
                        '<button class="btn btn-outline-primary  mt-2 btn-sm assignme me-2" data-id="' + data.id + '"><i class="bi bi-person-check"></i> Assign To me</button>';

                }
                else if (data.softwareUserRequest.status == "In Progress") {
                    return '<button class="btn btn-outline-primary  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.softwareUserRequest.status == "Resolved") {
                    return '<button class="btn btn-outline-primary  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.softwareUserRequest.status == "Verified") {
                    return '<button class="btn btn-outline-primary  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.softwareUserRequest.status == "Approved") {
                    return '<button class="btn btn-outline-primary  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.softwareUserRequest.status == "Cancel") {
                    return '<button class="btn btn-outline-primary  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
            },
            orderable: false,
            width: "230px"
        }]

    });
    setInterval (function () {
        NewAdminReqtables.ajax.reload();
    }, 9000);
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/Technician',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=softwareTechnicianId]').append('<option value=""> Select Technician</option>');
            $.each(data, function (index, value) {
                $('select[name=softwareTechnicianId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    $('#softwareRequestList').on('click', '.assign', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Prog/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#ProgramemrModal').modal('show');
                $('#assignprog').find('input[name=softwareUserRequestId]').val(data.softwareUserRequest.id);

            }
        })
        // alert(data);
    });
    $('.softwareTechnician').select2({
        theme: 'bootstrap-5',
        dropdownParent: $('#ProgramemrModal .modal-content')
    });
    $('#updateProg').click(function (e) {
        e.preventDefault();
        var data = $('#assignprog').serialize();
        console.log(data)

        $.ajax({
            type: 'POST',
            url: '/api/admin/assign/save',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                $('#ProgramemrModal').modal('hide');
                $('#pleasewait').modal('show');
                setTimeout(function () {
                    toastr.success(" Successfully Assigned The Request!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    location.reload();
                    $('#upload2')[0].reset();
                }, 3000);
            },
            //if failed
            error: function (data) {

                toastr.error("Fill up alll forms / Invalid")
            }
        });

    });
    $('#updateProg').click(function (e) {
        e.preventDefault();
        var id = $('#assignprog').find('input[name="softwareUserRequestId"]').val();
        var data = $('#assignprog').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/acceptsAssigned/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //$('#editRequest').modal('hide');

                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {
                //    toastr.success("File Successfully Deleted!");
                //    // hide please wait modal
                //}, 2000);
                //setTimeout(function () {
                //    tables.ajax.reload();
                //    $('#pleasewait').modal('hide');
                //}, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#softwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Prog/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name=fullName]').val(data.softwareUserRequest.fullName);
                $('#viewRequest').find('input[name=ticket]').val(data.softwareUserRequest.ticket);
                $('#viewRequest').find('input[name=dateAdded]').val(data.softwareUserRequest.dateAdded);
                $('#viewRequest').find('input[name=mobileNumber]').val(data.softwareUserRequest.mobileNumber);
                $('#viewRequest').find('input[name=departmentName]').val(data.softwareUserRequest.departmentName);
                $('#viewRequest').find('input[name=divisionName]').val(data.softwareUserRequest.divisionName);
                $('#viewRequest').find('input[name=softwareName]').val(data.softwareUserRequest.softwareName);
                $('#viewRequest').find('input[name=requestFor]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest').find('input[name=informationName]').val(data.softwareUserRequest.informationName);
                $('#viewRequest').find('input[name=documentLabel]').val(data.softwareUserRequest.documentLabel);
                $('#viewRequest').find('textarea[name=description]').val(data.softwareUserRequest.description);
                $('#viewRequest').find('input[name=softwareUserRequestId]').val(data.softwareUserRequest.id);

                var reqId = $('#viewRequest').find('input[name=softwareUserRequestId]').attr('value');
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/uploads/" + reqId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],

                });
            }
        })
        // alert(data);
    });
    $('#softwareRequestList').on('click', '.assignme', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Prog/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#assignToMe').modal('show');
                $('#assignTome').find('input[name=softwareAcceptsRequestId]').val(data.id);
                $('#assignTome').find('input[name=softwareUserRequestId]').val(data.softwareUserRequestId);

            }
        })
        // alert(data);
    });
    $('#Assigntome').click(function (e) {
        e.preventDefault();
        var id = $('#assignTome').find('input[name="softwareUserRequestId"]').val();
        var data = $('#assignTome').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/assignedRequest/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#assignToMe').modal('hide');

                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Request Successfully Assigned!");
                    // hide please wait modal
                }, 2000);
                $('#pleasewait').modal('hide');
                setTimeout(function () {
                    window.location.href = "/SoftwareRequest/AdminIndex";
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#Assigntome').click(function (e) {
        e.preventDefault();
        var data = $('#assignTome').serialize();
        $.ajax({
            url: '/api/assign/save',
            type: 'POST',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {

                   // hide please wait modal

                }, 2000);
                setTimeout(function () {
                   location.reload();
                   $('#upload2')[0].reset();
                }, 3000);
            },
        });
    });




    var tables;
    tables2 = $("#softwareRequestList2").DataTable({
        "ajax": {
            "url": "/api/SoftwareRequest/v2/Get",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "order": [[1, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                "data": "softwareUserRequest.ticket",
                render: function (data, row) {
                    return '<span class="badge shadow bg-primary" >' + data + '</span>'
                }
            },
            { "data": "softwareUserRequest.dateAdded" },
            { "data": "softwareUserRequest.fullName" },
            {
                "data": "softwareUserRequest.softwareName",
            },
            {
                "data": "softwareUserRequestId",
                render: function (data, type, row) {
                    if (row.softwareUserRequest.status == "Open") {
                        return '<span class="badge shadow  bg-open" > Open</span>'
                    }
                    else
                        return '<span class="badge shadow  bg-secondary">Open</span>'
                }
            },
            {
                data: null,
            },

        ],
        "columnDefs": [{
            targets: [-1], render: function (a, b, data, d) {
                if (data.softwareUserRequest.status == "Open") {
                    return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                        '<button class="btn btn-outline-primary   btn-sm assignme me-2" data-id="' + data.id + '"><i class="bi bi-person-check"></i> Assign To me</button>';

                }
                else if (data.softwareUserRequest.status == "In Progress") {
                    return '<button class="btn btn-outline-primary  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.softwareUserRequest.status == "Resolved") {
                    return '<button class="btn btn-outline-primary  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.softwareUserRequest.status == "Verified") {
                    return '<button class="btn btn-outline-primary  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.softwareUserRequest.status == "Approved") {
                    return '<button class="btn btn-outline-primary  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.softwareUserRequest.status == "Cancel") {
                    return '<button class="btn btn-outline-primary  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
            },
            orderable: false,
            width: "230px"
        }]

    });
    $('#softwareRequestList2').on('click', '.assign', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Prog/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#ProgramemrModal2').modal('show');
                $('#assignprog2').find('input[name=softwareUserRequestId]').val(data.softwareUserRequest.id);

            }
        })
        // alert(data);
    });
    $('.softwareTechnician2').select2({
        theme: 'bootstrap-5',
        dropdownParent: $('#ProgramemrModal2 .modal-content')
    });

    $('#updateProg2').click(function (e) {
        e.preventDefault();
        var data = $('#assignprog2  ').serialize();
        console.log(data)

        $.ajax({
            type: 'POST',
            url: '/api/admin/assign/save',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                $('#ProgramemrModal').modal('hide');
                $('#pleasewait').modal('show');
                setTimeout(function () {
                    toastr.success(" Successfully Assigned The Request!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    location.reload();
                    $('#upload2')[0].reset();
                }, 3000);
            },
            //if failed
            error: function (data) {

                toastr.error("Fill up alll forms / Invalid")
            }
        });

    });
    $('#updateProg2').click(function (e) {
        e.preventDefault();
        var id = $('#assignprog2').find('input[name="softwareUserRequestId"]').val();
        var data = $('#assignprog2').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/acceptsAssigned/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //$('#editRequest').modal('hide');

                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {
                //    toastr.success("File Successfully Deleted!");
                //    // hide please wait modal
                //}, 2000);
                //setTimeout(function () {
                //    tables.ajax.reload();
                //    $('#pleasewait').modal('hide');
                //}, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#softwareRequestList2').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Prog/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#viewmodal2').modal('show');
                $('#viewRequest2').find('input[name=dateChecked]').val(data.dateAdded);
                $('#viewRequest2').find('input[name=checkedBy]').val(data.fullName);
                $('#viewRequest2').find('input[name=ticket]').val(data.softwareUserRequest.ticket);
                $('#viewRequest2').find('input[name=dateAdded]').val(data.softwareUserRequest.dateAdded);
                $('#viewRequest2').find('input[name=fullName]').val(data.softwareUserRequest.fullName);
                $('#viewRequest2').find('input[name=mobileNumber]').val(data.softwareUserRequest.mobileNumber);
                $('#viewRequest2').find('input[name=departmentName]').val(data.softwareUserRequest.departmentName);
                $('#viewRequest2').find('input[name=divisionName]').val(data.softwareUserRequest.divisionName);
                $('#viewRequest2').find('input[name=softwareName]').val(data.softwareUserRequest.softwareName);
                $('#viewRequest2').find('input[name=requestFor]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest2').find('input[name=informationName]').val(data.softwareUserRequest.informationName);
                $('#viewRequest2').find('input[name=documentLabel]').val(data.softwareUserRequest.documentLabel);
                $('#viewRequest2').find('textarea[name=description]').val(data.softwareUserRequest.description);
                $('#viewRequest2').find('input[name=softwareUserRequestId]').val(data.softwareUserRequest.id);

                var reqId = $('#viewRequest2').find('input[name=softwareUserRequestId]').attr('value');
                var uploadTable = $('#UploadList2').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/uploads/" + reqId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],

                });

                //$('#upload2').find('input[name=softwareUserRequestId]').val(data.id);
                //// refresh page on modal close
                //$('#viewmodal').on('hidden.bs.modal', function () {
                //    // remove id on select
                //    $('select[name=softwareUserRequestId]').find('option[value=' + data.id + ']').remove();
                //});
            }
        })
        // alert(data);
    });
    $('#softwareRequestList2').on('click', '.assignme', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Prog/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#assignToMe2').modal('show');
                $('#assignTomesuper').find('input[name=softwareUserRequestId]').val(data.softwareUserRequestId);
                $('#assignTomesuper').find('input[name=softwareAcceptsRequestId]').val(data.id);


            }
        })
        // alert(data);
    });
    $('#Assigntome2').click(function (e) {
        e.preventDefault();
        var id = $('#assignTomesuper').find('input[name="softwareUserRequestId"]').val();
        var data = $('#assignTomesuper').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/assignedRequest/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#assignToMe2').modal('hide');

                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("File Successfully Assigned!");
                    // hide please wait modal
                }, 2000);
                $('#pleasewait').modal('hide');

                setTimeout(function () {
                    window.location.href = "/SoftwareRequest/Index";
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    //$('#Assigntome2').click(function (e) {
    //    e.preventDefault();
    //    var id = $('#assignTomesuper').find('input[name="programmerReportId"]').val();
    //    var data = $('#assignTomesuper').serialize();
    //    // alert(id);
    //    $.ajax({
    //        type: 'PUT',
    //        url: '/api/software/Accepts/' + id,
    //        data: data,
    //        headers: {
    //            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
    //        },
    //        success: function (data) {
    //            $('#assignToMe2').modal('hide');

    //            $('#pleasewait').modal('show');
    //            //show toastr after 3
    //            setTimeout(function () {
    //                toastr.success("File Successfully assigned!");
    //                // hide please wait modal
    //            }, 2000);
    //            setTimeout(function () {
    //                window.location.href = "/SoftwareRequest/Index";
    //                $('#pleasewait').modal('hide');
    //            }, 3000);
    //        },
    //        //if failed
    //        error: function (data) {
    //            toastr.error("Error Canceling a Request")
    //        }
    //    })
    //});
    $('#Assigntome2').click(function (e) {
        e.preventDefault();
        var data = $('#assignTomesuper').serialize();
        console.log(data)
        $.ajax({
            type: 'POST',
            url: '/api/assign/save',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                //$('#assignToMe2').modal('hide');
                //$('#pleasewait').modal('show');
                //setTimeout(function () {
                //    toastr.success(" Successfully Assigned The Request!");
                //    // hide please wait modal
                //}, 2000);
                //setTimeout(function () {
                //    location.reload();
                  
                //}, 3000);
            },
            //if failed
            error: function (data) {

                toastr.error("Fill up alll forms / Invalid")
            }
        });

    });

}
function SoftwareAdminIndex() {
    /*SoftwareTechForm();*/
    var AdminSoftwareTb;

   AdminSoftwareTb = $("#softwareRequestList").DataTable({
        "ajax": {
            "url": "/api/SoftwareRequest/admin/Get",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                "data": "softwareUserRequest.ticket",
                render: function (data, type, row) {
                    if (data == null) {
                        return '<span class="badge bg-danger">No Ticket</span>';
                    }
                    return `<span class="badge shadow bg-primary">${(data)}</span>`
                }

            },
            { "data": "softwareUserRequest.dateAdded" },
            { "data": "softwareUserRequest.fullName" },
            {
                "data": "softwareUserRequest.isManual",
                render: function (data) {
                    if (data == 0) {
                        return 'User Request'
                    }
                    else
                        return 'Manual Request'
                }
            },
            {
                "data": "softwareUserRequest.softwareName",
            },

            {
                "data": "softwareUserRequest.status",
                render: function (data) {
                    if (data == "Open") {
                        return '<span class="badge shadow bg-secondary">' + data + '</span>'
                    }
                    else if (data == "In Progress") {
                        return '<span class="badge shadow bg-info">' + data + '</span>'
                    }
                    else if (data == "Resolved") {
                        return '<span class="badge shadow bg-success">' + data + '</span>'
                    }
                    else if (data == "Accepts Request") {
                        return '<span class="badge shadow bg-info">In Progress</span>'
                    }
                    else if (data == "Manual") {
                        return '<span class="badge shadow bg-info">In Progress</span>'
                    }
                    else if (data == "Verified") {
                        return '<span class="badge shadow bg-primary">' + data + '</span>'
                    }
                    else if (data == "Approved") {
                        return '<span class="badge shadow bg-danger">' + data + '</span>'
                    }
                    else if (data == "Cancel") {
                        return '<span class="badge shadow bg-danger">' + data + '</span>'
                    }
                }
            },
            {
                "data": "programmerName"
            },
            {
                "data": null
            }
        ],
        columnDefs:
            [{
                targets: [-1], render: function (a, b, data, d) {
                    if (data.softwareUserRequest.status == "Accept") {
                        return '<button class="btn btn-outline-info btn-sm shadow info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success btn-sm  report me-2" data-id="' + data.id + '"><i class="bi bi-check2"></i> Approve </button>';
                    }
                    else if (data.softwareUserRequest.status == "In Progress") {
                        return '<button class="btn btn-outline-info btn-sm  info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success btn-sm  report me-2" data-id="' + data.id + '"><i class="bi bi-card-checklist"></i> Report </button>';
                    }
                    else if (data.softwareUserRequest.status == "Manual") {
                        return '<button class="btn btn-outline-info btn-sm info  me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-secondary btn-sm  edit me-2" data-id="' + data.id + '"><i class="bi bi-pencil-square"></i> Edit </button>' +
                            '<button class="btn btn-outline-success btn-sm  report-manual me-2" data-id="' + data.id + '"><i class="bi bi-card-checklist"></i> Report </button>';

                    }
                    else if (data.softwareUserRequest.status == "Accepts Request") {
                        return '<button class="btn btn-outline-info btn-sm  info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-danger btn-sm  accept me-2" data-id="' + data.id + '"><i class="bi bi-check2"></i> Accept </button>';
                    }
                    else if (data.softwareUserRequest.status == "Resolved") {
                        return '<button class="btn btn-outline-info btn-sm  info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm  transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.softwareUserRequest.status == "Verified") {
                        return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-dark   btn-sm print me-2" data-id="' + data.id + '"><i class="bi bi-printer"></i> Print </button>';
                    }
                    else if (data.softwareUserRequest.status == "Approved") {
                        return '<button class="btn btn-outline-info btn-sm  info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm  transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn btn-outline-dark  btn-sm print mt-2 me-2" data-id="' + data.id + '"><i class="bi bi-printer"></i> Print </button>';
                    }
                    else if (data.softwareUserRequest.status == "Cancel") {
                        return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }

                },
                orderable: false,
                width: "230px"
            }]
    });
    setInterval (function () {
        AdminSoftwareTb.ajax.reload();
    }, 10000);
    $('#softwareRequestList').on('click', '.transaction', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#transactionModal').modal('show');

                $('#newSystem2').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                var refId = $('#newSystem2').find('#softwareUserRequestId').attr('value');
                var table = $('#progReport2').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertask/sf/getbyId/" + refId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "softwareTaskId",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return '<span class="badge shadow bg-secondary">Requested</span>'
                                }
                                else if (data == 2) {
                                    return '<span class="badge shadow bg-info">Division Apperoved</span>'
                                }
                                else if (data == 3) {
                                    return '<span class="badge shadow bg-warning">Assigned</span>'
                                }
                                else if (data == 4) {
                                    return '<span class="badge shadow bg-success">Resolved</span>'
                                }
                                else if (data == 5) {
                                    return '<span class="badge shadow bg-primary">Verified</span>'
                                }
                                else if (data == 6) {
                                    return '<span class="badge shadow bg-danger">Approved</span>'
                                }
                            }
                        },
                        {
                            data: null,

                        },
                    ],
                    columnDefs:
                        [{
                            targets: [-1], render: function (a, b, data, d) {
                                if (data.softwareTask.id == 1) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 2) {
                                    return '<button class="btn btn-outline-primary btn-sm divApproved me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                                else if (data.softwareTask.id == 3) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 4) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 5) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 6) {
                                    return '<button class="btn btn-outline-primary btn-sm view2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                            },
                            orderable: false,
                            width: "240px"
                        }]

                });
            }
        })
    });

    $('#progReport2').on('click', '.view2', function (e) {
        e.preventDefault();
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/Task/sf/get/" + id,
            success: function (data) {
                $('#transactionReportModal').modal('show');
                $('#transactionModal').modal('hide');
                $('#report3').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#report3').find('input[name="informationName"]').val(data.softwareUserRequest.informationName);
                $('#report3').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#report3').find('input[name="documentLabel"]').val(data.softwareUserRequest.documentLabel);
                $('#report3').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#report3').find('input[name="resulotion"]').val(data.programmerReport.resulotion);
                $('#report3').find('input[name="dateAdded"]').val(data.programmerReport.dateAdded);
                $('#report3').find('input[name="dateAssigned"]').val(data.programmerReport.dateAssigned);
                $('#report3').find('input[name="dateEnded"]').val(data.programmerReport.dateEnded);
                $('#report3').find('input[name="dateVerified"]').val(data.programmerReport.dateVerified);
                $('#report3').find('textarea[name="remarks"]').val(data.programmerReport.remarks);
                $('#report3').find('input[name="dateApproved"]').val(data.softwareApproved.dateApprove);
                $('#report3').find('input[name="adminName"]').val(data.programmerReport.adminName);
                $('#report3').find('input[name="superAdminName"]').val(data.softwareApproved.nameApproval);
                $('#report3').find('input[name="programmerName"]').val(data.programmerReport.softwareTechnicianName);
                $('#report3').find('textarea[name="remarksApproval"]').val(data.softwareApproved.remarksApproval);

                $('#report3').find('input[name="programmerReportId"').val(data.programmerReport.id);

                var progId = $('#report3').find('input[name="programmerReportId"]').attr('value');
                var uploadTable2 = $('#UploadList3').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + progId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            data: "remarksUploads"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],
                });


                // refresh page on modal close
                $('#transactionReportModal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=programmerReportId]').find('option[value=' + data.id + ']').remove();
                });
            }
        });
    });

    $('#softwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="id"]').val(data.id);
                $('#viewRequest').find('input[name="fullName"]').val(data.softwareUserRequest.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.softwareUserRequest.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.softwareUserRequest.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.softwareUserRequest.divisionName);
                $('#viewRequest').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#viewRequest').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest').find('input[name="FileName"]').val(data.softwareUserRequest.documentLabel);
                $('#viewRequest').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#viewRequest').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                $('#progform').find('input[name="softwareName"]').val(data.softwareName); 
                $('#progform').find('input[name="informationName"]').val(data.informationName);
                $('#progform').find('input[name="softwareTechnicianName"]').val(data.softwareTechnicianName);
                $('#progform').find('input[name="requestFor"]').val(data.requestFor);
                //$('#progform').find('input[name="dateAdded"]').val(data.dateAdded);
                var format2 = moment($("#progform").find('input[name="dateAdded"]').val(data.dateAdded)
                    .val()).format('LLL');
                $("#dateStarted").text(format2);
                console.log(format2);

                var format3 = moment($("#progform").find('input[name="dateEnded"]').val(data.dateEnded)
                    .val()).format('LLL');
                $("#dateFinished").text(format3);
                console.log(format3);

                $('#progform').find('input[name="dateAssigned"]').val(data.dateAssigned);
                $('#progform').find('input[name="FileName"]').val(data.documentLabel);
                $('#progform').find('input[name="dateVerified"]').val(data.dateVerified);
                $('#progform').find('input[name="dateApproved"]').val(data.dateApproved); 
                $('#progform').find('textarea[name="description"]').val(data.description); 
                $('#progform').find('input[name="resulotion"]').val(data.resulotion);
                $('#progform').find('input[name="superAdminName"]').val(data.superAdminName);
                $('#progform').find('input[name="adminName"]').val(data.adminName);
                $('#progform').find('textarea[name="remarks"]').val(data.remarks);
                $('#progform').find('input[name="programmerReportId"]').val(data.id);

                if (data.softwareUserRequest.status == "Open")
                    $('.update-image').prop('disabled', true)

                else if (data.softwareUserRequest.status == "In Progress")
                    $('.update-image').prop('disabled', true)

                else if (data.softwareUserRequest.status == "Accepts Request")
                    $('.update-image').prop('disabled', true)

                else if (data.softwareUserRequest.status == "Resolved")
                    $('.update-image').prop('disabled', true)
                else if (data.softwareUserRequest.status == "Manual")
                    $('.update-image').prop('disabled', true)
                else if (data.softwareUserRequest.status == "Verified")
                    $('.update-image').prop('disabled', false)

                else if (data.softwareUserRequest.status == "Approved")
                    $('.update-image').prop('disabled', true)
                else if (data.softwareUserRequest.status == "Cancel")
                    $('.update-image').prop('disabled', true)
                else
                    $('.update-image').prop('disabled', false)

                var sId = $('input[name="softwareUserRequestId"]').val();
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/uploads/" + sId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],

                });

                var techId = $('input[name="programmerReportId"]').attr('value');
                var uploadTable2 = $('#progUploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + techId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                        {
                            data: null
                        }
                    ],
                    columnDefs:
                        [{
                            targets: [-1], render: function (a, b, data, d) {
                                if (data.programmerReport.technicianAdminId == 2) {
                                    return '';
                                }
                                else if (data.programmerReport.technicianAdminId == null) {
                                    return '<button type="button" class="btn btn-outline-danger btn-sm delete me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> delete </button>';
                                }
                            },
                            orderable: false,
                            width: "280px"
                        }]
                });
                $('#upload2').find('input[name=programmerReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=softwareUserRequestId]').find('option[value=' + data.id + ']').remove();
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#softwareRequestList').on('click', '.report', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#ReportModal').modal('show')
                $('#report2').find('select[name="softwareId"]').val(data.softwareUserRequest.softwareId);
                $('#report2').find('select[name="informationSystemId"]').val(data.softwareUserRequest.informationSystemId);
                $('#report2').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#report2').find('input[name="documentLabel"]').val(data.softwareUserRequest.documentLabel);
                $('#report2').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#report2').find('input[name="programmerReportId"]').val(data.id);
                $('#report2').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                $('#report2').find('input[name="mobileNumber"]').val(data.softwareUserRequest.mobileNumber);
            }
        })
    });
    $('#softwareRequestList').on('click', '.report-manual', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#ReportModalManual').modal('show')
                $('#reportmanual').find('select[name="softwareId"]').val(data.softwareUserRequest.softwareId);
                $('#reportmanual').find('select[name="informationSystemId"]').val(data.softwareUserRequest.informationSystemId);
                $('#reportmanual').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#reportmanual').find('input[name="documentLabel"]').val(data.softwareUserRequest.documentLabel);
                $('#reportmanual').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#reportmanual').find('input[name="programmerReportId"]').val(data.id);
                $('#reportmanual').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                $('#reportmanual').find('input[name="mobileNumber"]').val(data.softwareUserRequest.mobileNumber);
            }
        })
    });
    //Software
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/software',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=softwareId]').append('<option value=""> Select Software</option>');
            $.each(data, function (index, value) {
                $('select[name=softwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });


    //Software
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/infoSystem',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=informationSystemId]').append('<option value=""> Select System</option>');
            $.each(data, function (index, value) {
                $('select[name=informationSystemId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    $('#btnSubmitmanual').click(function (e) {
        e.preventDefault();
        var id = $('#reportmanual').find('input[name="programmerReportId"]').val();
        var data = $('#reportmanual').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/manualsoftware/Admin/assigned/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //$('#editRequest').modal('hide');

                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {
                //    toastr.success("File Successfully Deleted!");
                //    // hide please wait modal
                //}, 2000);
                //setTimeout(function () {
                //    tables.ajax.reload();
                //    $('#pleasewait').modal('hide');
                //}, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        });

        e.preventDefault();
        var data = $('#reportmanual').serialize();

        $.ajax({
            url: '/api/verified/v2/save2',
            type: 'POST',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //$('#ReportModal').modal('hide');
                ////show please wait modal
                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {

                //    // hide please wait modal

                //}, 2000);
                //setTimeout(function () {
                //    location.reload();
                //    $('#report2')[0].reset();
                //}, 3000);
            },

            error: function (data) {
                toastr.error("Error Updating File")
            }
        });
        var id = $('#reportmanual').find('input[name="softwareUserRequestId"]').val();
        var data = $('#reportmanual').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/Reported/Verify/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //$('#editRequest').modal('hide');

                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {
                //    toastr.success("File Successfully Deleted!");
                //    // hide please wait modal
                //}, 2000);
                //setTimeout(function () {
                //    tables.ajax.reload();
                //    $('#pleasewait').modal('hide');
                //}, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#btnSubmitmanual').click(function (e) {
        e.preventDefault();
        var formData = new FormData(reportmanual);
        $.ajax({
            url: '/api/prog/saveFile',
            type: 'POST',
            data: formData,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#ReportModalManual').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {

                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    location.reload();
                    $('#report2')[0].reset();
                }, 3000);
            },
            cache: false,
            contentType: false,
            processData: false,
            error: function (data) {
                toastr.error("Error Updating File")
            }
        });
    });
    $('#btnSubmit').click(function (e) {
        e.preventDefault();
        var id = $('#report2').find('input[name="programmerReportId"]').val();
        var data = $('#report2').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/Admin/assigned/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //$('#editRequest').modal('hide');

                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {
                //    toastr.success("File Successfully Deleted!");
                //    // hide please wait modal
                //}, 2000);
                //setTimeout(function () {
                //    tables.ajax.reload();
                //    $('#pleasewait').modal('hide');
                //}, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#btnSubmit').click(function (e) {
        e.preventDefault();
        var data = $('#report2').serialize();
        $.ajax({
            url: '/api/verified/v2/save2',
            type: 'POST',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //$('#ReportModal').modal('hide');
                ////show please wait modal
                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {

                //    // hide please wait modal

                //}, 2000);
                //setTimeout(function () {
                //    location.reload();
                //    $('#report2')[0].reset();
                //}, 3000);
            },

            error: function (data) {
                toastr.error("Error Updating File")
            }
        });
    });
    $('#btnSubmit').click(function (e) {
        e.preventDefault();
        var id = $('#report2').find('input[name="softwareUserRequestId"]').val();
        var data = $('#report2').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/Reported/Verify/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //$('#editRequest').modal('hide');

                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {
                //    toastr.success("File Successfully Deleted!");
                //    // hide please wait modal
                //}, 2000);
                //setTimeout(function () {
                //    tables.ajax.reload();
                //    $('#pleasewait').modal('hide');
                //}, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#btnSubmit').click(function (e) {
        e.preventDefault();
        var formData = new FormData(report2);
        $.ajax({
            url: '/api/prog/saveFile',
            type: 'POST',
            data: formData,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#ReportModal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {

                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    location.reload();
                    $('#report2')[0].reset();
                }, 3000);
            },
            cache: false,
            contentType: false,
            processData: false,
            error: function (data) {
                toastr.error("Error Updating File")
            }
        });
    });

    $('#upload2').submit(function (e) {
        e.preventDefault();
        var formData = new FormData(this);
        $.ajax({
            url: '/api/prog/saveFile',
            type: 'POST',
            data: formData,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                $('#addimageModal').modal('hide');

                /*  show please wait modal*/
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("File Successfully Added!");
                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    location.reload();
                    $('#upload2')[0].reset();
                }, 3000);
            },
            cache: false,
            contentType: false,
            processData: false,
            error: function (data) {
                toastr.error("Error Updating File")
            }
        });

    });

    $('#progUploadList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        bootbox.confirm({
            message: "Are you sure you want to delete this image?",
            centerVertical: true,

            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success btn-sm'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger btn-sm '
                }
            },
            callback: function (result) {
                if (result) {
                    $.ajax({

                        type: 'DELETE',
                        url: '/api/v2/sf/deleteImage/' + id,
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        },
                        success: function (data) {
                            $('#pleasewait').modal('show');
                            //show toastr after 3
                            setTimeout(function () {
                                toastr.success("Image Successfully Remove!");
                                // hide please wait modal
                            }, 2000);
                            setTimeout(function () {
                                window.location.reload();
                            }, 3000);
                        }
                    });
                }
            }
        });
    });

    $('#softwareRequestList').on('click', '.edit', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#editModalsf').modal('show');
                $('#manualRequest4').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);

                $('#manualRequest4').find('input[name="fullName"]').val(data.softwareUserRequest.fullName);
                $('#manualRequest4').find('input[name="email"]').val(data.softwareUserRequest.email);
                $('#manualRequest4').find('input[name="mobileNumber"]').val(data.softwareUserRequest.mobileNumber);
                $('#manualRequest4').find('select[name="departmentsId"]').val(data.softwareUserRequest.departmentsId);
                $('#manualRequest4').find('select[name="divisionsId"]').val(data.softwareUserRequest.divisionsId);

                $('#manualRequest4').find('select[name="softwareId"]').val(data.softwareUserRequest.softwareId);
                $('#manualRequest4').find('select[name="informationSystemId"]').val(data.softwareUserRequest.informationSystemId);
                $('#manualRequest4').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#manualRequest4').find('input[name="documentLabel"]').val(data.softwareUserRequest.documentLabel);
                $('#manualRequest4').find('textarea[name="description"]').val(data.softwareUserRequest.description);



            }
        })
    });

    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/department',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            var html = '<option value="">Select Department</option>';
            $.each(data, function (i, item) {
                html += '<option value="' + item.id + '">' + item.name + '</option>';
            });
            $('select[name=departmentsId]').html(html);
            // render divisionsId select
            // console log on select change
            $('select[name=departmentsId]').on('change', function () {
                var depId = $('select[name=departmentsId]').val();
                $.ajax({
                    type: 'GET',
                    url: '/api/div/fetchbyid/' + depId,
                    headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                    },
                    success: function (data) {
                        var html = '<option value="0">Select Division</option>';
                        $.each(data, function (i, item) {
                            html += '<option value="' + item.id + '">' + item.name + '</option>';
                        });
                        //console.log(data);
                        $('select[name=divisionsId]').html(html);
                    }
                });
            });
        }
    });
    $.ajax({
        type: 'GET',
        url: '/api/User/division',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=divisionsId]').append('<option value=""> Select Division</option>');
            $.each(data, function (index, value) {
                $('select[name=divisionsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });

    $('#btnEditSubmit').click(function (e) {
        e.preventDefault();

        var softwareRequestId = $('#manualRequest4').find('input[name="softwareUserRequestId"]').val();
        var data = $('#manualRequest4').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/edit/sf/manual/progReport/' + softwareRequestId,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                console.log(data.id);
                $('#pleasewait').modal('show');

                $('#editModalsf').modal('hide');
                setTimeout(function () {
                    toastr.success("File Successfully Updated!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    window.location.reload();
                }, 3000);
            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
    $('#softwareRequestList').on('click', '.accept', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#AcceptModal').modal('show');
                $('#accepts2').find('input[name=softwareUserRequestId]').val(data.softwareUserRequest.id);
                $('#accepts2').find('input[name=programmerReportId]').val(data.id);

            }
        })
        // alert(data);
    });

    $('#BtnAccept').click(function (e) {
        e.preventDefault();
        var id = $('#accepts2').find('input[name="programmerReportId"]').val();
        var data = $('#accepts2').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/AssignedAccepted2/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //$('#editRequest').modal('hide');

                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {
                //    toastr.success("File Successfully Deleted!");
                //    // hide please wait modal
                //}, 2000);
                //setTimeout(function () {
                //    tables.ajax.reload();
                //    $('#pleasewait').modal('hide');
                //}, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });

    $('#BtnAccept').click(function (e) {
        e.preventDefault();
        var id = $('#accepts2').find('input[name="softwareUserRequestId"]').val();
        var data = $('#accepts2').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/AssignedAccepted/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#AcceptModal').modal('hide');

                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("File Successfully Deleted!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    tables.ajax.reload();
                    $('#pleasewait').modal('hide');
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });

    $('#softwareRequestList').on('click', '.print', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#PrintModal').modal('show');
                $('#print').find('input[name="id"]').val(data.id);
                $('#print').find('input[name="fullName"]').val(data.softwareUserRequest.fullName);
                $('#print').find('input[name="ticket"]').val(data.softwareUserRequest.ticket);
                $('#print').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#print').find('input[name="informationName"]').val(data.softwareUserRequest.informationName);
                $('#print').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#print').find('input[name="description"]').val(data.softwareUserRequest.description);
                $('#print').find('input[name="departmentName"]').val(data.softwareUserRequest.departmentName);
                $('#print').find('input[name="divisionName"]').val(data.softwareUserRequest.divisionName);
                $('#print').find('input[name="programmerName"]').val(data.programmerName);
                $('#print').find('input[name="remarks"]').val(data.remarks);
                $('#print').find('input[name="dateAssigned"]').val(data.dateAssigned);
                $('#print').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#print').find('input[name="adminName"]').val(data.adminName);
                $('#print').find('input[name="superAdminName"]').val(data.superAdminName);


            }
        })
    });
    $.ajax({
        type: 'GET',
        url: '/api/info/System',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name = informationSystemId]').append('<option value=""> Select System</option>');
            $.each(data, function (index, value) {
                $('select[name=informationSystemId]').append('<option value="' + value.id + '">' + value.name + '</option>');

            })
        }
    });

    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/software',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=softwareId]').append('<option value=""> Select Software</option>');
            $.each(data, function (index, value) {
                $('select[name=softwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
}
function SoftwareApproved() {
    var tables;
    tables = $("#softwareRequestList").DataTable({
        "ajax": {
            "url": "/api/SoftwareRequest/Approved/Get",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",

        "order": [[1, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                "data": "softwareUserRequest.ticket",
                render: function (data, row) {
                    return '<span class="badge shadow bg-primary" >' + data + '</span>'
                }
            },
            { "data": "softwareUserRequest.dateAdded" },
            { "data": "softwareUserRequest.fullName" },
            {
                "data": "softwareUserRequest.softwareName",
            },

            {
                "data": "softwareUserRequest.status",
                render: function (data, type, row) {
                    if (row.softwareUserRequest.status == "Approved") {
                        return '<span class="badge shadow  bg-primary" >' + data + '</span>'
                    }
                    else
                        return '<span class="badge shadow  bg-secondary">Open</span>'
                }

            },
            {
                "data": "programmerReport.programmerName",
            },
            {
                data: null,
            },

        ],
        "columnDefs": [{
            targets: [-1], render: function (a, b, data, d) {
                if (data.softwareUserRequest.status == "Open") {
                    return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.softwareUserRequest.status == "Approved") {
                    return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                        '<button class="btn btn-outline-primary btn-sm transac2 me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                }
                else if (data.softwareUserRequest.status == "Cancel") {
                    return '<button class="btn btn-outline-primary btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
            },
            orderable: false,
            width: "200px"
        }]
    });

    $('#softwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Approved/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="id"]').val(data.id);
                $('#viewRequest').find('input[name="fullName"]').val(data.softwareUserRequest.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.softwareUserRequest.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.softwareUserRequest.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.softwareUserRequest.divisionName);
                $('#viewRequest').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#viewRequest').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest').find('input[name="FileName"]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#viewRequest').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                var format2 = moment($("#progform").find('input[name="dateAdded"]').val(data.programmerReport.dateAdded)
                    .val()).format('LLL');
                $("#dateStarted").text(format2);
                console.log(format2);

                var format3 = moment($("#progform").find('input[name="dateEnded"]').val(data.programmerReport.dateEnded)
                    .val()).format('LLL');
                $("#dateFinished").text(format3);
                console.log(format3);
                $('#progform').find('input[name="softwareName"]').val(data.programmerReport.softwareName);
                $('#progform').find('input[name="informationName"]').val(data.programmerReport.informationName);
                $('#progform').find('input[name="requestFor"]').val(data.programmerReport.requestFor);
                $('#progform').find('input[name="documentLabel"]').val(data.programmerReport.documentLabel);
                $('#progform').find('textarea[name="description"]').val(data.programmerReport.description);
                $('#progform').find('input[name="resulotion"]').val(data.programmerReport.resulotion);
                $('#progform').find('textarea[name="remarks"]').val(data.programmerReport.remarks);
                $('#progform').find('input[name="programmerReportId"]').val(data.programmerReport.id);
                $('#progform').find('input[name="programmerName"]').val(data.programmerReport.programmerName);
                $('#progform').find('input[name="dateAssigned"]').val(data.programmerReport.dateAssigned);
                $('#progform').find('input[name="dateVerified"]').val(data.programmerReport.dateVerified);
                $('#progform').find('input[name="adminName"]').val(data.programmerReport.adminName);
                $('#progform').find('input[name="nameApproval"]').val(data.nameApproval);
                $('#progform').find('input[name="dateApprove"]').val(data.dateApprove);
                $('#progform').find('textarea[name="remarksApproval"]').val(data.remarksApproval);

                var sId = $('input[name="softwareUserRequestId"]').val();
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/uploads/" + sId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],

                });
                var techId = $('input[name="programmerReportId"]').attr('value');
                var uploadTable2 = $('#progUploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + techId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],
                });
                $('#upload2').find('input[name=programmerReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=softwareUserRequestId]').find('option[value=' + data.id + ']').remove();
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#softwareRequestList').on('click', '.transac2', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Approved/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#transactionModal').modal('show');

                $('#newSystem2').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                var refId = $('#newSystem2').find('#softwareUserRequestId').attr('value');
                var table = $('#progReport2').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertask/sf/getbyId/" + refId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "softwareTaskId",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return '<span class="badge shadow bg-secondary">Requested</span>'
                                }
                                else if (data == 2) {
                                    return '<span class="badge shadow bg-info">Division Apperoved</span>'
                                }
                                else if (data == 3) {
                                    return '<span class="badge shadow bg-warning">Assigned</span>'
                                }
                                else if (data == 4) {
                                    return '<span class="badge shadow bg-success">Resolved</span>'
                                }
                                else if (data == 5) {
                                    return '<span class="badge shadow bg-primary">Verified</span>'
                                }
                                else if (data == 6) {
                                    return '<span class="badge shadow bg-danger">Approved</span>'
                                }
                            }
                        },
                        {
                            data: null,

                        },
                    ],
                    columnDefs:
                        [{
                            targets: [-1], render: function (a, b, data, d) {
                                if (data.softwareTask.id == 1) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 2) {
                                    return '<button class="btn btn-outline-primary btn-sm divApproved me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                                else if (data.softwareTask.id == 3) {
                                    return '';

                                }
                                else if (data.softwareTask.id == 4) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 5) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 6) {
                                    return '';
                                }
                            },
                            orderable: false,
                            width: "240px"
                        }]

                });
            }
        })
    });

    $('#progReport2').on('click', '.divApproved', function (e) {
        e.preventDefault();
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/Task/sf/get/" + id,
            success: function (data) {
                $('#divApprover').modal('show');
                $('#approver').find('input[name="fullName"]').val(data.softwareAcceptsRequest.fullName);
                $('#approver').find('input[name="dateAdded"]').val(data.softwareAcceptsRequest.dateAdded);
                $('#approver').find('input[name="departmentName"]').val(data.softwareAcceptsRequest.departmentName);
                $('#approver').find('input[name="divisionName"]').val(data.softwareAcceptsRequest.divisionName);
                // refresh page on modal close
                $('#divApprover').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=programmerReportId]').find('option[value=' + data.id + ']').remove();
                });
            }
        });
    });
    $('#progReport2').on('click', '.view2', function (e) {
        e.preventDefault();
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/Task/sf/get/" + id,
            success: function (data) {
                $('#transactionReportModal').modal('show');
                $('#report3').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#report3').find('input[name="informationName"]').val(data.softwareUserRequest.informationName);
                $('#report3').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#report3').find('input[name="documentLabel"]').val(data.softwareUserRequest.documentLabel);
                $('#report3').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#report3').find('input[name="resulotion"]').val(data.programmerReport.resulotion);
                $('#report3').find('input[name="dateAdded"]').val(data.programmerReport.dateAdded);
                $('#report3').find('input[name="dateAssigned"]').val(data.programmerReport.dateAssigned);
                $('#report3').find('input[name="dateEnded"]').val(data.programmerReport.dateEnded);
                $('#report3').find('input[name="dateVerified"]').val(data.programmerReport.dateVerified);
                $('#report3').find('textarea[name="remarks"]').val(data.programmerReport.remarks);
                $('#report3').find('input[name="dateApproved"]').val(data.programmerReport.dateApproved);
                $('#report3').find('input[name="adminName"]').val(data.programmerReport.adminName);
                $('#report3').find('input[name="superAdminName"]').val(data.programmerReport.superAdminName);
                $('#report3').find('input[name="programmerName"]').val(data.programmerReport.softwareTechnicianName);
                $('#report3').find('input[name="remarksApproval"]').val(data.softwareApproved.remarksApproval);
                $('#report3').find('input[name="programmerReportId"').val(data.programmerReport.id);
                var progId = $('#report3').find('input[name="programmerReportId"]').attr('value');
                var uploadTable2 = $('#UploadList3').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + progId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],
                });
                $('#transactionReportModal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=programmerReportId]').find('option[value=' + data.id + ']').remove();
                });
            }
        });
    });
}
function SoftwareDeveloper() {
    var tables;
    tables = $("#softwareRequestList").DataTable({
        "ajax": {
            "url": "/api/SoftwareRequest/developer/v2/Get",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",

        "order": [[1, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [
            {
                data: "softwareUserRequest.ticket",
                render: function (data, type, row) {
                    return '<span class="badge shadow  bg-primary">' + data + '</span>'
                }


            },
            { data: "softwareUserRequest.dateAdded" },
            {
                data: "softwareUserRequest.fullName"
            },
            {
                data: "softwareUserRequest.softwareName",
            },

            {
                data: "softwareUserRequest.status",
                render: function (data, row) {
                    if (data == "Open") {
                        return '<span class="badge shadow  bg-secondary">' + data + '</span>'
                    }
                    else if (data == "Return Request") {
                        return '<span class="badge shadow  bg-secondary">Open</span>'
                    }
                    else if (data == "Cancel") {
                        return '<span class="badge shadow  bg-danger">' + data + '</span>'
                    }
                    else if (data == "Accept") {
                        return '<span class="badge shadow  bg-secondary">Open</span>'
                    }
                    else if (data == "Update Request") {
                        return '<span class="badge shadow  bg-secondary">Open</span>'
                    }
                    else if (data == "In Progress") {
                        return '<span class="badge shadow  bg-info">' + data + '</span>'
                    }
                    else if (data == "Accepts Request") {
                        return '<span class="badge shadow  bg-info">In Progress</span>'
                    }
                    else if (data == "Verified") {
                        return '<span class="badge shadow  bg-primary">' + data + '</span>'
                    }
                    else if (data == "Manual") {
                        return '<span class="badge shadow  bg-secondary">Open</span>'
                    }
                    else if (data == "Resolved") {
                        return '<span class="badge shadow  bg-success">' + data + '</span>'
                    }
                    else if (data == "Approved") {
                        return '<span class="badge shadow  bg-warning">' + data + '</span>'
                    }
                }
            },
            {
                data: "programmerName",
            },
            {
                data: null,
            },
        ],
        columnDefs:
            [{
                targets: [-1], render: function (a, b, data, d) {
                    if (data.softwareUserRequest.status == "Open") {
                        return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn btn-outline-success btn-sm edit me-2" data-id="' + data.id + '"><i class="bi bi-pencil-square"></i> Edit </button>' + 
                            '<button class="btn btn-outline-danger btn-sm cancel mt-2 me-2" data-id="' + data.id + '"><i class="bi bi-trash"></i> Cancel </button>';
;

                    }
                    else if (data.softwareUserRequest.status == "Accept") {
                        return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn btn-outline-success btn-sm edit me-2" data-id="' + data.id + '"><i class="bi bi-pencil-square"></i> Edit </button>' +
                            '<button class="btn btn-outline-danger btn-sm cancel mt-2 me-2" data-id="' + data.id + '"><i class="bi bi-trash"></i> Cancel </button>';


                    }
                    else if (data.softwareUserRequest.status == "Return Request") {
                        return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn btn-outline-success btn-sm edit me-2" data-id="' + data.id + '"><i class="bi bi-pencil-square"></i> Edit </button>' +
                            '<button class="btn btn-outline-danger btn-sm cancel mt-2 me-2" data-id="' + data.id + '"><i class="bi bi-trash"></i> Cancel </button>';


                    }
                    else if (data.softwareUserRequest.status == "Manual") {
                        return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn btn-outline-success btn-sm edit me-2" data-id="' + data.id + '"><i class="bi bi-pencil-square"></i> Edit </button>' +
                            '<button class="btn btn-outline-danger btn-sm cancel mt-2 me-2" data-id="' + data.id + '"><i class="bi bi-trash"></i> Cancel </button>';


                    }
                    else if (data.softwareUserRequest.status == "Update Request") {
                        return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn btn-outline-success btn-sm edit me-2" data-id="' + data.id + '"><i class="bi bi-pencil-square"></i> Edit </button>' +
                            '<button class="btn btn-outline-danger btn-sm cancel mt-2 me-2" data-id="' + data.id + '"><i class="bi bi-trash"></i> Cancel </button>';


                    }
                    else if (data.softwareUserRequest.status == "Cancel") {
                        return '<button class="btn btn-outline-info   btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary   btn-sm status me-2" data-id="' + data.id + '"><i class="bi bi-pen"></i> Status </button>';
                    }
                    else if (data.softwareUserRequest.status == "In Progress") {
                        return '<button class="btn btn-outline-info   btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn btn-outline-success btn-sm edit me-2" data-id="' + data.id + '"><i class="bi bi-pencil-square"></i> Edit </button>' +
                            '<button class="btn btn-outline-danger btn-sm cancel mt-2 me-2" data-id="' + data.id + '"><i class="bi bi-trash"></i> Cancel </button>';


                    }
                    else if (data.softwareUserRequest.status == "Verified") {
                        return '<button class="btn btn-outline-info   btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn btn-outline-success btn-sm edit me-2" data-id="' + data.id + '"><i class="bi bi-pencil-square"></i> Edit </button>' +
                            '<button class="btn btn-outline-danger btn-sm cancel mt-2 me-2" data-id="' + data.id + '"><i class="bi bi-trash"></i> Cancel </button>';


                    }
                    else if (data.softwareUserRequest.status == "Accepts Request") {
                        return '<button class="btn btn-outline-info   btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn btn-outline-success btn-sm edit me-2" data-id="' + data.id + '"><i class="bi bi-pencil-square"></i> Edit </button>' +
                            '<button class="btn btn-outline-danger btn-sm cancel mt-2 me-2" data-id="' + data.id + '"><i class="bi bi-trash"></i> Cancel </button>';


                    }
                    else if (data.softwareUserRequest.status == "Resolved") {
                        return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn btn-outline-success btn-sm edit me-2" data-id="' + data.id + '"><i class="bi bi-pencil-square"></i> Edit </button>' +
                            '<button class="btn btn-outline-danger btn-sm cancel mt-2 me-2" data-id="' + data.id + '"><i class="bi bi-trash"></i> Cancel </button>';


                    }
                    else if (data.softwareUserRequest.status == "Approved") {
                        return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn btn-outline-success btn-sm edit me-2" data-id="' + data.id + '"><i class="bi bi-pencil-square"></i> Edit </button>' +
                            '<button class="btn btn-outline-danger btn-sm cancel mt-2 me-2" data-id="' + data.id + '"><i class="bi bi-trash"></i> Cancel </button>';


                    }
                },
                orderable: false,
                width: "300px"
            }]
    });
    $('#softwareRequestList').on('click', '.status', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#StatusInputModal').modal('show');
                $('#statusInput').find('input[name="status"]').val(data.softwareUserRequest.status);
                $('#statusInput').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);

            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#btnStatus').click(function (e) {
        e.preventDefault();
        var id = $('#statusInput').find('input[name="softwareUserRequestId"]').val();
        var data = $('#statusInput').serialize();
        $.ajax({
            type: 'PUT',
            url: '/api/software/status/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                console.log(data.id);
                $('#StatusInputModal').modal('hide');

                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success(" Successfully Update Request!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    tables.ajax.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });

    $('#softwareRequestList').on('click', '.edit', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#editModalsf').modal('show');
                $('#softwareEdit').find('input[name="id"]').val(data.id);
                $('#softwareEdit').find('input[name="id"]').val(data.id);
                $('#softwareEdit').find('select[name="softwareId"]').val(data.softwareId);
                $('#softwareEdit').find('select[name="informationSystemId"]').val(data.informationSystemId);
                $('#softwareEdit').find('input[name="requestFor"]').val(data.requestFor);
                $('#softwareEdit').find('input[name="resulotion"]').val(data.resulotion);
                $('#softwareEdit').find('input[name="dateAdded"]').val(data.dateAdded);
                $('#softwareEdit').find('input[name="dateEnded"]').val(data.dateEnded);
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });

    $('#btnEditSubmit').click(function (e) {
        e.preventDefault();

        var id = $('#softwareEdit').find('input[name="id"]').val();
        var data = {
            softwareId: $('#softwareEdit').find('select[name=softwareId]').val(),
            informationSystemId: $('#softwareEdit').find('select[name=informationSystemId]').val(),
            requestFor: $('#softwareEdit').find('input[name=requestFor]').val(),
            dateAdded: $('#softwareEdit').find('input[name=dateAdded]').val(),
            resulotion: $('#softwareEdit').find('input[name=resulotion]').val(),
            dateEnded: $('#softwareEdit').find('input[name="dateEnded"]').val(),
        }
        $.ajax({
            type: 'PUT',
            url: '/api/software/v3/developer/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                $('#editModalsf').modal('hide');

                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success(" Successfully Update Request!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    tables.ajax.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });

    $('#softwareRequestList').on('click', '.cancel', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#CancelRequestModal').modal('show');
                $('#cancelReq').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
            },
            error: function (data) {
                toastr.error("Failed")
            }
        })
    });

    $('#cancel').click(function (e) {
        e.preventDefault();
        var id = $('#cancelReq').find('input[name="softwareUserRequestId"]').val();
        var data = $('#softwareUserRequestId').serialize();
        $.ajax({
            type: 'PUT',
            url: '/api/software/cancelRequest/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                console.log(data.id);
                $('#CancelRequestModal').modal('hide');

                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success(" Successfully Update Request!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    tables.ajax.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
        // a
    $('#softwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/user/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="fullName"]').val(data.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.divisionName);
                $('#viewRequest').find('input[name="softwareName"]').val(data.softwareName);
                $('#viewRequest').find('input[name="informationName"]').val(data.informationName);
                $('#viewRequest').find('input[name="requestFor"]').val(data.requestFor);
                $('#viewRequest').find('input[name="FileName"]').val(data.documentLabel);
                $('#viewRequest').find('textarea[name="description"]').val(data.description);
                $('#viewRequest').find('input[name="softwareUserRequestId"]').val(data.id);
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,

                    ajax: {
                        url: "/api/v2/uploads/" + id,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],

                });

                $('#upload2').find('input[name=softwareUserRequestId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=softwareUserRequestId]').find('option[value=' + data.id + ']').remove();
                });
                //$.ajax({
                //    type: 'GET',
                //    url: '/api/v2/Approver/getbyId/' + id,
                //    success: function (data, row) {
                //        $('#addImage').find('input[name="id"]').val(data.id);



                //    }

                //});
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#UploadList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        bootbox.confirm({
            message: "Are you sure you want to delete this image?",
            centerVertical: true,
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success btn-sm'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger btn-sm '
                }
            },
            callback: function (result) {
                if (result) {
                    $.ajax({

                        type: 'DELETE',
                        url: '/api/sur/deleteImage/' + id,
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        },
                        success: function (data) {
                            $('#pleasewait').modal('show');

                            $('#viewmodal').modal('hide');
                            setTimeout(function () {
                                toastr.success("File Successfully Deleted!");
                                // hide please wait modal
                            }, 2000);
                            setTimeout(function () {
                                $('#pleasewait').modal('hide');
                                window.location.reload();
                            }, 3000);
                        }
                    });
                }
            }
        });
    });

    $('#upload2').submit(function (e) {
        e.preventDefault();
        var formData = new FormData(this);
        $.ajax({
            url: '/api/v4/saveFile',
            type: 'POST',
            data: formData,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                $('#addimageModal').modal('hide');

                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("File Successfully Added!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    uploadTable.ajax.reload();
                }, 3000);
            },
            cache: false,
            contentType: false,
            processData: false,
            error: function (data) {
                toastr.error("Error Updating File")
            }
        });

    });

    //get Information Dropdown
    $.ajax({
        type: 'GET',
        url: '/api/info/System',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name = informationSystemId]').append('<option value=""> Select System</option>');
            $.each(data, function (index, value) {
                $('select[name=informationSystemId]').append('<option value="' + value.id + '">' + value.name + '</option>');

            })
        }
    });
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/software',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=softwareId]').append('<option value=""> Select Software</option>');
            $.each(data, function (index, value) {
                $('select[name=softwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });


    $('#UpdateRequest').click(function (e) {
        e.preventDefault();
        var id = $('#EditRequest').find('input[name="id"]').val();
        var data = $('#EditRequest').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/editRequest/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#editRequest').modal('hide');

                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("File Successfully Deleted!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    tables.ajax.reload();
                    $('#pleasewait').modal('hide');
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#softwareRequestList').on('click', '.edit-return', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/user/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#ReturneditRequest').modal('show');
                $('#return').find('input[name="id"]').val(data.id);
                $('#return').find('select[name="softwareId"]').val(data.softwareId);
                $('#return').find('select[name="informationSystemId"]').val(data.informationSystemId);
                $('#return').find('input[name="requestFor"]').val(data.requestFor);
                $('#return').find('input[name="documentLabel"]').val(data.documentLabel);
                $('#return').find('textarea[name="description"]').val(data.description);
            }
        })
        $('#ReturnRequest').click(function (e) {
            e.preventDefault();
            var id = $('#return').find('input[name="id"]').val();
            var data = $('#return').serialize();
            // alert(id);
            $.ajax({
                type: 'PUT',
                url: '/api/software/returnRequest/' + id,
                data: data,
                headers: {
                    'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                },
                success: function (data) {
                    $('#ReturneditRequest').modal('hide');

                    $('#pleasewait').modal('show');
                    //show toastr after 3
                    setTimeout(function () {
                        toastr.success("File Successfully Deleted!");
                        // hide please wait modal
                    }, 2000);
                    setTimeout(function () {
                        window.location.reload();
                        $('#pleasewait').modal('hide');
                    }, 3000);
                },
                //if failed
                error: function (data) {
                    toastr.error("Error Canceling a Request")
                }
            })
        });
    });

    $('#softwareRequestList').on('click', '.transac', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/user/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#transactionModal').modal('show');

                var refId = $('#softwareUserRequestId').val(data.id)
                var table = $('#progReport').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertask/sf/getbyId/" + id,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "softwareTaskId",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return '<span class="badge shadow bg-secondary">Requested</span>'
                                }
                                else if (data == 2) {
                                    return '<span class="badge shadow bg-info">Division Apperoved</span>'
                                }
                                else if (data == 3) {
                                    return '<span class="badge shadow bg-success">Assigned</span>'
                                }
                                else if (data == 4) {
                                    return '<span class="badge shadow bg-primary">Resolved</span>'
                                }
                                else if (data == 5) {
                                    return '<span class="badge shadow bg-danger">Verified</span>'
                                }
                                else if (data == 6) {
                                    return '<span class="badge shadow bg-warning">Approved</span>'
                                }
                            }
                        },
                        {
                            data: null,

                        },
                    ],
                    columnDefs:
                        [{
                            targets: [-1], render: function (a, b, data, d) {
                                if (data.softwareTask.id == 1) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 2) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 3) {
                                    return '<button class="btn btn-outline-primary btn-sm view me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';

                                }
                                else if (data.softwareTask.id == 4) {
                                    return '<button class="btn btn-outline-primary btn-sm view me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                                else if (data.softwareTask.id == 5) {
                                    return '<button class="btn btn-outline-primary btn-sm view me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                                else if (data.softwareTask.id == 6) {
                                    return '<button class="btn btn-outline-primary btn-sm view me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                            },
                            orderable: false,
                            width: "240px"
                        }]

                });
            }
        })
    });

    $('#progReport').on('click', '.view', function () {
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/Task/sf/get/" + id,
            success: function (data) {
                $('#transactionReportModal').modal('show');
                $('#report2').find('input[name="softwareName"]').val(data.programmerReport.softwareName);
                $('#report2').find('input[name="informationName"]').val(data.programmerReport.informationName);
                $('#report2').find('input[name="requestFor"]').val(data.programmerReport.requestFor);
                $('#report2').find('input[name="documentLabel"]').val(data.programmerReport.documentLabel);
                $('#report2').find('textarea[name="remarks"]').val(data.programmerReport.remarks);
                $('#report2').find('input[name="resulotion"]').val(data.programmerReport.resulotion);
                $('#report2').find('input[name="dateAdded"]').val(data.programmerReport.dateAdded);
                $('#report2').find('input[name="dateAssigned"]').val(data.programmerReport.dateAssigned);
                $('#report2').find('input[name="dateEnded"]').val(data.programmerReport.dateEnded);
                $('#report2').find('input[name="dateVerified"]').val(data.programmerReport.dateVerified);
                $('#report2').find('input[name="dateApproved"]').val(data.programmerReport.dateApproved);
                $('#report2').find('input[name="adminName"]').val(data.programmerReport.adminName);
                $('#report2').find('input[name="superAdminName"]').val(data.programmerReport.superAdminName);
                $('#report2').find('input[name="programmerReportId"').val(data.programmerReport.id);
                $('#report2').find('textarea[name="remarksApproval"]').val(data.programmerReport.remarksApproval);

                var progId = $('input[name="programmerReportId"]').attr('value');

                var uploadTable2 = $('#UploadList3').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + progId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            data: "remarksUploads"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],
                });

                $('#upload2').find('input[name=technicianReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=technicianReportId]').find('option[value=' + data.id + ']').remove();
                });
            }
        });
    });
}
function SoftwareIndex() {
    /*SoftwareTechForm();*/
    var AssigndeDataTables;
    AssigndeDataTables = $("#softwareRequestList").DataTable({
        "ajax": {
            "url": "/api/SoftwareRequest/v4/Get",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        // "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                "data": "softwareUserRequest.ticket",
                render: function (data, type, row) {
                    if (data == null) {
                        return '<span class="badge bg-danger">No Ticket</span>';
                    }
                    return `<span class="badge shadow bg-primary">${(data)}</span>`
                }

            },
            { "data": "softwareUserRequest.dateAdded" },
            { "data": "softwareUserRequest.fullName" },
            {
                "data": "softwareUserRequest.isManual",
                render: function (data) {
                    if (data == 0) {
                        return '<span class="badge shadow bg-warning">No</span>'
                    }
                    else
                        return '<span class="badge shadow bg-manual">Yes</span>'
                }
            },
            {
                "data": "softwareUserRequest.departmentName"
            },
            {
                "data": "softwareUserRequest.softwareName",
            },

            {
                "data": "softwareUserRequest.status",
                render: function (data) {
                    if (data == "Open") {
                        return '<span class="badge shadow bg-secondary">' + data + '</span>'
                    }
                    else if (data == "In Progress") {
                        return '<span class="badge shadow bg-info">' + data + '</span>'
                    }
                    else if (data == "Resolved") {
                        return '<span class="badge shadow bg-success">' + data + '</span>'
                    }
                    else if (data == "Accepts Request") {
                        return '<span class="badge shadow bg-info">In Progress</span>'
                    }
                    else if (data == "Manual") {
                        return '<span class="badge shadow bg-info">In Progress</span>'
                    }
                    else if (data == "Verified") {

                        return '<span class="badge shadow bg-primary">' + data + '</span>'
                    }
                    else if (data == "Cancel") {

                        return '<span class="badge shadow bg-danger">' + data + '</span>'
                    }
                    else if (data == "Approved") {

                        return '<span class="badge shadow bg-warning">' + data + '</span>'
                    }
                }
            },
            {
                "data": null
            }
        ],
        columnDefs:
            [{
                targets: [-1], render: function (a, b, data, d) {
                    if (data.softwareUserRequest.status == "Accept") {
                        return '<button class="btn btn-outline-info btn-sm  info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success btn-sm  report me-2" data-id="' + data.id + '"><i class="bi bi-check2"></i> Approve </button>';
                    }
                    else if (data.softwareUserRequest.status == "In Progress") {
                        return '<button class="btn btn-outline-info btn-sm  info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                        '<button class="btn btn-outline-primary btn-sm  transac2 me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' + 
                            '<button class="btn btn-outline-success btn-sm  report me-2" data-id="' + data.id + '"><i class="bi bi-card-checklist"></i> Report </button>';
                    }
                    else if (data.softwareUserRequest.status == "Manual") {
                        return '<button class="btn btn-outline-info btn-sm info-manual me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-secondary btn-sm  edit me-2" data-id="' + data.id + '"><i class="bi bi-pencil-square"></i> Edit </button>' +
                            '<button class="btn btn-outline-success btn-sm  report-manual me-2" data-id="' + data.id + '"><i class="bi bi-card-checklist"></i> Report </button>';

                    }
                    else if (data.softwareUserRequest.status == "Accepts Request") {
                        return '<button class="btn btn-outline-info btn-sm  info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-danger btn-sm  accept me-2" data-id="' + data.id + '"><i class="bi bi-check-lg"></i> Accept </button>';
                    }
                    else if (data.softwareUserRequest.status == "Resolved") {
                        return '<button class="btn btn-outline-info btn-sm  info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm  transac2 me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.softwareUserRequest.status == "Verified") {
                        return '<button class="btn btn-outline-info shadow btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm  transac2 me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn btn-outline-dark   btn-sm print mt-2 me-2" data-id="' + data.id + '"><i class="bi bi-printer"></i> Print </button>';
                    }
                    else if (data.softwareUserRequest.status == "Approved") {
                        return '<button class="btn btn-outline-info btn-sm  info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm  transac2 me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn btn-outline-dark  btn-sm mt-2 print me-2" data-id="' + data.id + '"><i class="bi bi-printer"></i> Print </button>';
                    }
                    else if (data.softwareUserRequest.status == "Cancel") {
                        return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }

                },
                orderable: false,
                width: "290px"
            }]
    });
    $('#softwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="id"]').val(data.id);
                $('#viewRequest').find('input[name="ticket"]').val(data.softwareUserRequest.ticket);
                $('#viewRequest').find('input[name="dateAdded"]').val(data.softwareUserRequest.dateAdded);
                $('#viewRequest').find('input[name="fullName"]').val(data.softwareUserRequest.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.softwareUserRequest.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.softwareUserRequest.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.softwareUserRequest.divisionName);
                $('#viewRequest').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#viewRequest').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest').find('input[name="FileName"]').val(data.softwareUserRequest.documentLabel);
                $('#viewRequest').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#viewRequest').find('input[name="divApprover"]').val(data.softwareAcceptsRequest.fullName);
                $('#viewRequest').find('input[name="dateAdded"]').val(data.softwareAcceptsRequest.dateAdded);
                $('#viewRequest').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                $('#progform').find('input[name="softwareName"]').val(data.softwareName);
                $('#progform').find('input[name="informationName"]').val(data.informationName);
                $('#progform').find('input[name="requestFor"]').val(data.requestFor);
                $('#progform').find('input[name="FileName"]').val(data.documentLabel);
                $('#progform').find('textarea[name="description"]').val(data.description);
                $('#progform').find('input[name="resulotion"]').val(data.resulotion);
                $('#progform').find('textarea[name="remarks"]').val(data.remarks);
                $('#progform').find('input[name="programmerReportId"]').val(data.id);
                $('#progform').find('input[name="dateAdded"]').val(data.dateAdded);
                $('#progform').find('input[name="programmerName"]').val(data.programmerName);
                $('#progform').find('input[name="dateAssigned"]').val(data.dateAssigned);
                $('#progform').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#progform').find('input[name="dateVerified"]').val(data.dateVerified);
                $('#progform').find('input[name="adminName"]').val(data.adminName);
                $('#progform').find('input[name="dateApproved"]').val(data.dateApproved);
                $('#progform').find('input[name="superAdminName"]').val(data.superAdminName);

                if (data.softwareUserRequest.status == "Open")
                    $('.update-image').prop('disabled', true)

                else if (data.softwareUserRequest.status == "In Progress")
                    $('.update-image').prop('disabled', true)

                else if (data.softwareUserRequest.status == "Accepts Request")
                    $('.update-image').prop('disabled', true)

                else if (data.softwareUserRequest.status == "Resolved")
                    $('.update-image').prop('disabled', false)
                else if (data.softwareUserRequest.status == "Manual")
                    $('.update-image').prop('disabled', true)
                else if (data.softwareUserRequest.status == "Verified")
                    $('.update-image').prop('disabled', true)

                else if (data.softwareUserRequest.status == "Approved")
                    $('.update-image').prop('disabled', true)
                else if (data.softwareUserRequest.status == "Cancel")
                    $('.update-image').prop('disabled', true)
                else
                    $('.update-image').prop('disabled', false)

                var sId =   $('#viewRequest').find('input[name="softwareUserRequestId"]').attr('value');
                console.log(sId);
                var uploadTable = $('#UploadList').DataTable({
                   
                    destroy: true,
                    ajax: {
                        url: "api/v2/uploads/" + sId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],

                });
                var techId =   $('#progform').find('input[name="programmerReportId"]').attr('value');
                var uploadTable2 = $('#progUploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + techId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                        {
                            data: null
                        }
                    ],
                    columnDefs:
                        [{
                            targets: [-1], render: function (a, b, data, d) {
                                if (data.programmerReport.technicianAdminId == 2) {
                                    return '';
                                }
                                else if (data.programmerReport.technicianAdminId == null) {
                                    return '<button type="button" class="btn btn-outline-danger btn-sm delete me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> delete </button>';
                                }
                            },
                            orderable: false,
                            width: "280px"
                        }]
                });
                $('#upload2').find('input[name=programmerReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=softwareUserRequestId]').find('option[value=' + data.id + ']').remove();
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    setInterval (function () {
        AssigndeDataTables.ajax.reload();
    }, 10000);

    $('#softwareRequestList').on('click', '.info-manual', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal-manual').modal('show');
                $('#viewRequestManual').find('input[name="id"]').val(data.id);
                $('#viewRequestManual').find('input[name="ticket"]').val(data.softwareUserRequest.ticket);
                $('#viewRequestManual').find('input[name="dateAdded"]').val(data.softwareUserRequest.dateAdded);
                $('#viewRequestManual').find('input[name="fullName"]').val(data.softwareUserRequest.fullName);
                $('#viewRequestManual').find('input[name="mobileNumber"]').val(data.softwareUserRequest.mobileNumber);
                $('#viewRequestManual').find('input[name="departmentName"]').val(data.softwareUserRequest.departmentName);
                $('#viewRequestManual').find('input[name="divisionName"]').val(data.softwareUserRequest.divisionName);
                $('#viewRequestManual').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#viewRequestManual').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#viewRequestManual').find('input[name="FileName"]').val(data.softwareUserRequest.documentLabel);
                $('#viewRequestManual').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#viewRequestManual').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                $('#progformManual').find('input[name="softwareName"]').val(data.softwareName);
                $('#progformManual').find('input[name="informationName"]').val(data.informationName);
                $('#progformManual').find('input[name="requestFor"]').val(data.requestFor);
                $('#progformManual').find('input[name="FileName"]').val(data.documentLabel);
                $('#progformManual').find('textarea[name="description"]').val(data.description);
                $('#progformManual').find('input[name="resulotion"]').val(data.resulotion);
                $('#progformManual').find('textarea[name="remarks"]').val(data.remarks);
                $('#progformManual').find('input[name="programmerReportId"]').val(data.id);
                $('#progformManual').find('input[name="dateAdded"]').val(data.dateAdded);
                $('#progformManual').find('input[name="programmerName"]').val(data.programmerName);
                $('#progformManual').find('input[name="dateAssigned"]').val(data.dateAssigned);
                $('#progformManual').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#progformManual').find('input[name="dateVerified"]').val(data.dateVerified);
                $('#progformManual').find('input[name="adminName"]').val(data.adminName);
                $('#progformManual').find('input[name="dateApproved"]').val(data.dateApproved);
                $('#progformManual').find('input[name="superAdminName"]').val(data.superAdminName);

                if (data.softwareUserRequest.status == "Open")
                    $('.update-image').prop('disabled', true)

                else if (data.softwareUserRequest.status == "In Progress")
                    $('.update-image').prop('disabled', true)

                else if (data.softwareUserRequest.status == "Accepts Request")
                    $('.update-image').prop('disabled', true)

                else if (data.softwareUserRequest.status == "Resolved")
                    $('.update-image').prop('disabled', false)
                else if (data.softwareUserRequest.status == "Manual")
                    $('.update-image').prop('disabled', true)
                else if (data.softwareUserRequest.status == "Verified")
                    $('.update-image').prop('disabled', true)

                else if (data.softwareUserRequest.status == "Approved")
                    $('.update-image').prop('disabled', true)
                else if (data.softwareUserRequest.status == "Cancel")
                    $('.update-image').prop('disabled', true)
                else
                    $('.update-image').prop('disabled', false)

                var sId = $('input[name="softwareUserRequestId"]').val();
                var uploadTable = $('#UploadListManual').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/uploads/" + sId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],

                });

                var techId = $('input[name="programmerReportId"]').attr('value');
                var uploadTable2 = $('#progUploadListManual').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + techId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                        {
                            data: null
                        }
                    ],
                    columnDefs:
                        [{
                            targets: [-1], render: function (a, b, data, d) {
                                if (data.programmerReport.technicianAdminId == 2) {
                                    return '';
                                }
                                else if (data.programmerReport.technicianAdminId == null) {
                                    return '<button type="button" class="btn btn-outline-danger btn-sm delete me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> delete </button>';
                                }
                            },
                            orderable: false,
                            width: "280px"
                        }]
                });
                $('#upload2').find('input[name=programmerReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal-manual').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=softwareUserRequestId]').find('option[value=' + data.id + ']').remove();
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#softwareRequestList').on('click', '.report', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#ReportModal').modal('show')
                $('#report2').find('select[name="softwareId"]').val(data.softwareUserRequest.softwareId);
                $('#report2').find('select[name="informationSystemId"]').val(data.softwareUserRequest.informationSystemId);
                $('#report2').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#report2').find('input[name="documentLabel"]').val(data.softwareUserRequest.documentLabel);
                $('#report2').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#report2').find('input[name="programmerReportId"]').val(data.id);
                $('#report2').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                $('#report2').find('input[name="mobileNumber"]').val(data.softwareUserRequest.mobileNumber);
            }
        })
    });
    $('#softwareRequestList').on('click', '.report-manual', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#ReportManualModal').modal('show')
                $('#report2manual').find('select[name="softwareId"]').val(data.softwareUserRequest.softwareId);
                $('#report2manual').find('select[name="informationSystemId"]').val(data.softwareUserRequest.informationSystemId);
                $('#report2manual').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#report2manual').find('input[name="documentLabel"]').val(data.softwareUserRequest.documentLabel);
                $('#report2manual').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#report2manual').find('input[name="programmerReportId"]').val(data.id);
                $('#report2manual').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                $('#report2manual').find('input[name="mobileNumber"]').val(data.softwareUserRequest.mobileNumber);


            }
        })
    });
    //Software
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/software',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=softwareId]').append('<option value=""> Select Software</option>');
            $.each(data, function (index, value) {
                $('select[name=softwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //Software
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/infoSystem',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=informationSystemId]').append('<option value=""> Select System</option>');
            $.each(data, function (index, value) {
                $('select[name=informationSystemId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    //Manualsave
    $('#btnSubmitManual').click(function (e) {
        e.preventDefault();
        var id = $('#report2manual').find('input[name="programmerReportId"]').val();
        var data = $('#report2manual').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/manual/assigned/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //$('#editRequest').modal('hide');

                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {
                //    toastr.success("File Successfully Deleted!");
                //    // hide please wait modal
                //}, 2000);
                //setTimeout(function () {
                //    tables.ajax.reload();
                //    $('#pleasewait').modal('hide');
                //}, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error")
            }
        });
        var id = $('#report2manual').find('input[name="softwareUserRequestId"]').val();
        var data = $('#report2manual').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/Reported/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //$('#editRequest').modal('hide');

                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {
                //    toastr.success("File Successfully Deleted!");
                //    // hide please wait modal
                //}, 2000);
                //setTimeout(function () {
                //    tables.ajax.reload();
                //    $('#pleasewait').modal('hide');
                //}, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });

    $('#btnSubmitManual').click(function (e) {
        e.preventDefault();
        var formData = new FormData(report2manual);
        $.ajax({
            url: '/api/prog/saveFile',
            type: 'POST',
            data: formData,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#report2manual').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {

                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    location.reload();
                }, 3000);
            },
            cache: false,
            contentType: false,
            processData: false,
            error: function (data) {
                toastr.error("Error Updating File")
            }
        });

    });
    $('#btnSubmit').click(function (e) {
        e.preventDefault();
        var id = $('#report2').find('input[name="programmerReportId"]').val();
        var data = $('#report2').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/v3/assigned/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //$('#editRequest').modal('hide');

                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {
                //    toastr.success("File Successfully Deleted!");
                //    // hide please wait modal
                //}, 2000);
                //setTimeout(function () {
                //    tables.ajax.reload();
                //    $('#pleasewait').modal('hide');
                //}, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#btnSubmit').click(function (e) {
        e.preventDefault();
        var id = $('#report2').find('input[name="softwareUserRequestId"]').val();
        var data = $('#report2').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/Reported/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //$('#editRequest').modal('hide');

                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {
                //    toastr.success("File Successfully Deleted!");
                //    // hide please wait modal
                //}, 2000);
                //setTimeout(function () {
                //    tables.ajax.reload();
                //    $('#pleasewait').modal('hide');
                //}, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#btnSubmit').click(function (e) {
        e.preventDefault();
        var formData = new FormData(report2);
        $.ajax({
            url: '/api/prog/saveFile',
            type: 'POST',
            data: formData,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#ReportModal').modal('hide');
                //show please wait modal
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {

                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    location.reload();
                    $('#report2')[0].reset();
                }, 3000);
            },
            cache: false,
            contentType: false,
            processData: false,
            error: function (data) {
                toastr.error("Error Updating File")
            }
        });

    });
    $('#upload2').submit(function (e) {
        e.preventDefault();
        var formData = new FormData(this);
        $.ajax({
            url: '/api/prog/saveFile',
            type: 'POST',
            data: formData,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                $('#addimageModal').modal('hide');

                /*  show please wait modal*/
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("File Successfully Added!");
                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    location.reload();
                    $('#upload2')[0].reset();
                }, 3000);
            },
            cache: false,
            contentType: false,
            processData: false,
            error: function (data) {
                toastr.error("Error Updating File")
            }
        });

    });
    $('#progUploadList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        bootbox.confirm({
            message: "Are you sure you want to delete this image?",
            centerVertical: true,

            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success btn-sm'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger btn-sm '
                }
            },
            callback: function (result) {
                if (result) {
                    $.ajax({

                        type: 'DELETE',
                        url: '/api/v2/sf/deleteImage/' + id,
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        },
                        success: function (data) {
                            $('#pleasewait').modal('show');
                            //show toastr after 3
                            setTimeout(function () {
                                toastr.success("Image Successfully Remove!");
                                // hide please wait modal
                            }, 2000);
                            setTimeout(function () {
                                window.location.reload();
                            }, 3000);
                        }
                    });
                }
            }
        });
    });
    $('#softwareRequestList').on('click', '.edit', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#editModalsf').modal('show');
                $('#manualRequest4').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);

                $('#manualRequest4').find('input[name="fullName"]').val(data.softwareUserRequest.fullName);
                $('#manualRequest4').find('input[name="email"]').val(data.softwareUserRequest.email);
                $('#manualRequest4').find('input[name="mobileNumber"]').val(data.softwareUserRequest.mobileNumber);
                $('#manualRequest4').find('select[name="departmentsId"]').val(data.softwareUserRequest.departmentsId);
                $('#manualRequest4').find('select[name="divisionsId"]').val(data.softwareUserRequest.divisionsId);

                $('#manualRequest4').find('select[name="softwareId"]').val(data.softwareUserRequest.softwareId);
                $('#manualRequest4').find('select[name="informationSystemId"]').val(data.softwareUserRequest.informationSystemId);
                $('#manualRequest4').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#manualRequest4').find('input[name="documentLabel"]').val(data.softwareUserRequest.documentLabel);
                $('#manualRequest4').find('textarea[name="description"]').val(data.softwareUserRequest.description);



            }
        })
    });
    $.ajax({
        type: 'GET',
        url: '/api/hardwareRequest/department',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            var html = '<option value="">Select Department</option>';
            $.each(data, function (i, item) {
                html += '<option value="' + item.id + '">' + item.name + '</option>';
            });
            $('select[name=departmentsId]').html(html);
            // render divisionsId select
            // console log on select change
            $('select[name=departmentsId]').on('change', function () {
                var depId = $('select[name=departmentsId]').val();
                $.ajax({
                    type: 'GET',
                    url: '/api/div/fetchbyid/' + depId,
                    headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('access_token')
                    },
                    success: function (data) {
                        var html = '<option value="0">Select Division</option>';
                        $.each(data, function (i, item) {
                            html += '<option value="' + item.id + '">' + item.name + '</option>';
                        });
                        //console.log(data);
                        $('select[name=divisionsId]').html(html);
                    }
                });
            });
        }
    });
    $.ajax({
        type: 'GET',
        url: '/api/User/division',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=divisionsId]').append('<option value=""> Select Division</option>');
            $.each(data, function (index, value) {
                $('select[name=divisionsId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });
    $('#btnEditSubmit').click(function (e) {
        e.preventDefault();

        var softwareRequestId = $('#manualRequest4').find('input[name="softwareUserRequestId"]').val();
        var data = $('#manualRequest4').serialize();
        //alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/edit/sf/manual/progReport/' + softwareRequestId,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                console.log(data.id);
                $('#pleasewait').modal('show');

                $('#editModalsf').modal('hide');
                setTimeout(function () {
                    toastr.success("File Successfully Updated!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    $('#pleasewait').modal('hide');
                    window.location.reload();
                }, 3000);
            },
            //if faile
            error: function (data) {
                console.log(data.id);

                toastr.error("Fill up alll forms / Invalid")
            }
        })
    });
    $('#softwareRequestList').on('click', '.accept', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#AcceptModal').modal('show');
                $('#accepts2').find('input[name=softwareUserRequestId]').val(data.softwareUserRequest.id);
                $('#accepts2').find('input[name=programmerReportId]').val(data.id);

            }
        })
        // alert(data);
    });
    $('#BtnAccept').click(function (e) {
        e.preventDefault();
        var id = $('#accepts2').find('input[name="programmerReportId"]').val();
        var data = $('#accepts2').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/AssignedAccepted2/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#AcceptModal').modal('hide');

                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Data Successfully Approved!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#BtnAccept').click(function (e) {
        e.preventDefault();
        var id = $('#accepts2').find('input[name="softwareUserRequestId"]').val();
        var data = $('#accepts2').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/AssignedAccepted/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                console.log(data);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#softwareRequestList').on('click', '.print', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#PrintModal').modal('show');
                $('#print').find('input[name="id"]').val(data.id);
                $('#print').find('input[name="fullName"]').val(data.softwareUserRequest.fullName);
                $('#print').find('input[name="ticket"]').val(data.softwareUserRequest.ticket);
                $('#print').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#print').find('input[name="informationName"]').val(data.softwareUserRequest.informationName);
                $('#print').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#print').find('input[name="description"]').val(data.softwareUserRequest.description);
                $('#print').find('input[name="departmentName"]').val(data.softwareUserRequest.departmentName);
                $('#print').find('input[name="divisionName"]').val(data.softwareUserRequest.divisionName);
                $('#print').find('input[name="programmerName"]').val(data.programmerName);
                $('#print').find('input[name="remarks"]').val(data.remarks);
                $('#print').find('input[name="dateAssigned"]').val(data.dateAssigned);
                $('#print').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#print').find('input[name="adminName"]').val(data.adminName);
                $('#print').find('input[name="superAdminName"]').val(data.superAdminName);


            }
        })
    });
    $('#softwareRequestList').on('click', '.transac2', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#transactionModal').modal('show');

                $('#newSystem2').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                var refId = $('#newSystem2').find('#softwareUserRequestId').attr('value');
                var table = $('#progReport2').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertask/sf/getbyId/" + refId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "softwareUserRequestId",
                            render: function (data, type, row)
                            {
                                return '<span class="badge shadow bg-primary">'+row.softwareUserRequest.ticket+'</span>'
                            }
                        },
                        {
                            data: "softwareUserRequestId",
                            render: function (data, type, row)
                            {
                                return row.softwareUserRequest.fullName
                            }
                        },
                        {
                            data: "softwareTaskId",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return '<span class="badge shadow bg-secondary">Requested</span>'
                                }
                                else if (data == 2) {
                                    return '<span class="badge shadow bg-info">Division Apperoved</span>'
                                }
                                else if (data == 3) {
                                    return '<span class="badge shadow bg-warning">Assigned</span>'
                                }
                                else if (data == 4) {
                                    return '<span class="badge shadow bg-success">Resolved</span>'
                                }
                                else if (data == 5) {
                                    return '<span class="badge shadow bg-primary">Verified</span>'
                                }
                                else if (data == 6) {
                                    return '<span class="badge shadow bg-danger">Approved</span>'
                                }
                            }
                        },
                        {
                            data: null,

                        },
                    ],
                    columnDefs:
                        [{
                            targets: [-1], render: function (a, b, data, d) {
                                if (data.softwareTask.id == 1) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 2) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 3) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 4) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 5) {
                                    return '<button class="btn btn-outline-primary btn-sm divApproved me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                                else if (data.softwareTask.id == 6) {
                                    return '<button class="btn btn-outline-primary btn-sm view2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                            },
                            orderable: false,
                            width: "300px"
                        }]

                });
            }
        })
    });
    $('#progReport2').on('click', '.view2', function (e) {
        e.preventDefault();
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/Task/sf/get/" + id,
            success: function (data) {
                $('#transactionReportModal').modal('show');
                $('#report3').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#report3').find('input[name="informationName"]').val(data.softwareUserRequest.informationName);
                $('#report3').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#report3').find('input[name="documentLabel"]').val(data.softwareUserRequest.documentLabel);
                $('#report3').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#report3').find('input[name="resulotion"]').val(data.programmerReport.resulotion);
                $('#report3').find('input[name="dateAdded"]').val(data.programmerReport.dateAdded);
                $('#report3').find('input[name="dateAssigned"]').val(data.programmerReport.dateAssigned);
                $('#report3').find('input[name="dateEnded"]').val(data.programmerReport.dateEnded);
                $('#report3').find('input[name="dateVerified"]').val(data.programmerReport.dateVerified);
                $('#report3').find('textarea[name="remarks"]').val(data.programmerReport.remarks);
                $('#report3').find('input[name="dateApproved"]').val(data.programmerReport.dateApproved);
                $('#report3').find('input[name="adminName"]').val(data.programmerReport.adminName);
                $('#report3').find('input[name="superAdminName"]').val(data.programmerReport.superAdminName);
                $('#report3').find('input[name="programmerName"]').val(data.programmerReport.softwareTechnicianName);
                $('#report3').find('textarea[name="remarksApproval"]').val(data.softwareApproved.remarksApproval);

                $('#report3').find('input[name="programmerReportId"').val(data.programmerReport.id);

                var progId = $('#report3').find('input[name="programmerReportId"]').attr('value');
                var uploadTable2 = $('#UploadList3').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + progId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            data: "remarksUploads"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],
                });


                // refresh page on modal close
                $('#transactionReportModal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=programmerReportId]').find('option[value=' + data.id + ']').remove();
                });
            }
        });
    });


    $('#progReport2').on('click', '.divApproved', function (e) {
        e.preventDefault(); 
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/Task/sf/get/" + id,
            success: function (data) {
                $('#divApprover').modal('show');
                $('#approver').find('input[name="fullName"]').val(data.softwareAcceptsRequest.fullName);
                $('#approver').find('input[name="dateAdded"]').val(data.softwareAcceptsRequest.dateAdded);
                $('#approver').find('input[name="departmentName"]').val(data.softwareAcceptsRequest.departmentName);
                $('#approver').find('input[name="divisionName"]').val(data.softwareAcceptsRequest.divisionName);
                // refresh page on modal close
                $('#divApprover').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=programmerReportId]').find('option[value=' + data.id + ']').remove();
                });
            }
        });
    });



    //SuperAdmin
    var tables2 = $("#softwareRequestList4").DataTable({
        "ajax": {
            "url": "/api/SoftwareRequest/v4/Get",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                "data": "softwareUserRequest.ticket",
                render: function (data, type, row) {
                    if (data == null) {
                        return '<span class="badge bg-danger">No Ticket</span>';
                    }
                    return `<span class="badge shadow bg-primary">${(data)}</span>`
                }

            },
            { "data": "softwareUserRequest.dateAdded" },
            { "data": "softwareUserRequest.fullName" },
            {
                "data": "softwareUserRequest.isManual",
                render: function (data) {
                    if (data == 0) {
                        return 'User Request'
                    }
                    else
                        return 'Manual Request'
                }
            },
            {
                "data": "softwareUserRequest.departmentName"
            },
            {
                "data": "softwareUserRequest.softwareName",
            },

            {
                "data": "softwareUserRequest.status",
                render: function (data) {
                    if (data == "Open") {
                        return '<span class="badge shadow bg-secondary">' + data + '</span>'
                    }
                    else if (data == "In Progress") {
                        return '<span class="badge shadow bg-info">' + data + '</span>'
                    }
                    else if (data == "Resolved") {
                        return '<span class="badge shadow bg-success">' + data + '</span>'
                    }
                    else if (data == "Accepts Request") {
                        return '<span class="badge shadow bg-info">In Progress</span>'
                    }
                    else if (data == "Manual") {
                        return '<span class="badge shadow bg-info">In Progress</span>'
                    }
                    else if (data == "Verified") {

                        return '<span class="badge shadow bg-primary">' + data + '</span>'
                    }
                    else if (data == "Approved") {

                        return '<span class="badge shadow bg-success">' + data + '</span>'
                    }
                    else if (data == "Cancel") {

                        return '<span class="badge shadow bg-danger">' + data + '</span>'
                    }
                }
            },
            {
                "data": null
            }
        ],
        columnDefs:
            [{
                targets: [-1], render: function (a, b, data, d) {
                    if (data.softwareUserRequest.status == "Accept") {
                        return '<button class="btn btn-outline-info btn-sm shadow info2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success btn-sm shadow report2 me-2" data-id="' + data.id + '"><i class="bi bi-check2"></i> Approve </button>';
                    }
                    else if (data.softwareUserRequest.status == "In Progress") {
                        return '<button class="btn btn-outline-info btn-sm shadow info2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success btn-sm shadow report2 me-2" data-id="' + data.id + '"><i class="bi bi-card-checklist"></i> Report </button>';
                    }
                    else if (data.softwareUserRequest.status == "Manual") {
                        return '<button class="btn btn-outline-info btn-sm info2 shadow me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-secondary btn-sm shadow edit me-2" data-id="' + data.id + '"><i class="bi bi-pencil-square"></i> Edit </button>' +
                            '<button class="btn btn-outline-success btn-sm shadow report2 me-2" data-id="' + data.id + '"><i class="bi bi-card-checklist"></i> Report </button>';

                    }
                    else if (data.softwareUserRequest.status == "Accepts Request") {
                        return '<button class="btn btn-outline-info btn-sm shadow info2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-danger btn-sm shadow accept me-2" data-id="' + data.id + '"><i class="bi bi-gear"></i> Accept </button>';
                    }
                    else if (data.softwareUserRequest.status == "Resolved") {
                        return '<button class="btn btn-outline-info btn-sm shadow info2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary btn-sm shadow transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                    }
                    else if (data.softwareUserRequest.status == "Verified") {
                        return '<button class="btn btn-outline-info shadow btn-sm info2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-dark shadow  btn-sm print2 mt-2 me-2" data-id="' + data.id + '"><i class="bi bi-printer"></i> Print </button>';
                    }
                    else if (data.softwareUserRequest.status == "Approved") {
                        return '<button class="btn btn-outline-info btn-sm shadow info2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-dark shadow btn-sm print2 me-2" data-id="' + data.id + '"><i class="bi bi-printer"></i> Print </button>';
                    }
                    else if (data.softwareUserRequest.status == "Cancel") {
                        return '<button class="btn btn-outline-info shadow btn-sm info2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                    }

                },
                orderable: false,
                width: "230px"
            }]
    });
    $('#softwareRequestList4').on('click', '.info2', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal2').modal('show');
                $('#viewRequest2').find('input[name="id"]').val(data.id);
                $('#viewRequest2').find('input[name="fullName"]').val(data.softwareUserRequest.fullName);
                $('#viewRequest2').find('input[name="mobileNumber"]').val(data.softwareUserRequest.mobileNumber);
                $('#viewRequest2').find('input[name="departmentName"]').val(data.softwareUserRequest.departmentName);
                $('#viewRequest2').find('input[name="divisionName"]').val(data.softwareUserRequest.divisionName);
                $('#viewRequest2').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#viewRequest2').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest2').find('input[name="FileName"]').val(data.softwareUserRequest.documentLabel);
                $('#viewRequest2').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#viewRequest2').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                $('#progform2').find('input[name="softwareName"]').val(data.softwareName);
                $('#progform2').find('input[name="informationName"]').val(data.informationName);
                $('#progform2').find('input[name="requestFor"]').val(data.requestFor);
                $('#progform2').find('input[name="FileName"]').val(data.documentLabel);
                $('#progform2').find('textarea[name="description"]').val(data.description);
                $('#progform2').find('input[name="resulotion"]').val(data.resulotion);
                $('#progform2').find('textarea[name="remarks"]').val(data.remarks);
                $('#progform2').find('input[name="programmerReportId"]').val(data.id);
                $('#progform2').find('input[name="dateAdded"]').val(data.dateAdded);
                $('#progform2').find('input[name="programmerName"]').val(data.programmerName);
                $('#progform2').find('input[name="dateAssigned"]').val(data.dateAssigned);
                $('#progform2').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#progform2').find('input[name="dateVerified"]').val(data.dateVerified);
                $('#progform2').find('input[name="adminName"]').val(data.adminName);
                $('#progform2').find('input[name="dateApproved"]').val(data.dateApproved);
                $('#progform2').find('input[name="superAdminName"]').val(data.superAdminName);

                if (data.softwareUserRequest.status == "Open")
                    $('.update-image').prop('disabled', true)

                else if (data.softwareUserRequest.status == "In Progress")
                    $('.update-image').prop('disabled', true)

                else if (data.softwareUserRequest.status == "Accepts Request")
                    $('.update-image').prop('disabled', true)

                else if (data.softwareUserRequest.status == "Resolved")
                    $('.update-image').prop('disabled', true)
                else if (data.softwareUserRequest.status == "Manual")
                    $('.update-image').prop('disabled', true)
                else if (data.softwareUserRequest.status == "Verified")
                    $('.update-image').prop('disabled', true)

                else if (data.softwareUserRequest.status == "Approved")
                    $('.update-image').prop('disabled', false)
                else if (data.softwareUserRequest.status == "Cancel")
                    $('.update-image').prop('disabled', true)
                else
                    $('.update-image').prop('disabled', false)

                var sId = $('input[name="softwareUserRequestId"]').val();
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/uploads/" + sId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],

                });

                var techId = $('input[name="programmerReportId"]').attr('value');
                var uploadTable2 = $('#progUploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + techId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                        {
                            data: null
                        }
                    ],
                    columnDefs:
                        [{
                            targets: [-1], render: function (a, b, data, d) {
                                if (data.programmerReport.technicianAdminId == 2) {
                                    return '';
                                }
                                else if (data.programmerReport.technicianAdminId == null) {
                                    return '<button type="button" class="btn btn-outline-danger btn-sm delete me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> delete </button>';
                                }
                            },
                            orderable: false,
                            width: "280px"
                        }]
                });
                $('#upload2').find('input[name=programmerReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=softwareUserRequestId]').find('option[value=' + data.id + ']').remove();
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });

    $('#softwareRequestList4').on('click', '.report2', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#ReportModal2').modal('show')
                $('#report3').find('select[name="softwareId"]').val(data.softwareUserRequest.softwareId);
                $('#report3').find('select[name="informationSystemId"]').val(data.softwareUserRequest.informationSystemId);
                $('#report3').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#report3').find('input[name="documentLabel"]').val(data.softwareUserRequest.documentLabel);
                $('#report3').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#report3').find('input[name="programmerReportId"]').val(data.id);
                $('#report3').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                $('#report3').find('input[name="mobileNumber"]').val(data.softwareUserRequest.mobileNumber);


            }
        })
    });

    $('#btnSubmitApproved').click(function (e) {
        e.preventDefault();
        var id = $('#report3').find('input[name="programmerReportId"]').val();
        var data = $('#report3').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/v3/Approved/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //$('#editRequest').modal('hide');

                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {
                //    toastr.success("File Successfully Deleted!");
                //    // hide please wait modal
                //}, 2000);
                //setTimeout(function () {
                //    tables.ajax.reload();
                //    $('#pleasewait').modal('hide');
                //}, 3000);

                $('#description').find('select[name="resulotion"]').val("-1");
                $('#report3').find('input[name="remarks"]').val("");

            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#btnSubmitApproved').click(function (e) {
        e.preventDefault();
        var formData = new FormData(report3);
        $.ajax({
            url: '/api/prog/saveFile',
            type: 'POST',
            data: formData,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //$('#ReportModal2').modal('hide');
                ////show please wait modal
                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {

                //    // hide please wait modal

                //}, 2000);
                //setTimeout(function () {
                //    location.reload();

                //}, 3000);
            },
            cache: false,
            contentType: false,
            processData: false,
            error: function (data) {
                toastr.error("Error Updating File")
            }
        });
    });
    $('#btnSubmitApproved').click(function (e) {
        e.preventDefault();
        var id = $('#report3').find('input[name="softwareUserRequestId"]').val();
        var data = $('#report3').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/Reported/Approver/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#ReportModal2').modal('hide');

                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("File Successfully Deleted!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    tables2.ajax.reload();
                    $('#pleasewait').modal('hide');
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#softwareRequestList4').on('click', '.print2', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#PrintModal2').modal('show');
                $('#print2').find('input[name="id"]').val(data.id);
                $('#print2').find('input[name="fullName"]').val(data.softwareUserRequest.fullName);
                $('#print2').find('input[name="ticket"]').val(data.softwareUserRequest.ticket);
                $('#print2').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#print2').find('input[name="informationName"]').val(data.softwareUserRequest.informationName);
                $('#print2').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#print2').find('input[name="description"]').val(data.softwareUserRequest.description);
                $('#print2').find('input[name="departmentName"]').val(data.softwareUserRequest.departmentName);
                $('#print2').find('input[name="divisionName"]').val(data.softwareUserRequest.divisionName);
                $('#print2').find('input[name="programmerName"]').val(data.programmerName);
                $('#print2').find('input[name="remarks"]').val(data.remarks);
                $('#print2').find('input[name="dateAssigned"]').val(data.dateAssigned);
                $('#print2').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#print2').find('input[name="adminName"]').val(data.adminName);
                $('#print2').find('input[name="superAdminName"]').val(data.superAdminName);


            }
        })
    });
}
function SoftwareInProgressList() {
    var tables;
    tables = $("#softwareRequestList").DataTable({
        "ajax": {
            "url": "/api/SoftwareRequest/progress/Get",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "order": [[1, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                "data": "softwareUserRequest.ticket",
                render: function (data, row) {
                    return '<span class="badge shadow bg-primary" >' + data + '</span>'
                }
            },
            { "data": "softwareUserRequest.dateAdded" },
            { "data": "softwareUserRequest.fullName" },
            {
                "data": "softwareUserRequest.isManual",
                render: function (data) {
                    if (data == true) {
                        return  '<span class="badge shadow  bg-manual" >Yes</span>'
                    }
                    else
                        return '<span class="badge shadow  bg-warning" >No</span>'
                }
            },
            {
                "data": "softwareUserRequest.softwareName",
            },

            {
                "data": "softwareUserRequest.status",
                render: function (data, type, row) {
                    if (row.softwareUserRequest.status == "In Progress") {
                        return '<span class="badge shadow  bg-info" >' + data + '</span>'
                    }
                    else if (row.softwareUserRequest.status == "Manual") {
                        return '<span class="badge shadow  bg-info" >In Progress</span>'
                    }
                    else
                        return '<span class="badge shadow  bg-info">In Progress</span>'
                }

            },
            {
                "data": "programmerName",
            },
            {
                data: null,
            },

        ],
        "columnDefs": [{
            targets: [-1], render: function (a, b, data, d) {
                if (data.softwareUserRequest.status == "Open") {
                    return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                        '<button class="btn btn-outline-primary  btn-sm assign me-2" data-id="' + data.id + '"><i class="bi bi-people-fill"></i>Technician</button>';
                }
                else if (data.softwareUserRequest.status == "In Progress") {
                    return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                        '<button class="btn ms-1 btn-outline-success  btn-sm re-assign me-2" data-id="' + data.id + '"><i class="bi bi-person-fill"></i> Re-assign Technician </button>';
                }
                else if (data.softwareUserRequest.status == "Manual") {
                    return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                        '<button class="btn ms-1 btn-outline-success  btn-sm re-assign me-2" data-id="' + data.id + '"><i class="bi bi-person-fill"></i> Re-assign Technician </button>';
                }
                else if (data.softwareUserRequest.status == "Resolved") {
                    return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.softwareUserRequest.status == "Verified") {
                    return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.softwareUserRequest.status == "Approved") {
                    return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.softwareUserRequest.status == "Cancel") {
                    return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.softwareUserRequest.status == "Accepts Request")
                    return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                        '<button class="btn ms-1 btn-outline-success  btn-sm re-assign me-2" data-id="' + data.id + '"><i class="bi bi-person-fill"></i> Re-assign Technician </button>';
            },
            orderable: false,
            width: "290px"
        }]
    });

    $('#softwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/ProgAssigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="fullName"]').val(data.softwareUserRequest.fullName);
                $('#viewRequest').find('input[name="ticket"]').val(data.softwareUserRequest.ticket);
                $('#viewRequest').find('input[name="dateAdded"]').val(data.softwareUserRequest.dateAdded);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.softwareUserRequest.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.softwareUserRequest.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.softwareUserRequest.divisionName);
                $('#viewRequest').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#viewRequest').find('input[name="informationName"]').val(data.softwareUserRequest.informationName);
                $('#viewRequest').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest').find('input[name="documentLabel"]').val(data.softwareUserRequest.documentLabel);
                $('#viewRequest').find('textarea[name="description"]').val(data.softwareUserRequest.description);

                $('#viewRequest').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);

                var reqId = $('#viewRequest').find('input[name=softwareUserRequestId]').attr('value');
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,

                    ajax: {
                        url: "/api/v2/uploads/" + reqId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],

                });

                $('#upload2').find('input[name=hardwareUserRequestId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=hardwareUserRequestId]').find('option[value=' + data.id + ']').remove();
                });
            }
        })
        // alert(data);
    });
    $('.softwareTechnician').select2({
        theme: 'bootstrap-5',
        dropdownParent: $('#ProgramemrModal .modal-content')
    });
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/Technician',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=softwareTechnicianId]').append('<option value=""> Select Technician</option>');
            $.each(data, function (index, value) {
                $('select[name=softwareTechnicianId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    $('#softwareRequestList').on('click', '.re-assign', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/ProgAssigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#ProgramemrModal').modal('show');
                $('#assignprog').find('input[name=id]').val(data.id);

                $('#assignprog').find('input[name=softwareUserRequestId]').val(data.softwareUserRequest.id);

            }
        })
        // alert(data);
    });

    $('#updateProg').click(function (e) {
        e.preventDefault();
        var id = $('#assignprog').find('input[name="id"]').val();
        var data = $('#assignprog').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/AssignedProgress/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //$('#editRequest').modal('hide');
                $('#ProgramemrModal').modal('hide');
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Successfully Re-Assigned!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    tables.ajax.reload();
                    $('#pleasewait').modal('hide');
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
}
function NewSystemRequest() {
    $("#softwareRequestList").DataTable({
        "ajax": {
            "url": "/api/SoftwareRequest/newSystem/Get",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                "data": "softwareUserRequest.ticket",
                render: function (data, type, row) {
                    if (data == null) {
                        return '<span class="badge bg-danger">No Ticket</span>';
                    }
                    return `<span class="badge shadow bg-primary">${(data)}</span>`
                }

            },
            { "data": "softwareUserRequest.dateAdded" },
            { "data": "softwareUserRequest.fullName" },
           
            {
                "data": "softwareUserRequest.departmentName"
            },
            {
                "data": "softwareUserRequest.softwareName",
            },
            {
                "data": "softwareUserRequest.status",
                render: function (data) {
                    if (data == "Open") {
                        return '<span class="badge shadow bg-open">' + data + '</span>'
                    }
                    else if (data == "In Progress") {
                        return '<span class="badge shadow bg-info">' + data + '</span>'
                    }
                    else if (data == "Resolved") {
                        return '<span class="badge shadow bg-success">' + data + '</span>'
                    }
                    else if (data == "Accepts Request") {
                        return '<span class="badge shadow bg-info">In Progress</span>'
                    }
                    else if (data == "Manual") {
                        return '<span class="badge shadow bg-info">In Progress</span>'
                    }
                    else if (data == "Verified") {

                        return '<span class="badge shadow bg-primary">' + data + '</span>'
                    }
                    else if (data == "Approved") {

                        return '<span class="badge shadow bg-primary">' + data + '</span>'
                    }
                    else if (data == "Cancel") {

                        return '<span class="badge shadow bg-primary">' + data + '</span>'
                    }
                }
            },
            {
                "data": "progressStatus",
                render: function (data) {
                    if (data == null) {
                        return ''
                    }
                    else
                        return '<div class="progress shadow"><div class="shadow  progress-bar" role="progressbar" aria-valuenow="' + data + '" aria-valuemin="0" aria-valuemax="' + data + '" style="width: ' + data + '%;"><span>' + data + ' %</span></div></div>'

                }
            },
            {
                "data": null
            }
        ],
        columnDefs:
            [{
                targets: [-1], render: function (a, b, data, d) {
                    if (data.progressStatus == 99) {
                        return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-success  btn-sm report me-2" data-id="' + data.id + '"><i class="bi bi-check2"></i> Report </button>';
                    }
                    else if (data.progressStatus == 100) {
                        return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-primary  btn-sm transac2 me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                            '<button class="btn btn-outline-dark   btn-sm print me-2" data-id="' + data.id + '"><i class="bi bi-printer"></i>Print </button>';
                    }
                    else
                        return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                            '<button class="btn btn-outline-warning  btn-sm progstatus me-2" data-id="' + data.id + '"><i class="bi bi-check2"></i> Progress </button>';


                },
                orderable: false,
                width: "250px"
            }]
    });
    $('#softwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="id"]').val(data.id);
                $('#viewRequest').find('input[name="fullName"]').val(data.softwareUserRequest.fullName);
                $('#viewRequest').find('input[name="ticket"]').val(data.softwareUserRequest.ticket);
                $('#viewRequest').find('input[name="dateAdded"]').val(data.softwareUserRequest.dateAdded);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.softwareUserRequest.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.softwareUserRequest.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.softwareUserRequest.divisionName);
                $('#viewRequest').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#viewRequest').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest').find('input[name="FileName"]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#viewRequest').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                $('#progform').find('input[name="softwareName"]').val(data.softwareName);
                $('#progform').find('input[name="informationName"]').val(data.informationName);
                $('#progform').find('input[name="requestFor"]').val(data.requestFor);
                $('#progform').find('input[name="documentLabel"]').val(data.documentLabel);
                $('#progform').find('textarea[name="description"]').val(data.description);
                $('#progform').find('input[name="resulotion"]').val(data.resulotion);
                $('#progform').find('textarea[name="remarks"]').val(data.remarks);
                $('#progform').find('input[name="programmerReportId"]').val(data.id);
                $('#progform').find('input[name="dateAdded"]').val(data.dateAdded);
                $('#progform').find('input[name="programmerName"]').val(data.programmerName);
                $('#progform').find('input[name="dateAssigned"]').val(data.dateAssigned);
                $('#progform').find('input[name="dateEnded"]').val(data.dateEnded);


                var sId =  $('#viewRequest').find('input[name="softwareUserRequestId"]').attr('value');
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/uploads/" + sId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },

                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],

                });
                var techId = $('input[name="programmerReportId"]').attr('value');
                var uploadTable2 = $('#progUploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + techId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            data: "remarksUploads"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                        {
                            data: "programmerReport.progressRemarks"
                        },
                        {
                            data: null
                        }
                    ],
                    columnDefs:
                        [{
                            targets: [-1], render: function (a, b, data, d) {
                                if (data.progressStatus == 100) {
                                    return '<button type="button" class="btn btn-outline-danger btn-sm delete me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> delete </button>';
                                }
                                else
                                    return '';

                            },
                            orderable: false,
                            width: "200px"
                        }]
                });
                $('#upload2').find('input[name=programmerReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=softwareUserRequestId]').find('option[value=' + data.id + ']').remove();
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    //Software
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/software',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=softwareId]').append('<option value=""> Select Software</option>');
            $.each(data, function (index, value) {
                $('select[name=softwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    //Software
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/infoSystem',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=informationSystemId]').append('<option value=""> Select System</option>');
            $.each(data, function (index, value) {
                $('select[name=informationSystemId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },
    });


    $('#progressStatus').keyup(function () {
        if ($(this).val() > 99) {
            alert("No numbers above 99");
            $(this).val('99');
        }
    });

    $('#btnProgress').click(function (e) {
        e.preventDefault();
        var formData = new FormData(upload2);
        $.ajax({
            url: '/api/prog/saveFile2',
            type: 'POST',
            data: formData,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                //$('#addimageModal').modal('hide');

                ///*  show please wait modal*/
                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {
                //    toastr.success("File Successfully Added!");
                //    // hide please wait modal

                //}, 2000);
                //setTimeout(function () {
                //    location.reload();
                //    $('#upload2')[0].reset();
                //}, 3000);
            },
            cache: false,
            contentType: false,
            processData: false,
            error: function (data) {
                toastr.error("Error Updating File")
            }
        });

    });



    $('#progUploadList').on('click', '.delete', function () {
        var id = $(this).attr('data-id');
        bootbox.confirm({
            message: "Are you sure you want to delete this image?",
            centerVertical: true,

            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success btn-sm'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger btn-sm '
                }
            },
            callback: function (result) {
                if (result) {
                    $.ajax({

                        type: 'DELETE',
                        url: '/api/v2/sf/deleteImage/' + id,
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        },
                        success: function (data) {
                            $('#pleasewait').modal('show');
                            //show toastr after 3
                            setTimeout(function () {
                                toastr.success("Image Successfully Remove!");
                                // hide please wait modal
                            }, 2000);
                            setTimeout(function () {
                                window.location.reload();
                            }, 3000);
                        }
                    });
                }
            }
        });
    });

    $('#softwareRequestList').on('click', '.progstatus', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#addimageModal').modal('show');
                $('#upload2').find('input[name="programmerReportId"]').val(data.id);
                $('#upload2').find('input[name="progressStatus"]').val(data.progressStatus);
                $('#upload2').find('textarea[name="progressRemarks"]').val(data.progressRemarks);
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });

    $('#btnProgress').click(function (e) {
        e.preventDefault();
        var id = $('#upload2').find('input[name="programmerReportId"]').val();
        var data = $('#upload2').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/newSystem/Reported/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#addimageModal').modal('hide');

                /*  show please wait modal*/
                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("File Successfully Added!");
                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    location.reload();
                    $('#upload2')[0].reset();
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error")
            }
        })
    });

    $('#softwareRequestList').on('click', '.report', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#ReportModal').modal('show')
                $('#report2').find('select[name="softwareId"]').val(data.softwareUserRequest.softwareId);
                $('#report2').find('select[name="informationSystemId"]').val(data.softwareUserRequest.informationSystemId);
                $('#report2').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#report2').find('input[name="documentLabel"]').val(data.softwareUserRequest.documentLabel);
                $('#report2').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#report2').find('input[name="programmerReportId"]').val(data.id);
                $('#report2').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);


            }
        })
    });
    //Software
    $.ajax({
        type: 'GET',
        url: '/api/softwareRequest/software',
        headers: {
            'Authorization': 'Bearer ' + localStorage.getItem('access_token')
        },
        success: function (data) {
            $('select[name=softwareId]').append('<option value=""> Select Software</option>');
            $.each(data, function (index, value) {
                $('select[name=softwareId]').append('<option value="' + value.id + '">' + value.name + '</option>');
            }
            );
        },

    });
    $('#btnSubmit').click(function (e) {
        e.preventDefault();
        var id = $('#report2').find('input[name="programmerReportId"]').val();
        var data = $('#report2').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/v3/assigned/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#ReportModal').modal('hide')

                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("File Successfully Deleted!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                    $('#pleasewait').modal('hide');
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#btnSubmit').click(function (e) {
        e.preventDefault();
        var id = $('#report2').find('input[name="softwareUserRequestId"]').val();
        var data = $('#report2').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/Reported/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#softwareRequestList').on('click', '.print', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#PrintModal').modal('show');
                $('#print').find('input[name="id"]').val(data.id);
                $('#print').find('input[name="fullName"]').val(data.softwareUserRequest.fullName);
                $('#print').find('input[name="ticket"]').val(data.softwareUserRequest.ticket);
                $('#print').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#print').find('input[name="informationName"]').val(data.softwareUserRequest.informationName);
                $('#print').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#print').find('input[name="description"]').val(data.softwareUserRequest.description);
                $('#print').find('input[name="departmentName"]').val(data.softwareUserRequest.departmentName);
                $('#print').find('input[name="divisionName"]').val(data.softwareUserRequest.divisionName);
                $('#print').find('input[name="programmerName"]').val(data.programmerName);
                $('#print').find('input[name="remarks"]').val(data.remarks);
                $('#print').find('input[name="dateAssigned"]').val(data.dateAssigned);
                $('#print').find('input[name="dateEnded"]').val(data.dateEnded);
                $('#print').find('input[name="adminName"]').val(data.adminName);
                $('#print').find('input[name="superAdminName"]').val(data.superAdminName);


            }
        })
    });

    $('#softwareRequestList').on('click', '.transac2', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#transactionModal').modal('show');

                $('#newSystem2').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                var refId = $('#newSystem2').find('#softwareUserRequestId').attr('value');
                var table = $('#progReport2').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertask/sf/getbyId/" + refId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "softwareTaskId",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return '<span class="badge shadow bg-secondary">Requested</span>'
                                }
                                else if (data == 2) {
                                    return '<span class="badge shadow bg-info">Division Apperoved</span>'
                                }
                                else if (data == 3) {
                                    return '<span class="badge shadow bg-warning">Assigned</span>'
                                }
                                else if (data == 4) {
                                    return '<span class="badge shadow bg-success">Resolved</span>'
                                }
                                else if (data == 5) {
                                    return '<span class="badge shadow bg-primary">Verified</span>'
                                }
                                else if (data == 6) {
                                    return '<span class="badge shadow bg-danger">Approved</span>'
                                }
                            }
                        },
                        {
                            data: null,

                        },
                    ],
                    columnDefs:
                        [{
                            targets: [-1], render: function (a, b, data, d) {
                                if (data.softwareTask.id == 1) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 2) {
                                    return '<button class="btn btn-outline-primary btn-sm divApproved me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                                else if (data.softwareTask.id == 3) {
                                    return '';

                                }
                                else if (data.softwareTask.id == 4) {
                                    return '<button class="btn btn-outline-primary btn-sm view2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                                else if (data.softwareTask.id == 5) {
                                    return '<button class="btn btn-outline-primary btn-sm view3 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                                else if (data.softwareTask.id == 6) {
                                    return '<button class="btn btn-outline-primary btn-sm view4 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                            },
                            orderable: false,
                            width: "240px"
                        }]

                });
            }
        })
    });

    $('#progReport2').on('click', '.divApproved', function (e) {
        e.preventDefault();
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/Task/sf/get/" + id,
            success: function (data) {
                $('#divApprover').modal('show');
                $('#approver').find('input[name="fullName"]').val(data.softwareAcceptsRequest.fullName);
                $('#approver').find('input[name="dateAdded"]').val(data.softwareAcceptsRequest.dateAdded);
                $('#approver').find('input[name="departmentName"]').val(data.softwareAcceptsRequest.departmentName);
                $('#approver').find('input[name="divisionName"]').val(data.softwareAcceptsRequest.divisionName);
                // refresh page on modal close
                $('#divApprover').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=programmerReportId]').find('option[value=' + data.id + ']').remove();
                });
            }
        });
    });
    $('#progReport2').on('click', '.view2', function (e) {
        e.preventDefault();
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/Task/sf/get/" + id,
            success: function (data) {
                $('#transactionReportModal').modal('show');
                $('#report3').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#report3').find('input[name="informationName"]').val(data.softwareUserRequest.informationName);
                $('#report3').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#report3').find('input[name="documentLabel"]').val(data.softwareUserRequest.documentLabel);
                $('#report3').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#report3').find('input[name="resulotion"]').val(data.programmerReport.resulotion);
                $('#report3').find('input[name="dateAdded"]').val(data.programmerReport.dateAdded);
                $('#report3').find('input[name="dateAssigned"]').val(data.programmerReport.dateAssigned);
                $('#report3').find('input[name="dateEnded"]').val(data.programmerReport.dateEnded);
                $('#report3').find('input[name="dateVerified"]').val(data.programmerReport.dateVerified);
                $('#report3').find('textarea[name="remarks"]').val(data.programmerReport.remarks);
                $('#report3').find('input[name="dateApproved"]').val(data.programmerReport.dateApproved);
                $('#report3').find('input[name="adminName"]').val(data.programmerReport.adminName);
                $('#report3').find('input[name="superAdminName"]').val(data.programmerReport.superAdminName);
                $('#report3').find('input[name="programmerName"]').val(data.programmerReport.programmerName);

                $('#report3').find('input[name="programmerReportId"').val(data.programmerReport.id);

                var progId = $('#report3').find('input[name="programmerReportId"]').attr('value');
                var uploadTable2 = $('#UploadList3').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + progId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            data: "remarksUploads"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],
                });


                // refresh page on modal close
                $('#transactionReportModal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=programmerReportId]').find('option[value=' + data.id + ']').remove();
                });
            }
        });
    });

    $('#progReport2').on('click', '.view3', function (e) {
        e.preventDefault();
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/Task/sf/get/" + id,
            success: function (data) {
                $('#transactionReportModal6').modal('show');
                $('#report6').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#report6').find('input[name="informationName"]').val(data.softwareUserRequest.informationName);
                $('#report6').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#report6').find('input[name="documentLabel"]').val(data.softwareUserRequest.documentLabel);
                $('#report6').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#report6').find('input[name="resulotion"]').val(data.programmerReport.resulotion);
                $('#report6').find('input[name="dateAdded"]').val(data.programmerReport.dateAdded);
                $('#report6').find('input[name="dateAssigned"]').val(data.programmerReport.dateAssigned);
                $('#report6').find('input[name="dateEnded"]').val(data.programmerReport.dateEnded);
                $('#report6').find('input[name="dateVerified"]').val(data.programmerReport.dateVerified);
                $('#report6').find('textarea[name="remarks"]').val(data.programmerReport.remarks);
                $('#report6').find('input[name="dateApprove"]').val(data.programmerReport.dateApprove);
                $('#report6').find('input[name="adminName"]').val(data.programmerReport.adminName);
                $('#report6').find('input[name="nameApproval"]').val(data.programmerReport.nameApproval);
                $('#report6').find('input[name="programmerName"]').val(data.programmerReport.programmerName);

                $('#report6').find('input[name="programmerReportId"').val(data.programmerReport.id);

                var progId = $('#report6').find('input[name="programmerReportId"]').attr('value');
                var uploadTable2 = $('#UploadList6').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + progId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            data: "remarksUploads"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],
                });


                // refresh page on modal close
                $('#transactionReportModal6').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=programmerReportId]').find('option[value=' + data.id + ']').remove();
                });
            }
        });
    });

    $('#progReport2').on('click', '.view4', function (e) {
        e.preventDefault();
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/Task/sf/get/" + id,
            success: function (data) {
                $('#transactionReportModal7').modal('show');
                $('#report7').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#report7').find('input[name="informationName"]').val(data.softwareUserRequest.informationName);
                $('#report7').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#report7').find('input[name="documentLabel"]').val(data.softwareUserRequest.documentLabel);
                $('#report7').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#report7').find('input[name="resulotion"]').val(data.programmerReport.resulotion);
                $('#report7').find('input[name="dateAdded"]').val(data.programmerReport.dateAdded);
                $('#report7').find('input[name="dateAssigned"]').val(data.programmerReport.dateAssigned);
                $('#report7').find('input[name="dateEnded"]').val(data.programmerReport.dateEnded);
                $('#report7').find('input[name="dateVerified"]').val(data.programmerReport.dateVerified);
                $('#report7').find('textarea[name="remarks"]').val(data.programmerReport.remarks);
                $('#report7').find('input[name="dateApprove"]').val(data.softwareApproved.dateApprove);
                $('#report7').find('input[name="adminName"]').val(data.programmerReport.adminName);
                $('#report7').find('input[name="nameApproval"]').val(data.softwareApproved.nameApproval);
                $('#report7').find('input[name="programmerName"]').val(data.programmerReport.programmerName);

                $('#report7').find('input[name="programmerReportId"').val(data.programmerReport.id);

                var progId = $('#report7').find('input[name="programmerReportId"]').attr('value');
                var uploadTable2 = $('#UploadList7').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + progId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            data: "remarksUploads"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],
                });


                // refresh page on modal close
                $('#transactionReportModal7').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=programmerReportId]').find('option[value=' + data.id + ']').remove();
                });
            }
        });
    });

}
function SoftwareRequest2() {
    var Newtables;
    Newtables = $("#softwareRequestList").DataTable({
        "ajax": {
            "url": "/api/SoftwareRequest/v2/Get",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",
        "order": [[1, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                "data": "softwareUserRequest.ticket",
                render: function (data, row) {
                    return '<span class="badge shadow bg-primary" >' + data + '</span>'
                }
            },
            { "data": "softwareUserRequest.dateAdded" },
            { "data": "softwareUserRequest.fullName" },
            {
                "data": "softwareUserRequest.softwareName",
            },
            {
                "data": "softwareUserRequestId",
                render: function (data, type, row) {
                    if (row.softwareUserRequest.status == "Open") {
                        return '<span class="badge shadow  bg-open" > Open</span>'
                    }
                    else
                        return '<span class="badge shadow  bg-secondary">Open</span>'
                }
            },
            {
                data: null,
            },

        ],
        "columnDefs": [{
            targets: [-1], render: function (a, b, data, d) {
                if (data.softwareUserRequest.status == "Open") {
                    return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                        '<button class="btn btn-outline-success  btn-sm assign me-2" data-id="' + data.id + '"><i class="bi bi-person-check"></i> Assign To me</button>';
                }
                else if (data.softwareUserRequest.status == "In Progress") {
                    return '<button class="btn btn-outline-primary  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.softwareUserRequest.status == "Resolved") {
                    return '<button class="btn btn-outline-primary  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.softwareUserRequest.status == "Verified") {
                    return '<button class="btn btn-outline-primary  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.softwareUserRequest.status == "Approved") {
                    return '<button class="btn btn-outline-primary  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.softwareUserRequest.status == "Cancel") {
                    return '<button class="btn btn-outline-primary  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
            },
            orderable: false,
            width: "220px"
        }]

    });
    setInterval (function () {
        NewSystemRequest.ajax.reload();
    }, 10000);

    $('#softwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Prog/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="ticket"]').val(data.softwareUserRequest.ticket);
                $('#viewRequest').find('input[name="dateAdded"]').val(data.softwareUserRequest.dateAdded);
                $('#viewRequest').find('input[name="fullName"]').val(data.softwareUserRequest.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.softwareUserRequest.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.softwareUserRequest.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.softwareUserRequest.divisionName);
                $('#viewRequest').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#viewRequest').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest').find('input[name="informationName"]').val(data.softwareUserRequest.informationName);
                $('#viewRequest').find('input[name="FileName"]').val(data.softwareUserRequest.documentLabel);
                $('#viewRequest').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#viewRequest').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);

                var valdata = $('#viewRequest').find('input[name="softwareUserRequestId"]').attr('value');
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/uploads/" + valdata,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],

                });

                $('#upload2').find('input[name=hardwareUserRequestId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=hardwareUserRequestId]').find('option[value=' + data.id + ']').remove();
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#softwareRequestList').on('click', '.assign', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Prog/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#assignToMe').modal('show');
                $('#assignTome').find('input[name=softwareUserRequestId]').val(data.softwareUserRequestId);
                $('#assignTome').find('input[name=softwareAcceptsRequestId]').val(data.id);
            }
        })
        // alert(data);
    });

    $('#Assigntome').click(function (e) {
        e.preventDefault();
        var id = $('#assignTome').find('input[name="softwareUserRequestId"]').val();
        var data = $('#assignTome').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/assignedRequest/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#assignToMe').modal('hide');

                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                   toastr.success("Request Successfully Assigned!");
                   // hide please wait modal
                }, 2000);
                setTimeout(function () {
                   tables.ajax.reload();
                   $('#pleasewait').modal('hide');
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });

    $('#Assigntome').click(function (e) {
        e.preventDefault();
        var id = $('#assignTome').find('input[name="softwareAcceptsRequestId"]').val();
        var data = $('#assignTome').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/Accepts/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                // $('#assignToMe').modal('hide');

                // $('#pleasewait').modal('show');
                // //show toastr after 3
                // setTimeout(function () {
                //     toastr.success("File Successfully assigned!");
                //     // hide please wait modal
                // }, 2000);
                // setTimeout(function () {
                //     window.location.href = "/SoftwareRequest/Index";
                //     $('#pleasewait').modal('hide');
                // }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });

    $('#Assigntome').click(function (e) {
        e.preventDefault();
        var data = $('#assignTome').serialize();
        $.ajax({
            url: '/api/assign/save',
            type: 'POST',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                //show please wait modal
                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {

                //    // hide please wait modal

                //}, 2000);
                //setTimeout(function () {
                //    location.reload();
                //    $('#upload2')[0].reset();
                //}, 3000);
            },
            //cache: false,
            //contentType: false,
            //processData: false,
            //error: function (data) {
            //    toastr.error("Error Updating File")
            //}
        });
    });
}
function SoftwareResolvedList() {
    var tables;
    tables = $("#softwareRequestList").DataTable({
        "ajax": {
            "url": "/api/SoftwareRequest/Resolved/v2/Get",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",

        "order": [[1, "desc"]],
        "autoWidth": false,
        "columns": [

            {
                "data": "softwareUserRequest.ticket",
                render: function (data, row) {
                    return '<span class="badge shadow bg-primary" >' + data + '</span>'
                }
            },
            { "data": "softwareUserRequest.dateAdded" },
            { "data": "softwareUserRequest.fullName" },
            {
                "data": "softwareUserRequest.isManual",
                render: function (data) {
                    if (data == true) {
                        return '<span class="badge shadow  bg-manual" >Yes</span>'
                    }
                    else
                        return '<span class="badge shadow  bg-warning" >No</span>'
                }
            },
            {
                "data": "softwareUserRequest.softwareName",
            },

            {
                "data": "softwareUserRequest.status",
                render: function (data, type, row) {
                    if (row.softwareUserRequest.status == "Resolved") {
                        return '<span class="badge shadow  bg-success" >' + data + '</span>'
                    }
                    else
                        return '<span class="badge shadow  bg-secondary">Open</span>'
                }

            },
            {
                "data": "programmerName",
            },
            {
                data: null,
            },

        ],
        "columnDefs": [{
            targets: [-1], render: function (a, b, data, d) {
                if (data.softwareUserRequest.status == "Open") {
                    return '<button class="btn btn-outline-info shadow btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                        '<button class="btn btn-outline-primary shadow btn-sm assign me-2" data-id="' + data.id + '"><i class="bi bi-people-fill"></i>Technician</button>';
                }
                else if (data.softwareUserRequest.status == "In Progress") {
                    return '<button class="btn btn-outline-info shadow btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                        '<button class="btn btn-outline-primary btn-sm shadow transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                        '<button class="btn ms-1  mt-2 btn-outline-success shadow btn-sm re-assign me-2" data-id="' + data.id + '"><i class="bi bi-person-fill"></i> Re-assign Technician </button>';
                }
                else if (data.softwareUserRequest.status == "Resolved") {
                    return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                        '<button class="btn  btn-outline-primary btn-sm back me-2" data-id="' + data.id + '"><i class="bi bi-person-fill"></i> Return To Technician </button>' +
                        '<button class="btn btn-outline-success btn-sm verify mt-2 me-2" data-id="' + data.id + '"><i class="bi bi-check2-square"></i> Verify </button>';

                }
                else if (data.softwareUserRequest.status == "Verified") {
                    return '<button class="btn btn-outline-primary shadow btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.softwareUserRequest.status == "Approved") {
                    return '<button class="btn btn-outline-primary shadow btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.softwareUserRequest.status == "Cancel") {
                    return '<button class="btn btn-outline-primary shadow btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
            },
            orderable: false,
            width: "270px"
        }]
    });
    $('#softwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        $('#viewmodal').modal('show');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="id"]').val(data.id);
                $('#viewRequest').find('input[name="fullName"]').val(data.softwareUserRequest.fullName);
                $('#viewRequest').find('input[name="ticket"]').val(data.softwareUserRequest.ticket);
                $('#viewRequest').find('input[name="dateAdded"]').val(data.softwareUserRequest.dateAdded);

                $('#viewRequest').find('input[name="mobileNumber"]').val(data.softwareUserRequest.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.softwareUserRequest.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.softwareUserRequest.divisionName);
                $('#viewRequest').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#viewRequest').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest').find('input[name="FileName"]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#viewRequest').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                $('#progform').find('input[name="softwareName"]').val(data.softwareName);
                $('#progform').find('input[name="informationName"]').val(data.informationName);
                $('#progform').find('input[name="requestFor"]').val(data.requestFor);
                $('#progform').find('input[name="documentLabel"]').val(data.documentLabel);
                $('#progform').find('textarea[name="description"]').val(data.description);
                $('#progform').find('input[name="resulotion"]').val(data.resulotion);
                $('#progform').find('textarea[name="remarks"]').val(data.remarks);
                $('#progform').find('input[name="programmerReportId"]').val(data.id);
                $('#progform').find('input[name="dateAdded"]').val(data.dateAdded);
                $('#progform').find('input[name="programmerName"]').val(data.programmerName);
                $('#progform').find('input[name="dateAssigned"]').val(data.dateAssigned);
                $('#progform').find('input[name="dateEnded"]').val(data.dateEnded);

                var sId =     $('#viewRequest').find('input[name="softwareUserRequestId"]').attr('value');
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/uploads/" + sId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],

                });
                var techId =   $('#progform').find('input[name="programmerReportId"]').attr('value');
                var uploadTable2 = $('#progUploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + techId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        }
                    ],
                });
                $('#upload2').find('input[name=programmerReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=softwareUserRequestId]').find('option[value=' + data.id + ']').remove();
                });
            },
        })
    });


    $('#softwareRequestList').on('click', '.back', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/ProgAssigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#BackModal').modal('show');
                $('#resolved').find('input[name="programmerReportId"]').val(data.id);
                $('#resolved').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);

            }
        })
    });
    $('#softwareRequestList').on('click', '.verify', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/ProgAssigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#verifiedModal').modal('show');
                $('#verify').find('input[name="programmerReportId"]').val(data.id);
                $('#verify').find('input[name="softwareAcceptsRequestId"]').val(data.softwareAcceptsRequest.id);
                $('#verify').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
            }
        })
        // alert(data);
    });

    $('#return').click(function (e) {
        e.preventDefault();
        var id = $('#resolved').find('input[name="softwareUserRequestId"]').val();
        var data = $('#resolved').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/AssignedAccepted/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#BackModal').modal('hide');

                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("Successfully Return Request!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    window.location.reload();
                    $('#pleasewait').modal('hide');
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });

    $('#verified').click(function (e) {
        e.preventDefault();
        var id = $('#verify').find('input[name="softwareUserRequestId"]').val();
        var data = $('#verify').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/Verified/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //$('#verifiedModal').modal('hide');

                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {

                //    // hide please wait modal
                //}, 2000);
                //setTimeout(function () {
                //    tables.ajax.reload();
                //    $('#pleasewait').modal('hide');
                //}, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#verified').click(function (e) {
        e.preventDefault();
        var id = $('#verify').find('input[name="programmerReportId"]').val();
        var data = $('#verify').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/v5/Verifieds/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //$('#verifiedModal').modal('hide');

                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {
                //    toastr.success("File Successfully Verify!");
                //    // hide please wait modal
                //}, 2000);
                //setTimeout(function () {
                //    tables.ajax.reload();
                //    $('#pleasewait').modal('hide');
                //}, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#verified').click(function (e) {
        e.preventDefault();
        var data = $('#verify').serialize();
        $.ajax({
            url: '/api/verified/v2/save',
            type: 'POST',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                //show please wait modal
                $('#pleasewait').modal('show');
                $('#verifiedModal').modal('hide');
                //show toastr after 3
                setTimeout(function () {

                    // hide please wait modal

                }, 2000);
                setTimeout(function () {
                    location.reload();

                }, 3000);
            },
            error: function (data) {
                toastr.error("Error Updating File")
            }
        });
    });
    
    tables = $("#softwareRequestList2").DataTable({
        "ajax": {
            "url": "/api/SoftwareRequest/Resolved/v2/Get",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",

        "order": [[1, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                "data": "softwareUserRequest.ticket",
                render: function (data, row) {
                    return '<span class="badge shadow bg-primary" >' + data + '</span>'
                }
            },
            { "data": "softwareUserRequest.dateAdded" },
            { "data": "softwareUserRequest.fullName" },
            {
                "data": "softwareUserRequest.softwareName",
            },

            {
                "data": "softwareUserRequest.status",
                render: function (data, type, row) {
                    if (row.softwareUserRequest.status == "Resolved") {
                        return '<span class="badge shadow  bg-success" >' + data + '</span>'
                    }
                    else
                        return '<span class="badge shadow  bg-secondary">Open</span>'
                }

            },
            {
                "data": "programmerName",
            },
            {
                data: null,
            },

        ],
        "columnDefs": [{
            targets: [-1], render: function (a, b, data, d) {
                if (data.softwareUserRequest.status == "Open") {
                    return '<button class="btn btn-outline-info shadow btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                        '<button class="btn btn-outline-primary shadow btn-sm assign me-2" data-id="' + data.id + '"><i class="bi bi-people-fill"></i>Technician</button>';
                }
                else if (data.softwareUserRequest.status == "Resolved") {
                    return '<button class="btn btn-outline-info btn-sm info2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.softwareUserRequest.status == "Verified") {
                    return '<button class="btn btn-outline-primary shadow btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.softwareUserRequest.status == "Approved") {
                    return '<button class="btn btn-outline-primary shadow btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.softwareUserRequest.status == "Cancel") {
                    return '<button class="btn btn-outline-primary shadow btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
            },
            orderable: false,
            width: "100px"
        }]
    });

    $('#softwareRequestList2').on('click', '.info2', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Assigned/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal2').modal('show');
                $('#viewRequest2').find('input[name="id"]').val(data.id);
                $('#viewRequest2').find('input[name="fullName"]').val(data.softwareUserRequest.fullName);
                $('#viewRequest2').find('input[name="mobileNumber"]').val(data.softwareUserRequest.mobileNumber);
                $('#viewRequest2').find('input[name="departmentName"]').val(data.softwareUserRequest.departmentName);
                $('#viewRequest2').find('input[name="divisionName"]').val(data.softwareUserRequest.divisionName);
                $('#viewRequest2').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#viewRequest2').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest2').find('input[name="FileName"]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest2').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#viewRequest2').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                $('#progform2').find('input[name="softwareName"]').val(data.softwareName);
                $('#progform2').find('input[name="informationName"]').val(data.informationName);
                $('#progform2').find('input[name="requestFor"]').val(data.requestFor);
                $('#progform2').find('input[name="documentLabel"]').val(data.documentLabel);
                $('#progform2').find('textarea[name="description"]').val(data.description);
                $('#progform2').find('input[name="resulotion"]').val(data.resulotion);
                $('#progform2').find('textarea[name="remarks"]').val(data.remarks);
                $('#progform2').find('input[name="programmerReportId"]').val(data.id);
                $('#progform2').find('input[name="dateAdded"]').val(data.dateAdded);
                $('#progform2').find('input[name="programmerName"]').val(data.programmerName);
                $('#progform2').find('input[name="dateAssigned"]').val(data.dateAssigned);
                $('#progform2').find('input[name="dateEnded"]').val(data.dateEnded);

                var sId = $('input[name="softwareUserRequestId"]').val();
                var uploadTable = $('#UploadList2').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/uploads/" + sId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/ServiceRequest/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],

                });
                var techId = $('input[name="programmerReportId"]').attr('value');
                var uploadTable2 = $('#progUploadList2').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + techId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/ServiceRequest/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },

                    ],
                });
                $('#upload2').find('input[name=programmerReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal2').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=softwareUserRequestId]').find('option[value=' + data.id + ']').remove();
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
}
function SoftwareVerifiedLIst() {
    var tables;
    tables = $("#softwareRequestList").DataTable({
        "ajax": {
            "url": "/api/SoftwareRequest/Verified/v2/Get",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",

        "order": [[0, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                "data": "softwareUserRequest.ticket",
                render: function (data, row) {
                    return '<span class="badge shadow bg-primary" >' + data + '</span>'
                }
            },
            { "data": "softwareUserRequest.dateAdded" },
            { "data": "softwareUserRequest.fullName" },
            {
                "data": "softwareUserRequest.softwareName",
            },

            {
                "data": "softwareUserRequest.status",
                render: function (data, type, row) {
                    if (row.softwareUserRequest.status == "Verified") {
                        return '<span class="badge shadow  bg-primary" >' + data + '</span>'
                    }
                    else
                        return '<span class="badge shadow  bg-secondary">Open</span>'
                }

            },
            {
                "data": "programmerReport.programmerName",
            },
            {
                data: null,
            },

        ],
        "columnDefs": [{
            targets: [-1], render: function (a, b, data, d) {
                if (data.softwareUserRequest.status == "Open") {
                    return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                        '<button class="btn btn-outline-primary btn-sm assign me-2" data-id="' + data.id + '"><i class="bi bi-people-fill"></i>Technician</button>';
                }
                else if (data.softwareUserRequest.status == "In Progress") {
                    return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                        '<button class="btn btn-outline-primary btn-sm transaction me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                        '<button class="btn ms-1  mt-2 btn-outline-success btn-sm re-assign me-2" data-id="' + data.id + '"><i class="bi bi-person-fill"></i> Re-assign Technician </button>';
                }
                else if (data.softwareUserRequest.status == "Resolved") {
                    return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                        '<button class="btn btn-outline-primary btn-sm transac2 me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                        '<button class="btn mt-2 btn-outline-success btn-sm back me-2" data-id="' + data.id + '"><i class="bi bi-person-fill"></i> Return To Technician </button>' +
                        '<button class="btn btn-outline-success btn-sm verify mt-2 me-2" data-id="' + data.id + '"><i class="bi bi-check2-square"></i> Verify </button>';

                }
                else if (data.softwareUserRequest.status == "Verified") {
                    return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                        '<button class="btn btn-outline-primary btn-sm  transac2 me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>';
                }
                else if (data.softwareUserRequest.status == "Approved") {
                    return '<button class="btn btn-outline-primary  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.softwareUserRequest.status == "Cancel") {
                    return '<button class="btn btn-outline-primary btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
            },
            orderable: false,
            width: "200px"
        }]
    });

    $('#softwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Verified/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="id"]').val(data.id);
                $('#viewRequest').find('input[name="fullName"]').val(data.softwareUserRequest.fullName);
                $('#viewRequest').find('input[name="ticket"]').val(data.softwareUserRequest.ticket);
                $('#viewRequest').find('input[name="dateAdded"]').val(data.softwareUserRequest.dateAdded);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.softwareUserRequest.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.softwareUserRequest.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.softwareUserRequest.divisionName);
                $('#viewRequest').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#viewRequest').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest').find('input[name="FileName"]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#viewRequest').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                var format2 = moment($("#progform").find('input[name="dateAdded"]').val(data.programmerReport.dateAdded)
                    .val()).format('LLL');
                $("#dateStarted").text(format2);
                console.log(format2);

                var format3 = moment($("#progform").find('input[name="dateEnded"]').val(data.programmerReport.dateEnded)
                    .val()).format('LLL');
                $("#dateFinished").text(format3);
                console.log(format3);
                $('#progform').find('input[name="softwareName"]').val(data.programmerReport.softwareName);
                $('#progform').find('input[name="informationName"]').val(data.programmerReport.informationName);
                $('#progform').find('input[name="requestFor"]').val(data.programmerReport.requestFor);
                $('#progform').find('input[name="documentLabel"]').val(data.programmerReport.documentLabel);
                $('#progform').find('textarea[name="description"]').val(data.programmerReport.description);
                $('#progform').find('input[name="resulotion"]').val(data.programmerReport.resulotion);
                $('#progform').find('textarea[name="remarks"]').val(data.programmerReport.remarks);
                $('#progform').find('input[name="programmerReportId"]').val(data.programmerReport.id);
                $('#progform').find('input[name="programmerName"]').val(data.programmerReport.programmerName);
                $('#progform').find('input[name="dateAssigned"]').val(data.programmerReport.dateAssigned);
                $('#progform').find('input[name="dateVerified"]').val(data.dateVerified);
                $('#progform').find('input[name="nameVerified"]').val(data.nameVerified);

                var sId = $('input[name="softwareUserRequestId"]').val();
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/uploads/" + sId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],

                });
                var techId = $('input[name="programmerReportId"]').attr('value');
                var uploadTable2 = $('#progUploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + techId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],
                });
                $('#upload2').find('input[name=programmerReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=softwareUserRequestId]').find('option[value=' + data.id + ']').remove();
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#softwareRequestList').on('click', '.transac2', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Verified/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#transactionModal').modal('show');

                $('#newSystem2').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                var refId = $('#newSystem2').find('#softwareUserRequestId').attr('value');
                var table = $('#progReport2').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertask/sf/getbyId/" + refId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "softwareTaskId",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return '<span class="badge shadow bg-secondary">Requested</span>'
                                }
                                else if (data == 2) {
                                    return '<span class="badge shadow bg-info">Division Apperoved</span>'
                                }
                                else if (data == 3) {
                                    return '<span class="badge shadow bg-success">Assigned</span>'
                                }
                                else if (data == 4) {
                                    return '<span class="badge shadow bg-primary">Resolved</span>'
                                }
                                else if (data == 5) {
                                    return '<span class="badge shadow bg-danger">Verified</span>'
                                }
                                else if (data == 6) {
                                    return '<span class="badge shadow bg-danger">Approved</span>'
                                }
                            }
                        },
                        {
                            data: null,

                        },
                    ],
                    columnDefs:
                        [{
                            targets: [-1], render: function (a, b, data, d) {
                                if (data.softwareTask.id == 1) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 2) {
                                    return '<button class="btn btn-outline-primary btn-sm divApproved me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                                else if (data.softwareTask.id == 3) {
                                    return '';

                                }
                                else if (data.softwareTask.id == 4) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 5) {
                                    return '<button class="btn btn-outline-primary btn-sm view2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                                else if (data.softwareTask.id == 6) {
                                    return '';
                                }
                            },
                            orderable: false,
                            width: "240px"
                        }]

                });
            }
        })
    });

    $('#progReport2').on('click', '.divApproved', function (e) {
        e.preventDefault();
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/Task/sf/get/" + id,
            success: function (data) {
                $('#divApprover').modal('show');
                $('#approver').find('input[name="fullName"]').val(data.softwareAcceptsRequest.fullName);
                $('#approver').find('input[name="dateAdded"]').val(data.softwareAcceptsRequest.dateAdded);
                $('#approver').find('input[name="departmentName"]').val(data.softwareAcceptsRequest.departmentName);
                $('#approver').find('input[name="divisionName"]').val(data.softwareAcceptsRequest.divisionName);
                // refresh page on modal close
                $('#divApprover').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=programmerReportId]').find('option[value=' + data.id + ']').remove();
                });
            }
        });
    });

    $('#progReport2').on('click', '.view2', function (e) {
        e.preventDefault();
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/Task/sf/get/" + id,
            success: function (data) {
                $('#transactionReportModal').modal('show');
                $('#report3').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#report3').find('input[name="informationName"]').val(data.softwareUserRequest.informationName);
                $('#report3').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#report3').find('input[name="documentLabel"]').val(data.softwareUserRequest.documentLabel);
                $('#report3').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#report3').find('input[name="resulotion"]').val(data.programmerReport.resulotion);
                $('#report3').find('input[name="dateAdded"]').val(data.programmerReport.dateAdded);
                $('#report3').find('input[name="dateAssigned"]').val(data.programmerReport.dateAssigned);
                $('#report3').find('input[name="dateEnded"]').val(data.programmerReport.dateEnded);
                $('#report3').find('input[name="dateVerified"]').val(data.programmerReport.dateVerified);
                $('#report3').find('textarea[name="remarks"]').val(data.programmerReport.remarks);
                $('#report3').find('input[name="dateApproved"]').val(data.programmerReport.dateApproved);
                $('#report3').find('input[name="adminName"]').val(data.programmerReport.adminName);
                $('#report3').find('input[name="superAdminName"]').val(data.programmerReport.superAdminName);
                $('#report3').find('input[name="programmerName"]').val(data.programmerReport.softwareTechnicianName);

                $('#report3').find('input[name="programmerReportId"').val(data.programmerReport.id);
                var progId = $('#report3').find('input[name="programmerReportId"]').attr('value');
                var uploadTable2 = $('#UploadList3').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + progId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],
                });
                $('#transactionReportModal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=programmerReportId]').find('option[value=' + data.id + ']').remove();
                });
            }
        });
    });
}
function SoftwareVerifiedList2() {
    var tables;
    tables = $("#softwareRequestList").DataTable({
        "ajax": {
            "url": "/api/SoftwareRequest/Verified/v2/Get",
            "headers": {
                "Authorization": "Bearer " + localStorage.getItem('access_token')
            },
            "type": "GET",
            "dataType": "json",
        },
        "processing": "true",
        "serverSide": "true",
        "ordering": "true",
        "paging": "true",

        "order": [[1, "desc"]],
        "language": {
            "processing": "Loading... Please wait"

        },
        "autoWidth": false,
        "columns": [

            {
                "data": "softwareUserRequest.ticket",
                render: function (data, row) {
                    return '<span class="badge shadow bg-primary" >' + data + '</span>'
                }
            },
            { "data": "softwareUserRequest.dateAdded" },
            { "data": "softwareUserRequest.fullName" },
            {
                "data": "softwareUserRequest.isManual",
                render: function (data) {
                    if (data == true) {
                        return '<span class="badge shadow  bg-manual ms-4" >Yes</span>'
                    }
                    else
                        return '<span class="badge shadow  bg-warning ms-4" >No</span>'
                }
            },
            {
                "data": "softwareUserRequest.softwareName",
            },

            {
                "data": "softwareUserRequest.status",
                render: function (data, type, row) {
                    if (row.softwareUserRequest.status == "Verified") {
                        return '<span class="badge shadow  bg-primary" >' + data + '</span>'
                    }
                    else
                        return '<span class="badge shadow  bg-secondary">Open</span>'
                }

            },
            {
                "data": "programmerReport.programmerName",
            },
            {
                data: null,
            },

        ],
        "columnDefs": [{
            targets: [-1], render: function (a, b, data, d) {
                if (data.softwareUserRequest.status == "Open") {
                    return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                        '<button class="btn btn-outline-primary  btn-sm assign me-2" data-id="' + data.id + '"><i class="bi bi-people-fill"></i>Technician</button>';
                }
                else if (data.softwareUserRequest.status == "In Progress") {
                    return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                        '<button class="btn btn-outline-primary btn-sm  transac2 me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                        '<button class="btn ms-1  mt-2 btn-outline-success  btn-sm re-assign me-2" data-id="' + data.id + '"><i class="bi bi-person-fill"></i> Re-assign Technician </button>';
                }
                else if (data.softwareUserRequest.status == "Resolved") {
                    return '<button class="btn btn-outline-info btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                        '<button class="btn btn-outline-primary btn-sm transac2 me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                        //'<button class="btn mt-2 btn-outline-secondary btn-sm back me-2" data-id="' + data.id + '"><i class="bi bi-person-fill"></i> Return To Technician </button>' +
                        '<button class="btn btn-outline-success btn-sm verify mt-2 me-2" data-id="' + data.id + '"><i class="bi bi-check2-square"></i> Verify </button>';

                }
                else if (data.softwareUserRequest.status == "Verified") {
                    return '<button class="btn btn-outline-info  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>' +
                        '<button class="btn btn-outline-primary  btn-sm transac2 me-2" data-id="' + data.id + '"><i class="bi bi-list-nested"></i> Transaction </button>' +
                        //'<button class="btn  btn-outline-secondary  btn-sm return mt-2 me-2" data-id="' + data.id + '"><i class="bi bi-person-fill"></i> Return To Admin </button>' +
                        '<button class="btn btn-outline-success  btn-sm approve me-2" data-id="' + data.id + '"><i class="bi bi-check2-square"></i> Approve </button>';
                }
                else if (data.softwareUserRequest.status == "Approved") {
                    return '<button class="btn btn-outline-primary  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
                else if (data.softwareUserRequest.status == "Cancel") {
                    return '<button class="btn btn-outline-primary  btn-sm info me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                }
            },
            orderable: false,
            width: "290px"
        }]
    });
    $('#softwareRequestList').on('click', '.approve', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Verified/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#ApprovedRequest').modal('show');

                $('#approve').find('input[name="fullName"]').val(data.softwareUserRequest.fullName);
                $('#approve').find('input[name="softwareName"]').val(data.programmerReport.softwareName);
                $('#approve').find('input[name="informationName"]').val(data.programmerReport.informationName);
                $('#approve').find('input[name="requestFor"]').val(data.programmerReport.requestFor);
                $('#approve').find('input[name="documentLabel"]').val(data.programmerReport.documentLabel);
                $('#approve').find('textarea[name="description"]').val(data.programmerReport.description);
                var format2 = moment($("#approve").find('input[name="dateAdded"]').val(data.programmerReport.dateAdded)
                    .val()).format('MMMM DD YYYY h:mm:ss a');
                $("#dateStarted").text(format2);
                console.log(format2);
                var format3 = moment($("#approve").find('input[name="dateEnded"]').val(data.programmerReport.dateEnded)
                    .val()).format('MMMM DD YYYY h:mm:ss a');
                $("#dateFinished").text(format3);
                console.log(format3);
                $('#approve').find('input[name="programmerName"]').val(data.programmerReport.programmerName);
                $('#approve').find('input[name="dateAssigned"]').val(data.programmerReport.dateAssigned);
                $('#approve').find('input[name="resulotion"]').val(data.programmerReport.resulotion);
                $('#approve').find('textarea[name="remarks"]').val(data.programmerReport.remarks);
                $('#approve').find('input[name="dateVerified"]').val(data.dateVerified);
                $('#approve').find('input[name="nameVerified"]').val(data.nameVerified);
                $('#approve').find('input[name="programmerReportId"]').val(data.programmerReport.id);
                $('#approve').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                $('#approve').find('input[name="softwareVerificationId"]').val(data.id);

            }
        })
    });
    $('#approvedBtn').click(function (e) {
        e.preventDefault();
        var data = $('#approve').serialize();
        $.ajax({
            url: '/api/approved/v2/save',
            type: 'POST',
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {

                //show please wait modal
                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {

                //    // hide please wait modal

                //}, 2000);
                //setTimeout(function () {
                //    location.reload();
                //    $('#upload2')[0].reset();
                //}, 3000);

            },
            error: function (data) {
                toastr.error("Error Updating File")
            }
        });
    });
    $('#approvedBtn').click(function (e) {
        e.preventDefault();
        var id = $('#approve').find('input[name="softwareUserRequestId"]').val();
        var data = $('#approve').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/Approved/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                //$('#assignToMe').modal('hide');

                //$('#pleasewait').modal('show');
                ////show toastr after 3
                //setTimeout(function () {
                //    toastr.success("File Successfully assigned!");
                //    // hide please wait modal
                //}, 2000);
                //setTimeout(function () {
                //    window.location.href = "/SoftwareRequest/Index";
                //    $('#pleasewait').modal('hide');
                //}, 3000);

            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#approvedBtn').click(function (e) {
        e.preventDefault();
        var id = $('#approve').find('input[name="programmerReportId"]').val();
        var data = $('#approve').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/v5/Approved/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#ApprovedRequest').modal('hide');

                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {
                    toastr.success("File Successfully assigned!");
                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    tables.ajax.reload()
                    $('#pleasewait').modal('hide');
                }, 3000);
                $('#approve').find('textarea[name="remarksApproval"]').val("");
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });
    $('#softwareRequestList').on('click', '.info', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Verified/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data, value) {
                $('#viewmodal').modal('show');
                $('#viewRequest').find('input[name="id"]').val(data.id);
                $('#viewRequest').find('input[name="ticket"]').val(data.softwareUserRequest.ticket);
                $('#viewRequest').find('input[name="dateAdded"]').val(data.softwareUserRequest.dateAdded);
                $('#viewRequest').find('input[name="fullName"]').val(data.softwareUserRequest.fullName);
                $('#viewRequest').find('input[name="mobileNumber"]').val(data.softwareUserRequest.mobileNumber);
                $('#viewRequest').find('input[name="departmentName"]').val(data.softwareUserRequest.departmentName);
                $('#viewRequest').find('input[name="divisionName"]').val(data.softwareUserRequest.divisionName);
                $('#viewRequest').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#viewRequest').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest').find('input[name="FileName"]').val(data.softwareUserRequest.requestFor);
                $('#viewRequest').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                var format2 = moment($("#progform").find('input[name="dateAdded2"]').val(data.programmerReport.dateAdded)
                    .val()).format('LLL');
                $("#dateStarted2").text(format2);
                console.log(format2);

                var format3 = moment($("#progform").find('input[name="dateEnded2"]').val(data.programmerReport.dateEnded)
                    .val()).format('LLL');
                $("#dateFinished2").text(format3);
                console.log(format3);
                $('#progform').find('input[name="nameVerified"]').val(data.nameVerified);
                $('#progform').find('input[name="dateVerified"]').val(data.dateVerified);
                $('#progform').find('input[name="softwareName"]').val(data.programmerReport.softwareName);
                $('#progform').find('input[name="informationName"]').val(data.programmerReport.informationName);
                $('#progform').find('input[name="requestFor"]').val(data.programmerReport.requestFor);
                $('#progform').find('input[name="documentLabel"]').val(data.programmerReport.documentLabel);
                $('#progform').find('textarea[name="description"]').val(data.programmerReport.description);
                $('#progform').find('input[name="resulotion"]').val(data.programmerReport.resulotion);
                $('#progform').find('textarea[name="remarks"]').val(data.programmerReport.remarks);
                $('#progform').find('input[name="programmerReportId"]').val(data.programmerReport.id);
                $('#progform').find('input[name="programmerName"]').val(data.programmerReport.programmerName);
                $('#progform').find('input[name="dateAssigned"]').val(data.programmerReport.dateAssigned);
                $('#viewRequest').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                $('#viewRequest').find('input[name="programmerReportId"]').val(data.programmerReport.id);

                var sId = $('#viewRequest').find('input[name="softwareUserRequestId"]').attr('value');
                var uploadTable = $('#UploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/v2/uploads/" + sId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],

                });
                var techId = $('#viewRequest').find('input[name="programmerReportId"]').attr('value');
                var uploadTable2 = $('#progUploadList').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + techId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.fileName.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }

                            },
                            className: "text-center"

                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filepath = row.imagePath + row.fileName.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.fileName.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filepath + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],
                });
                $('#upload2').find('input[name=programmerReportId]').val(data.id);
                // refresh page on modal close
                $('#viewmodal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=softwareUserRequestId]').find('option[value=' + data.id + ']').remove();
                });
            },
            error: function (data) {
                toastr.error("Failed")
            }

        })
        // alert(data);
    });
    $('#softwareRequestList').on('click', '.transac2', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Verified/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#transactionModal').modal('show');

                $('#newSystem2').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
                var refId = $('#newSystem2').find('#softwareUserRequestId').attr('value');
                var table = $('#progReport2').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/usertask/sf/getbyId/" + refId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    info: false,
                    paging: false,
                    searching: false,
                    ordering: false,

                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "softwareTaskId",
                            render: function (data, type, row) {
                                if (data == 1) {
                                    return '<span class="badge shadow bg-secondary">Requested</span>'
                                }
                                else if (data == 2) {
                                    return '<span class="badge shadow bg-info">Division Approved</span>'
                                }
                                else if (data == 3) {
                                    return '<span class="badge shadow bg-warning">Assigned</span>'
                                }
                                else if (data == 4) {
                                    return '<span class="badge shadow bg-success">Resolved</span>'
                                }
                                else if (data == 5) {
                                    return '<span class="badge shadow bg-primary">Verified</span>'
                                }
                                else if (data == 6) {
                                    return '<span class="badge shadow bg-danger">Approved</span>'
                                }
                            }
                        },
                        {
                            data: null,

                        },
                    ],
                    columnDefs:
                        [{
                            targets: [-1], render: function (a, b, data, d) {
                                if (data.softwareTask.id == 1) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 2) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 3) {
                                    return '<button class="btn btn-outline-primary btn-sm divApproved me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';

                                }
                                else if (data.softwareTask.id == 4) {
                                    return '';
                                }
                                else if (data.softwareTask.id == 5) {
                                    return '<button class="btn btn-outline-primary btn-sm view2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                                else if (data.softwareTask.id == 6) {
                                    return '<button class="btn btn-outline-primary btn-sm view2 me-2" data-id="' + data.id + '"><i class="bi bi-list-ul"></i> Info </button>';
                                }
                            },
                            orderable: false,
                            width: "240px"
                        }]

                });
            }
        })
    });

    $('#progReport2').on('click', '.divApproved', function (e) {
        e.preventDefault();
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/Task/sf/get/" + id,
            success: function (data) {
                $('#divApprover').modal('show');
                $('#approver').find('input[name="fullName"]').val(data.softwareAcceptsRequest.fullName);
                $('#approver').find('input[name="dateAdded"]').val(data.softwareAcceptsRequest.dateAdded);
                $('#approver').find('input[name="departmentName"]').val(data.softwareAcceptsRequest.departmentName);
                $('#approver').find('input[name="divisionName"]').val(data.softwareAcceptsRequest.divisionName);
                // refresh page on modal close
                $('#divApprover').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=programmerReportId]').find('option[value=' + data.id + ']').remove();
                });
            }
        });
    });
    $('#progReport2').on('click', '.view2', function (e) {
        e.preventDefault();
        var id = $(this).attr('data-id');
        $.ajax({
            type: 'GET',
            url: "/api/Task/sf/get/" + id,
            success: function (data) {
                $('#transactionReportModal').modal('show');
                $('#report3').find('input[name="softwareName"]').val(data.softwareUserRequest.softwareName);
                $('#report3').find('input[name="informationName"]').val(data.softwareUserRequest.informationName);
                $('#report3').find('input[name="requestFor"]').val(data.softwareUserRequest.requestFor);
                $('#report3').find('input[name="documentLabel"]').val(data.softwareUserRequest.documentLabel);
                $('#report3').find('textarea[name="description"]').val(data.softwareUserRequest.description);
                $('#report3').find('input[name="resulotion"]').val(data.programmerReport.resulotion);
                $('#report3').find('input[name="dateAdded"]').val(data.programmerReport.dateAdded);
                $('#report3').find('input[name="dateAssigned"]').val(data.programmerReport.dateAssigned);
                $('#report3').find('input[name="dateEnded"]').val(data.programmerReport.dateEnded);
                $('#report3').find('input[name="dateVerified"]').val(data.programmerReport.dateVerified);
                $('#report3').find('textarea[name="remarks"]').val(data.programmerReport.remarks);
                $('#report3').find('input[name="adminName"]').val(data.programmerReport.adminName);
                $('#report3').find('input[name="superAdminName"]').val(data.programmerReport.superAdminName);
                $('#report3').find('input[name="programmerName"]').val(data.programmerReport.softwareTechnicianName);

                $('#report3').find('input[name="programmerReportId"').val(data.programmerReport.id);
                var progId = $('#report3').find('input[name="programmerReportId"]').attr('value');
                var uploadTable2 = $('#UploadList3').DataTable({
                    destroy: true,
                    ajax: {
                        url: "/api/progUps/get/" + progId,
                        dataSrc: '',
                        headers: {
                            "Authorization": "Bearer " + localStorage.getItem('access_token')
                        }
                    },
                    searching: false,
                    ordering: false,
                    columns: [
                        {
                            data: "dateAdded"
                        },
                        {
                            data: "documentBlob",
                            render: function (data, type, row, meta) {
                                var fileType = row.imagePath.split('.').pop();
                                if (fileType == 'pdf') {
                                    return '<i class="fas fa-file-pdf fa-2x" style="color: red; font-size: 50px;"></i>';
                                } else if (fileType == 'doc' || fileType == 'docx') {
                                    return '<i class="fas fa-file-word fa-2x" style="color: blue; font-size: 50px;"> </i>';
                                } else if (fileType == 'xls' || fileType == 'xlsx') {
                                    return '<i class="fas fa-file-excel fa-2x" style="color: green; font-size: 50px;"></i>';
                                } else if (fileType == 'ppt' || fileType == 'pptx') {
                                    return '<i class="fas fa-file-powerpoint fa-2x" style="color: orange; font-size: 50px;"></i>';
                                } else if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg') {
                                    return '<img src="data:image/png;base64,' + data + '" class="avatar" width="250" height="250"/>';
                                } else {
                                    return '<i class="bi bi-images" style="font-size: 250px;"></i> ';
                                }
                            },
                            className: "text-center"
                        },
                        {
                            // download link by using anchor link only
                            data: "documentBlob",
                            render: function (data, type, row) {
                                var f = new Blob([s2ab(atob(data))], { type: "" });
                                var filename = row.imagePath.replace(/^.*[\\\/]/, '');
                                var newF = URL.createObjectURL(f);
                                urls.push(newF);
                                var fileType = row.imagePath.split('.').pop();

                                //    check file if is image type
                                if (fileType == 'jpg' || fileType == 'png' || fileType == 'jpeg' || fileType == 'pdf' || fileType == 'gif') {
                                    // return '<a href="/api/v1/download/' + row.id + '" class="btn btn-sm btn-success">Download</a>'
                                    //     +
                                    return '<a href="' + newF + '" class="btn btn-sm btn-success" download="' + filename + '">Download</a>';
                                }
                                else {
                                    return ''

                                }
                            },
                            className: "text-center"
                        },
                    ],
                });
                $('#transactionReportModal').on('hidden.bs.modal', function () {
                    // remove id on select
                    $('select[name=programmerReportId]').find('option[value=' + data.id + ']').remove();
                });
            }
        });
    });

    $('#softwareRequestList').on('click', '.return', function () {
        var id = $(this).attr('data-id');
        var url = '/api/v2/Verified/getbyId/' + id;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (data) {
                $('#BackModal').modal('show');
                $('#return2').find('input[name="softwareUserRequestId"]').val(data.softwareUserRequest.id);
            }
        })
    });
    $('#return').click(function (e) {
        e.preventDefault();
        var id = $('#return2').find('input[name="softwareUserRequestId"]').val();
        var data = $('#return2').serialize();
        // alert(id);
        $.ajax({
            type: 'PUT',
            url: '/api/software/Return/Approver/' + id,
            data: data,
            headers: {
                'Authorization': 'Bearer ' + localStorage.getItem('access_token')
            },
            success: function (data) {
                $('#BackModal').modal('hide');

                $('#pleasewait').modal('show');
                //show toastr after 3
                setTimeout(function () {

                    // hide please wait modal
                }, 2000);
                setTimeout(function () {
                    tables.ajax.reload();
                    $('#pleasewait').modal('hide');
                }, 3000);
            },
            //if failed
            error: function (data) {
                toastr.error("Error Canceling a Request")
            }
        })
    });

}